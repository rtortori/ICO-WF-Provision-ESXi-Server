[{
	"Body": {
		"ClassId": "workflow.CustomDataTypeDefinition",
		"Description": "OS Install target device",
		"Label": "OS Install Target Datatype",
		"Name": "OSInstallTargetDataType",
		"ObjectType": "workflow.CustomDataTypeDefinition",
		"ParameterSet": [],
		"Properties": {
			"ObjectType": "workflow.CustomDataTypeProperties"
		},
		"SharedScope": "shared",
		"TypeDefinition": [{
			"CustomDataTypeProperties": {
				"ObjectType": "workflow.CustomDataProperty"
			},
			"Default": {
				"ObjectType": "workflow.DefaultValue"
			},
			"Description": "OS Install target device",
			"DisplayMeta": {
				"InventorySelector": true,
				"ObjectType": "workflow.DisplayMeta",
				"WidgetType": "None"
			},
			"Label": "OS Install Target Datatype",
			"Name": "OSInstallTargetDataType",
			"ObjectType": "workflow.TargetDataType",
			"Properties": [{
				"ConnectorAttribute": "RegisteredDevice.Moid",
				"DisplayAttributes": ["Name", "MgmtIpAddress", "Serial", "Firmware"],
				"ObjectType": "workflow.TargetProperty",
				"Selector": "/api/v1/compute/PhysicalSummaries?$filter=((Tags.Key eq 'Intersight.LicenseTier' AND Tags.Value eq 'Premier') AND (ManagementMode in ('IntersightStandalone', 'Intersight')))",
				"SelectorProperty": {
					"Method": "GET",
					"ObjectType": "workflow.SelectorProperty"
				},
				"SupportedObjects": ["compute.RackUnit", "compute.Blade", "compute.PhysicalSummary"]
			}],
			"Required": true
		}]
	},
	"ClassId": "bulk.RestSubRequest",
	"ObjectType": "bulk.RestSubRequest",
	"TargetMoid": "",
	"Uri": "/v1/workflow/CustomDataTypeDefinitions",
	"Verb": "POST"
}, {
	"Body": {
		"ClassId": "workflow.CustomDataTypeDefinition",
		"Description": "Lists the supported Windows Editions.",
		"Label": "Windows Editions",
		"Name": "WindowsEdition",
		"ObjectType": "workflow.CustomDataTypeDefinition",
		"ParameterSet": [],
		"Properties": {
			"ObjectType": "workflow.CustomDataTypeProperties"
		},
		"SharedScope": "shared",
		"TypeDefinition": [{
			"Default": {
				"ObjectType": "workflow.DefaultValue"
			},
			"Description": "Lists the supported Windows Editions.",
			"DisplayMeta": {
				"InventorySelector": true,
				"ObjectType": "workflow.DisplayMeta",
				"WidgetType": "None"
			},
			"Label": "Windows Edition",
			"Name": "WindowsEdition",
			"ObjectType": "workflow.PrimitiveDataType",
			"Properties": {
				"Constraints": {
					"EnumList": [{
						"Label": "Standard",
						"ObjectType": "workflow.EnumEntry",
						"Value": "Standard"
					}, {
						"Label": "Standard Core",
						"ObjectType": "workflow.EnumEntry",
						"Value": "StandardCore"
					}, {
						"Label": "Datacenter",
						"ObjectType": "workflow.EnumEntry",
						"Value": "Datacenter"
					}, {
						"Label": "Datacenter Core",
						"ObjectType": "workflow.EnumEntry",
						"Value": "DatacenterCore"
					}, {
						"Label": "Hyper-V",
						"ObjectType": "workflow.EnumEntry",
						"Value": "Core"
					}],
					"ObjectType": "workflow.Constraints"
				},
				"InventorySelector": [],
				"ObjectType": "workflow.PrimitiveDataProperty",
				"Type": "enum"
			},
			"Required": true
		}]
	},
	"ClassId": "bulk.RestSubRequest",
	"ObjectType": "bulk.RestSubRequest",
	"TargetMoid": "",
	"Uri": "/v1/workflow/CustomDataTypeDefinitions",
	"Verb": "POST"
}, {
	"Body": {
		"ClassId": "workflow.CustomDataTypeDefinition",
		"CompositeType": true,
		"Description": "OS Parameters.",
		"Label": "OS Parameters",
		"Name": "OSParameters",
		"ObjectType": "workflow.CustomDataTypeDefinition",
		"ParameterSet": [{
			"Condition": "eq",
			"ControlParameter": "Vendor",
			"EnableParameters": ["Edition"],
			"Name": "show-Edition",
			"ObjectType": "workflow.ParameterSet",
			"Value": "Microsoft"
		}, {
			"Condition": "eq",
			"ControlParameter": "Vendor",
			"EnableParameters": ["VlanId"],
			"Name": "show-VLanId",
			"ObjectType": "workflow.ParameterSet",
			"Value": "VMware"
		}],
		"Properties": {
			"ObjectType": "workflow.CustomDataTypeProperties"
		},
		"SharedScope": "shared",
		"TypeDefinition": [{
			"Default": {
				"ObjectType": "workflow.DefaultValue"
			},
			"Description": "Vendor.",
			"DisplayMeta": {
				"InventorySelector": true,
				"ObjectType": "workflow.DisplayMeta",
				"WidgetType": "None"
			},
			"Label": "Vendor",
			"Name": "Vendor",
			"ObjectType": "workflow.PrimitiveDataType",
			"Properties": {
				"Constraints": {
					"EnumList": [],
					"ObjectType": "workflow.Constraints"
				},
				"InventorySelector": [{
					"DisplayAttributes": ["Vendor"],
					"ObjectType": "workflow.MoReferenceProperty",
					"Selector": "/api/v1/softwarerepository/OperatingSystemFiles?$apply=groupby((Vendor),aggregate($count as count))&$orderby=Vendor",
					"SelectorProperty": {
						"Method": "GET",
						"ObjectType": "workflow.SelectorProperty"
					},
					"ValueAttribute": "Vendor"
				}],
				"ObjectType": "workflow.PrimitiveDataProperty",
				"Type": "string"
			}
		}, {
			"Default": {
				"ObjectType": "workflow.DefaultValue"
			},
			"Description": "Edition",
			"DisplayMeta": {
				"InventorySelector": true,
				"ObjectType": "workflow.DisplayMeta",
				"WidgetType": "None"
			},
			"Label": "Edition",
			"Name": "Edition",
			"ObjectType": "workflow.CustomDataType",
			"Properties": {
				"CatalogMoid": "shared",
				"CustomDataTypeName": "WindowsEdition",
				"ObjectType": "workflow.CustomDataProperty"
			},
			"Required": true
		}, {
			"Default": {
				"ObjectType": "workflow.DefaultValue"
			},
			"Description": "Specify the VLAN ID in which the ESXi host is turned on. Valid values ranges between 1 â€“ 4095.",
			"DisplayMeta": {
				"InventorySelector": true,
				"ObjectType": "workflow.DisplayMeta",
				"WidgetType": "None"
			},
			"Label": "VLAN ID",
			"Name": "VlanId",
			"ObjectType": "workflow.PrimitiveDataType",
			"Properties": {
				"Constraints": {
					"EnumList": [],
					"Max": 4095,
					"Min": 1,
					"ObjectType": "workflow.Constraints"
				},
				"InventorySelector": [],
				"ObjectType": "workflow.PrimitiveDataProperty",
				"Type": "integer"
			}
		}]
	},
	"ClassId": "bulk.RestSubRequest",
	"ObjectType": "bulk.RestSubRequest",
	"TargetMoid": "",
	"Uri": "/v1/workflow/CustomDataTypeDefinitions",
	"Verb": "POST"
}, {
	"Body": {
		"ClassId": "workflow.CustomDataTypeDefinition",
		"Description": "The install modes supported are - Cisco/Embedded.",
		"Label": "Installation Mode",
		"Name": "InstallModeType",
		"ObjectType": "workflow.CustomDataTypeDefinition",
		"ParameterSet": [],
		"Properties": {
			"ObjectType": "workflow.CustomDataTypeProperties"
		},
		"SharedScope": "shared",
		"TypeDefinition": [{
			"Default": {
				"ObjectType": "workflow.DefaultValue"
			},
			"Description": "The install modes supported are - Cisco//Embedded.",
			"DisplayMeta": {
				"InventorySelector": true,
				"ObjectType": "workflow.DisplayMeta",
				"WidgetType": "None"
			},
			"Label": "Installation Mode",
			"Name": "InstallModeType",
			"ObjectType": "workflow.PrimitiveDataType",
			"Properties": {
				"Constraints": {
					"EnumList": [{
						"Label": "Cisco",
						"ObjectType": "workflow.EnumEntry",
						"Value": "Cisco"
					}, {
						"Label": "Custom",
						"ObjectType": "workflow.EnumEntry",
						"Value": "Custom"
					}, {
						"Label": "Embedded",
						"ObjectType": "workflow.EnumEntry",
						"Value": "Embedded"
					}],
					"ObjectType": "workflow.Constraints"
				},
				"InventorySelector": [],
				"ObjectType": "workflow.PrimitiveDataProperty",
				"Type": "enum"
			}
		}]
	},
	"ClassId": "bulk.RestSubRequest",
	"ObjectType": "bulk.RestSubRequest",
	"TargetMoid": "",
	"Uri": "/v1/workflow/CustomDataTypeDefinitions",
	"Verb": "POST"
}, {
	"Body": {
		"ClassId": "workflow.CustomDataTypeDefinition",
		"Description": " Lists the supported IP configurations for OS installation - static or dynamic using DHCP.",
		"Label": "IP Configuration Type",
		"Name": "IpConfigurationType",
		"ObjectType": "workflow.CustomDataTypeDefinition",
		"ParameterSet": [],
		"Properties": {
			"ObjectType": "workflow.CustomDataTypeProperties"
		},
		"SharedScope": "shared",
		"TypeDefinition": [{
			"Default": {
				"ObjectType": "workflow.DefaultValue"
			},
			"Description": " Lists the supported IP configurations for OS installation - static or dynamic using DHCP.",
			"DisplayMeta": {
				"InventorySelector": true,
				"ObjectType": "workflow.DisplayMeta",
				"WidgetType": "None"
			},
			"Label": "IP Configuration Type",
			"Name": "IpConfigType",
			"ObjectType": "workflow.PrimitiveDataType",
			"Properties": {
				"Constraints": {
					"EnumList": [{
						"Label": "Static IP",
						"ObjectType": "workflow.EnumEntry",
						"Value": "static"
					}, {
						"Label": "DHCP",
						"ObjectType": "workflow.EnumEntry",
						"Value": "DHCP"
					}],
					"ObjectType": "workflow.Constraints"
				},
				"InventorySelector": [],
				"ObjectType": "workflow.PrimitiveDataProperty",
				"Type": "enum"
			},
			"Required": true
		}]
	},
	"ClassId": "bulk.RestSubRequest",
	"ObjectType": "bulk.RestSubRequest",
	"TargetMoid": "",
	"Uri": "/v1/workflow/CustomDataTypeDefinitions",
	"Verb": "POST"
}, {
	"Body": {
		"ClassId": "workflow.CustomDataTypeDefinition",
		"Description": "Lists the Internet Protocol Versions for OS installation - IPv4 or IPv6.",
		"Label": "Static IP Configuration",
		"Name": "IpVersionType",
		"ObjectType": "workflow.CustomDataTypeDefinition",
		"ParameterSet": [],
		"Properties": {
			"ObjectType": "workflow.CustomDataTypeProperties"
		},
		"SharedScope": "shared",
		"TypeDefinition": [{
			"Default": {
				"ObjectType": "workflow.DefaultValue"
			},
			"Description": "Lists the Internet Protocol Versions for OS installation - IPv4 or IPv6.",
			"DisplayMeta": {
				"InventorySelector": true,
				"ObjectType": "workflow.DisplayMeta",
				"WidgetType": "None"
			},
			"Label": "Static IP Configuration",
			"Name": "IpVersionType",
			"ObjectType": "workflow.PrimitiveDataType",
			"Properties": {
				"Constraints": {
					"EnumList": [{
						"Label": "IPv4",
						"ObjectType": "workflow.EnumEntry",
						"Value": "IPv4"
					}, {
						"Label": "IPv6",
						"ObjectType": "workflow.EnumEntry",
						"Value": "IPv6"
					}],
					"ObjectType": "workflow.Constraints"
				},
				"InventorySelector": [],
				"ObjectType": "workflow.PrimitiveDataProperty",
				"Type": "enum"
			},
			"Required": true
		}]
	},
	"ClassId": "bulk.RestSubRequest",
	"ObjectType": "bulk.RestSubRequest",
	"TargetMoid": "",
	"Uri": "/v1/workflow/CustomDataTypeDefinitions",
	"Verb": "POST"
}, {
	"Body": {
		"ClassId": "workflow.CustomDataTypeDefinition",
		"Description": "Lists the Internet Protocol Versions for OS installation - IPv4 or IPv6.",
		"Label": "IP Configuration",
		"Name": "DhcpVersionType",
		"ObjectType": "workflow.CustomDataTypeDefinition",
		"ParameterSet": [],
		"Properties": {
			"ObjectType": "workflow.CustomDataTypeProperties"
		},
		"SharedScope": "shared",
		"TypeDefinition": [{
			"Default": {
				"ObjectType": "workflow.DefaultValue"
			},
			"Description": "Lists the Internet Protocol Versions for OS installation - IPv4 or IPv6.",
			"DisplayMeta": {
				"InventorySelector": true,
				"ObjectType": "workflow.DisplayMeta",
				"WidgetType": "None"
			},
			"Label": "IP Configuratione",
			"Name": "DhcpVersionType",
			"ObjectType": "workflow.PrimitiveDataType",
			"Properties": {
				"Constraints": {
					"EnumList": [{
						"Label": "IPv4",
						"ObjectType": "workflow.EnumEntry",
						"Value": "IPv4"
					}, {
						"Label": "IPv6",
						"ObjectType": "workflow.EnumEntry",
						"Value": "IPv6"
					}],
					"ObjectType": "workflow.Constraints"
				},
				"InventorySelector": [],
				"ObjectType": "workflow.PrimitiveDataProperty",
				"Type": "enum"
			},
			"Required": true
		}]
	},
	"ClassId": "bulk.RestSubRequest",
	"ObjectType": "bulk.RestSubRequest",
	"TargetMoid": "",
	"Uri": "/v1/workflow/CustomDataTypeDefinitions",
	"Verb": "POST"
}, {
	"Body": {
		"ClassId": "workflow.CustomDataTypeDefinition",
		"Description": "An IPv6 address represented as eight groups of four hexadecimal digits, separated by colons, such as '2001:0db8:85a3:0000:0000:8a2e:0370:7334'.",
		"Label": "IPv6 Address",
		"Name": "IpV6AddressType",
		"ObjectType": "workflow.CustomDataTypeDefinition",
		"ParameterSet": [],
		"Properties": {
			"ObjectType": "workflow.CustomDataTypeProperties"
		},
		"SharedScope": "shared",
		"TypeDefinition": [{
			"Default": {
				"ObjectType": "workflow.DefaultValue"
			},
			"Description": "An IPv6 address represented as eight groups of four hexadecimal digits, separated by colons, such as '2001:0db8:85a3:0000:0000:8a2e:0370:7334'.",
			"DisplayMeta": {
				"InventorySelector": true,
				"ObjectType": "workflow.DisplayMeta",
				"WidgetType": "None"
			},
			"Label": "IPv6 Address",
			"Name": "IpV6Address",
			"ObjectType": "workflow.PrimitiveDataType",
			"Properties": {
				"Constraints": {
					"EnumList": [],
					"ObjectType": "workflow.Constraints",
					"Regex": "^(([0-9A-Fa-f]{1,4}:([0-9A-Fa-f]{1,4}:([0-9A-Fa-f]{1,4}:([0-9A-Fa-f]{1,4}:([0-9A-Fa-f]{1,4}:[0-9A-Fa-f]{0,4}|:[0-9A-Fa-f]{1,4})?|(:[0-9A-Fa-f]{1,4}){0,2})|(:[0-9A-Fa-f]{1,4}){0,3})|(:[0-9A-Fa-f]{1,4}){0,4})|:(:[0-9A-Fa-f]{1,4}){0,5})((:[0-9A-Fa-f]{1,4}){2}|:(25[0-5]|(2[0-4]|1[0-9]|[1-9])?[0-9])(\\.(25[0-5]|(2[0-4]|1[0-9]|[1-9])?[0-9])){3})|(([0-9A-Fa-f]{1,4}:){1,6}|:):[0-9A-Fa-f]{0,4}|([0-9A-Fa-f]{1,4}:){7}:)$"
				},
				"InventorySelector": [],
				"ObjectType": "workflow.PrimitiveDataProperty",
				"Type": "string"
			}
		}]
	},
	"ClassId": "bulk.RestSubRequest",
	"ObjectType": "bulk.RestSubRequest",
	"TargetMoid": "",
	"Uri": "/v1/workflow/CustomDataTypeDefinitions",
	"Verb": "POST"
}, {
	"Body": {
		"ClassId": "workflow.CustomDataTypeDefinition",
		"CompositeType": true,
		"Description": "The configuration data of a single IPv6 interface, including IP address, IPv6 prefix and default gateway.",
		"Label": "IPv6 Configuration",
		"Name": "IPV6ConfigType",
		"ObjectType": "workflow.CustomDataTypeDefinition",
		"ParameterSet": [],
		"Properties": {
			"ObjectType": "workflow.CustomDataTypeProperties"
		},
		"SharedScope": "shared",
		"TypeDefinition": [{
			"Default": {
				"ObjectType": "workflow.DefaultValue"
			},
			"Description": "The IPv6 Address, represented as eight groups of four hexadecimal digits, separated by colons.",
			"DisplayMeta": {
				"InventorySelector": true,
				"ObjectType": "workflow.DisplayMeta",
				"WidgetType": "None"
			},
			"Label": "IP Address",
			"Name": "IPAddress",
			"ObjectType": "workflow.CustomDataType",
			"Properties": {
				"CatalogMoid": "shared",
				"CustomDataTypeName": "IpV6AddressType",
				"ObjectType": "workflow.CustomDataProperty"
			},
			"Required": true
		}, {
			"Default": {
				"ObjectType": "workflow.DefaultValue"
			},
			"Description": "IPv6 subnet prefix to be configured.",
			"DisplayMeta": {
				"InventorySelector": true,
				"ObjectType": "workflow.DisplayMeta",
				"WidgetType": "None"
			},
			"Label": "Prefix Length",
			"Name": "Prefix",
			"ObjectType": "workflow.PrimitiveDataType",
			"Properties": {
				"Constraints": {
					"EnumList": [],
					"Max": 128,
					"Min": 1,
					"ObjectType": "workflow.Constraints"
				},
				"InventorySelector": [],
				"ObjectType": "workflow.PrimitiveDataProperty",
				"Type": "integer"
			},
			"Required": true
		}, {
			"Default": {
				"ObjectType": "workflow.DefaultValue"
			},
			"Description": "The IPv6 address of the default gateway.",
			"DisplayMeta": {
				"InventorySelector": true,
				"ObjectType": "workflow.DisplayMeta",
				"WidgetType": "None"
			},
			"Label": "IPv6 Gateway",
			"Name": "Gateway",
			"ObjectType": "workflow.CustomDataType",
			"Properties": {
				"CatalogMoid": "shared",
				"CustomDataTypeName": "IpV6AddressType",
				"ObjectType": "workflow.CustomDataProperty"
			},
			"Required": true
		}]
	},
	"ClassId": "bulk.RestSubRequest",
	"ObjectType": "bulk.RestSubRequest",
	"TargetMoid": "",
	"Uri": "/v1/workflow/CustomDataTypeDefinitions",
	"Verb": "POST"
}, {
	"Body": {
		"ClassId": "workflow.CustomDataTypeDefinition",
		"Description": "An IPv4 address represented in dot decimal notation, such as '192.168.1.6'.",
		"Label": "IPv4 Address",
		"Name": "IpV4AddressType",
		"ObjectType": "workflow.CustomDataTypeDefinition",
		"ParameterSet": [],
		"Properties": {
			"ObjectType": "workflow.CustomDataTypeProperties"
		},
		"SharedScope": "shared",
		"TypeDefinition": [{
			"Default": {
				"ObjectType": "workflow.DefaultValue"
			},
			"Description": "An IPv4 address represented in dot decimal notation, such as '192.168.1.6'.",
			"DisplayMeta": {
				"InventorySelector": true,
				"ObjectType": "workflow.DisplayMeta",
				"WidgetType": "None"
			},
			"Label": "IPv4 Address",
			"Name": "IpV4Address",
			"ObjectType": "workflow.PrimitiveDataType",
			"Properties": {
				"Constraints": {
					"EnumList": [],
					"ObjectType": "workflow.Constraints",
					"Regex": "^([1-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.([1-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])$"
				},
				"InventorySelector": [],
				"ObjectType": "workflow.PrimitiveDataProperty",
				"Type": "string"
			}
		}]
	},
	"ClassId": "bulk.RestSubRequest",
	"ObjectType": "bulk.RestSubRequest",
	"TargetMoid": "",
	"Uri": "/v1/workflow/CustomDataTypeDefinitions",
	"Verb": "POST"
}, {
	"Body": {
		"ClassId": "workflow.CustomDataTypeDefinition",
		"Description": "An IPv4 subnet mask represented in dot decimal notation, such as '255.255.255.0'.",
		"Label": "IPv4 Subnet Mask",
		"Name": "IpV4SubnetMaskType",
		"ObjectType": "workflow.CustomDataTypeDefinition",
		"ParameterSet": [],
		"Properties": {
			"ObjectType": "workflow.CustomDataTypeProperties"
		},
		"SharedScope": "shared",
		"TypeDefinition": [{
			"Default": {
				"ObjectType": "workflow.DefaultValue"
			},
			"Description": "An IPv4 subnet mask represented in dot decimal notation, such as '255.255.255.0'.",
			"DisplayMeta": {
				"InventorySelector": true,
				"ObjectType": "workflow.DisplayMeta",
				"WidgetType": "None"
			},
			"Label": "IPv4 Subnet Mask",
			"Name": "IpV4SubnetMaskType",
			"ObjectType": "workflow.PrimitiveDataType",
			"Properties": {
				"Constraints": {
					"EnumList": [],
					"ObjectType": "workflow.Constraints",
					"Regex": "^(((255.){3}(255|254|252|248|240|224|192|128|0))|((255.){2}(255|254|252|248|240|224|192|128|0).0)|((255.)(255|254|252|248|240|224|192|128|0)(.0){2})|((255|254|252|248|240|224|192|128|0+)(.0){3}))$"
				},
				"InventorySelector": [],
				"ObjectType": "workflow.PrimitiveDataProperty",
				"Type": "string"
			}
		}]
	},
	"ClassId": "bulk.RestSubRequest",
	"ObjectType": "bulk.RestSubRequest",
	"TargetMoid": "",
	"Uri": "/v1/workflow/CustomDataTypeDefinitions",
	"Verb": "POST"
}, {
	"Body": {
		"ClassId": "workflow.CustomDataTypeDefinition",
		"CompositeType": true,
		"Description": "The configuration data of a single IPv4 interface, including IP address, IPv4 prefix and default gateway.",
		"Label": "IPv4 Configuration",
		"Name": "IPV4ConfigType",
		"ObjectType": "workflow.CustomDataTypeDefinition",
		"ParameterSet": [],
		"Properties": {
			"ObjectType": "workflow.CustomDataTypeProperties"
		},
		"SharedScope": "shared",
		"TypeDefinition": [{
			"Default": {
				"ObjectType": "workflow.DefaultValue"
			},
			"Description": "The IPv4 Address, represented in the standard dot-decimal notation, e.g. 192.168.1.3.",
			"DisplayMeta": {
				"InventorySelector": true,
				"ObjectType": "workflow.DisplayMeta",
				"WidgetType": "None"
			},
			"Label": "IP address",
			"Name": "IPAddress",
			"ObjectType": "workflow.CustomDataType",
			"Properties": {
				"CatalogMoid": "shared",
				"CustomDataTypeName": "IpV4AddressType",
				"ObjectType": "workflow.CustomDataProperty"
			},
			"Required": true
		}, {
			"Default": {
				"ObjectType": "workflow.DefaultValue"
			},
			"Description": "The IPv4 Netmask, represented in the standard dot-decimal notation, e.g. 255.255.255.0.",
			"DisplayMeta": {
				"InventorySelector": true,
				"ObjectType": "workflow.DisplayMeta",
				"WidgetType": "None"
			},
			"Label": "Netmask",
			"Name": "Netmask",
			"ObjectType": "workflow.CustomDataType",
			"Properties": {
				"CatalogMoid": "shared",
				"CustomDataTypeName": "IpV4SubnetMaskType",
				"ObjectType": "workflow.CustomDataProperty"
			},
			"Required": true
		}, {
			"Default": {
				"ObjectType": "workflow.DefaultValue"
			},
			"Description": "The IPv4 address of the default gateway.",
			"DisplayMeta": {
				"InventorySelector": true,
				"ObjectType": "workflow.DisplayMeta",
				"WidgetType": "None"
			},
			"Label": "Gateway",
			"Name": "Gateway",
			"ObjectType": "workflow.CustomDataType",
			"Properties": {
				"CatalogMoid": "shared",
				"CustomDataTypeName": "IpV4AddressType",
				"ObjectType": "workflow.CustomDataProperty"
			},
			"Required": true
		}]
	},
	"ClassId": "bulk.RestSubRequest",
	"ObjectType": "bulk.RestSubRequest",
	"TargetMoid": "",
	"Uri": "/v1/workflow/CustomDataTypeDefinitions",
	"Verb": "POST"
}, {
	"Body": {
		"ClassId": "workflow.CustomDataTypeDefinition",
		"Description": "A IPv4 or IPv6 address.\n\nThis type accepts the following values:  \n- IPv4 address, e.g. 192.168.1.4.\n- IPv6 address, e.g. fe80::20c:29ff:fe3c:55f1.\n",
		"Label": "IP Address Type",
		"Name": "IPAddressType",
		"ObjectType": "workflow.CustomDataTypeDefinition",
		"ParameterSet": [],
		"Properties": {
			"ObjectType": "workflow.CustomDataTypeProperties"
		},
		"SharedScope": "shared",
		"TypeDefinition": [{
			"Default": {
				"ObjectType": "workflow.DefaultValue"
			},
			"Description": "IPv4 or IPv6 address.\n\nThis type accepts the following values:      \n- IPv4 address, e.g. 192.168.1.4.\n- IPv6 address, e.g. fe80::20c:29ff:fe3c:55f1.\n",
			"DisplayMeta": {
				"InventorySelector": true,
				"ObjectType": "workflow.DisplayMeta",
				"WidgetType": "None"
			},
			"Label": "Internet Address",
			"Name": "IPAddressType",
			"ObjectType": "workflow.PrimitiveDataType",
			"Properties": {
				"Constraints": {
					"EnumList": [],
					"ObjectType": "workflow.Constraints",
					"Regex": "^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$|^(([0-9A-Fa-f]{1,4}:([0-9A-Fa-f]{1,4}:([0-9A-Fa-f]{1,4}:([0-9A-Fa-f]{1,4}:([0-9A-Fa-f]{1,4}:[0-9A-Fa-f]{0,4}|:[0-9A-Fa-f]{1,4})?|(:[0-9A-Fa-f]{1,4}){0,2})|(:[0-9A-Fa-f]{1,4}){0,3})|(:[0-9A-Fa-f]{1,4}){0,4})|:(:[0-9A-Fa-f]{1,4}){0,5})((:[0-9A-Fa-f]{1,4}){2}|:(25[0-5]|(2[0-4]|1[0-9]|[1-9])?[0-9])(\\.(25[0-5]|(2[0-4]|1[0-9]|[1-9])?[0-9])){3})|(([0-9A-Fa-f]{1,4}:){1,6}|:):[0-9A-Fa-f]{0,4}|([0-9A-Fa-f]{1,4}:){7}:)$"
				},
				"InventorySelector": [],
				"ObjectType": "workflow.PrimitiveDataProperty",
				"Type": "string"
			}
		}]
	},
	"ClassId": "bulk.RestSubRequest",
	"ObjectType": "bulk.RestSubRequest",
	"TargetMoid": "",
	"Uri": "/v1/workflow/CustomDataTypeDefinitions",
	"Verb": "POST"
}, {
	"Body": {
		"ClassId": "workflow.CustomDataTypeDefinition",
		"CompositeType": true,
		"Description": "Answers provided by user for the unattended OS installation.",
		"Label": "OS Answer Property Values",
		"Name": "AnswersType",
		"ObjectType": "workflow.CustomDataTypeDefinition",
		"ParameterSet": [{
			"Condition": "eq",
			"ControlParameter": "IpConfigType",
			"EnableParameters": ["IpVersionType", "Hostname", "NameServer", "RootPassword", "IsRootPasswordCrypted"],
			"Name": "show-staticConfiguration",
			"ObjectType": "workflow.ParameterSet",
			"Value": "static"
		}, {
			"Condition": "eq",
			"ControlParameter": "IpConfigType",
			"EnableParameters": ["DhcpVersionType", "Hostname", "RootPassword", "IsRootPasswordCrypted"],
			"Name": "show-DHCPConfiguration",
			"ObjectType": "workflow.ParameterSet",
			"Value": "DHCP"
		}, {
			"Condition": "eq",
			"ControlParameter": "IpVersionType",
			"EnableParameters": ["Ipv4Configuration"],
			"Name": "show-IPv4Configuration",
			"ObjectType": "workflow.ParameterSet",
			"Value": "IPv4"
		}, {
			"Condition": "eq",
			"ControlParameter": "IpVersionType",
			"EnableParameters": ["Ipv6Configuration"],
			"Name": "show-IPv6Configuration",
			"ObjectType": "workflow.ParameterSet",
			"Value": "IPv6"
		}, {
			"Condition": "eq",
			"ControlParameter": "Vendor",
			"EnableParameters": ["ProductKey"],
			"Name": "show-ProductKey",
			"ObjectType": "workflow.ParameterSet",
			"Value": "Microsoft"
		}],
		"Properties": {
			"ObjectType": "workflow.CustomDataTypeProperties"
		},
		"SharedScope": "shared",
		"TypeDefinition": [{
			"Default": {
				"ObjectType": "workflow.DefaultValue"
			},
			"Description": "Vendor.",
			"DisplayMeta": {
				"InventorySelector": true,
				"ObjectType": "workflow.DisplayMeta",
				"WidgetType": "None"
			},
			"Label": "Vendor",
			"Name": "Vendor",
			"ObjectType": "workflow.PrimitiveDataType",
			"Properties": {
				"Constraints": {
					"EnumList": [],
					"ObjectType": "workflow.Constraints"
				},
				"InventorySelector": [{
					"DisplayAttributes": ["Vendor"],
					"ObjectType": "workflow.MoReferenceProperty",
					"Selector": "/api/v1/softwarerepository/OperatingSystemFiles?$apply=groupby((Vendor),aggregate($count as count))&$orderby=Vendor",
					"SelectorProperty": {
						"Method": "GET",
						"ObjectType": "workflow.SelectorProperty"
					},
					"ValueAttribute": "Vendor"
				}],
				"ObjectType": "workflow.PrimitiveDataProperty",
				"Type": "string"
			}
		}, {
			"Default": {
				"ObjectType": "workflow.DefaultValue"
			},
			"Description": "Network Device where the IP address must be configured. Network Interface names and MAC address are supported.",
			"DisplayMeta": {
				"InventorySelector": true,
				"ObjectType": "workflow.DisplayMeta",
				"WidgetType": "None"
			},
			"Label": "NetworkDevice",
			"Name": "NetworkDevice",
			"ObjectType": "workflow.PrimitiveDataType",
			"Properties": {
				"Constraints": {
					"EnumList": [],
					"ObjectType": "workflow.Constraints"
				},
				"InventorySelector": [],
				"ObjectType": "workflow.PrimitiveDataProperty",
				"Type": "string"
			}
		}, {
			"Default": {
				"ObjectType": "workflow.DefaultValue"
			},
			"Description": "IP configuration type. Values are Static or Dynamic configuration of IP.\n In case of static IP configuration, IP address, gateway and other details need to be populated. In case of dynamic the IP configuration is obtained dynamically from DHCP.",
			"DisplayMeta": {
				"InventorySelector": true,
				"ObjectType": "workflow.DisplayMeta",
				"WidgetType": "None"
			},
			"Label": "IP configuration Type",
			"Name": "IpConfigType",
			"ObjectType": "workflow.CustomDataType",
			"Properties": {
				"CatalogMoid": "shared",
				"CustomDataTypeName": "IpConfigurationType",
				"ObjectType": "workflow.CustomDataProperty"
			},
			"Required": true
		}, {
			"Default": {
				"ObjectType": "workflow.DefaultValue"
			},
			"Description": "Static IP Version Type. Values are IPv4 or IPv6 protocol version.\n In case of IPv4 configuration, IP address, gateway and other details need to be populated. In case of dynamic the IP configuration is obtained dynamically from DHCP.",
			"DisplayMeta": {
				"InventorySelector": true,
				"ObjectType": "workflow.DisplayMeta",
				"WidgetType": "None"
			},
			"Label": "Static IP Version Type",
			"Name": "IpVersionType",
			"ObjectType": "workflow.CustomDataType",
			"Properties": {
				"CatalogMoid": "shared",
				"CustomDataTypeName": "IpVersionType",
				"ObjectType": "workflow.CustomDataProperty"
			},
			"Required": true
		}, {
			"Default": {
				"ObjectType": "workflow.DefaultValue"
			},
			"Description": "DHCP IP Version Type. Values are IPv4 or IPv6 protocol version.\n In case of IPv4 configuration, IP address, gateway and other details need to be populated. In case of dynamic the IP configuration is obtained dynamically from DHCP.",
			"DisplayMeta": {
				"InventorySelector": true,
				"ObjectType": "workflow.DisplayMeta",
				"WidgetType": "None"
			},
			"Label": "DHCP IP Version Type",
			"Name": "DhcpVersionType",
			"ObjectType": "workflow.CustomDataType",
			"Properties": {
				"CatalogMoid": "shared",
				"CustomDataTypeName": "DhcpVersionType",
				"ObjectType": "workflow.CustomDataProperty"
			},
			"Required": true
		}, {
			"Default": {
				"ObjectType": "workflow.DefaultValue"
			},
			"Description": "In case of static IP configuration, IP address, prefix and gateway details are provided.",
			"DisplayMeta": {
				"InventorySelector": true,
				"ObjectType": "workflow.DisplayMeta",
				"WidgetType": "None"
			},
			"Label": "IPV6 Configuration ",
			"Name": "Ipv6Configuration",
			"ObjectType": "workflow.CustomDataType",
			"Properties": {
				"CatalogMoid": "shared",
				"CustomDataTypeName": "IPV6ConfigType",
				"ObjectType": "workflow.CustomDataProperty"
			},
			"Required": true
		}, {
			"Default": {
				"ObjectType": "workflow.DefaultValue"
			},
			"Description": "In case of static IP configuration, IP address, netmask and gateway details are provided.",
			"DisplayMeta": {
				"InventorySelector": true,
				"ObjectType": "workflow.DisplayMeta",
				"WidgetType": "None"
			},
			"Label": "IPV4 Configuration ",
			"Name": "Ipv4Configuration",
			"ObjectType": "workflow.CustomDataType",
			"Properties": {
				"CatalogMoid": "shared",
				"CustomDataTypeName": "IPV4ConfigType",
				"ObjectType": "workflow.CustomDataProperty"
			},
			"Required": true
		}, {
			"Default": {
				"ObjectType": "workflow.DefaultValue"
			},
			"Description": "Hostname to be configured for the server in the OS.",
			"DisplayMeta": {
				"InventorySelector": true,
				"ObjectType": "workflow.DisplayMeta",
				"WidgetType": "None"
			},
			"Label": "Hostname",
			"Name": "Hostname",
			"ObjectType": "workflow.PrimitiveDataType",
			"Properties": {
				"Constraints": {
					"EnumList": [],
					"ObjectType": "workflow.Constraints"
				},
				"InventorySelector": [],
				"ObjectType": "workflow.PrimitiveDataProperty",
				"Type": "string"
			},
			"Required": true
		}, {
			"Default": {
				"ObjectType": "workflow.DefaultValue"
			},
			"Description": "IP address of the name server to be configured in the OS.",
			"DisplayMeta": {
				"InventorySelector": true,
				"ObjectType": "workflow.DisplayMeta",
				"WidgetType": "None"
			},
			"Label": "Name Server",
			"Name": "NameServer",
			"ObjectType": "workflow.CustomDataType",
			"Properties": {
				"CatalogMoid": "shared",
				"CustomDataTypeName": "IPAddressType",
				"ObjectType": "workflow.CustomDataProperty"
			},
			"Required": true
		}, {
			"Default": {
				"ObjectType": "workflow.DefaultValue"
			},
			"Description": "Password configured for the root / administrator user in the OS. You can enter a plain text or an encrypted password. Intersight encrypts the plaintext password. Enable the Encrypted Password option to provide an encrypted password. For more details on encrypting passwords, see Help Center.",
			"DisplayMeta": {
				"InventorySelector": true,
				"ObjectType": "workflow.DisplayMeta",
				"WidgetType": "None"
			},
			"Label": "Root Password",
			"Name": "RootPassword",
			"ObjectType": "workflow.PrimitiveDataType",
			"Properties": {
				"Constraints": {
					"EnumList": [],
					"ObjectType": "workflow.Constraints"
				},
				"InventorySelector": [],
				"ObjectType": "workflow.PrimitiveDataProperty",
				"Secure": true,
				"Type": "string"
			},
			"Required": true
		}, {
			"Default": {
				"ObjectType": "workflow.DefaultValue"
			},
			"Description": "Enable to indicate Root Password provided is encrypted.",
			"DisplayMeta": {
				"InventorySelector": true,
				"ObjectType": "workflow.DisplayMeta",
				"WidgetType": "None"
			},
			"Label": "Password provided is in encrypted format",
			"Name": "IsRootPasswordCrypted",
			"ObjectType": "workflow.PrimitiveDataType",
			"Properties": {
				"Constraints": {
					"EnumList": [],
					"ObjectType": "workflow.Constraints"
				},
				"InventorySelector": [],
				"ObjectType": "workflow.PrimitiveDataProperty",
				"Type": "boolean"
			},
			"Required": true
		}, {
			"Default": {
				"ObjectType": "workflow.DefaultValue"
			},
			"Description": " The product key to be used for a specific version of Windows installation. It is required for all Windows Editions except HyperV",
			"DisplayMeta": {
				"InventorySelector": true,
				"ObjectType": "workflow.DisplayMeta",
				"WidgetType": "None"
			},
			"Label": "Product Key",
			"Name": "ProductKey",
			"ObjectType": "workflow.PrimitiveDataType",
			"Properties": {
				"Constraints": {
					"EnumList": [],
					"ObjectType": "workflow.Constraints"
				},
				"InventorySelector": [],
				"ObjectType": "workflow.PrimitiveDataProperty",
				"Secure": true,
				"Type": "string"
			}
		}]
	},
	"ClassId": "bulk.RestSubRequest",
	"ObjectType": "bulk.RestSubRequest",
	"TargetMoid": "",
	"Uri": "/v1/workflow/CustomDataTypeDefinitions",
	"Verb": "POST"
}, {
	"Body": {
		"ClassId": "workflow.CustomDataTypeDefinition",
		"CompositeType": true,
		"Description": "All the Inputs required for the Operating System Install workflow along with Parameter set Conditions",
		"Label": "Operating System Install Configuration Parameters",
		"Name": "OSInstallInputs",
		"ObjectType": "workflow.CustomDataTypeDefinition",
		"ParameterSet": [{
			"Condition": "eq",
			"ControlParameter": "InstallMode",
			"EnableParameters": ["Answers"],
			"Name": "show-Answers",
			"ObjectType": "workflow.ParameterSet",
			"Value": "Cisco"
		}, {
			"Condition": "eq",
			"ControlParameter": "InstallMode",
			"EnableParameters": ["AdditionalParameters", "ConfigurationFile"],
			"Name": "show-AdditionalParameter",
			"ObjectType": "workflow.ParameterSet",
			"Value": "Custom"
		}, {
			"Condition": "matchesPattern",
			"ControlParameter": "ScuImage.Name",
			"EnableParameters": ["InstallTarget"],
			"Name": "show-InstallTargets",
			"ObjectType": "workflow.ParameterSet",
			"Value": ".+"
		}],
		"Properties": {
			"ObjectType": "workflow.CustomDataTypeProperties"
		},
		"SharedScope": "shared",
		"TypeDefinition": [{
			"Default": {
				"ObjectType": "workflow.DefaultValue"
			},
			"DisplayMeta": {
				"InventorySelector": true,
				"ObjectType": "workflow.DisplayMeta",
				"WidgetType": "None"
			},
			"Label": "Server",
			"Name": "Server",
			"ObjectType": "workflow.MoReferenceDataType",
			"Properties": [{
				"DisplayAttributes": ["Name", "MgmtIpAddress", "Serial", "Firmware"],
				"ObjectType": "workflow.MoReferenceProperty",
				"Selector": "/api/v1/compute/PhysicalSummaries?$filter=((Tags.Key eq 'Intersight.LicenseTier' AND Tags.Value eq 'Premier') AND (ManagementMode in ('IntersightStandalone', 'Intersight')))",
				"SelectorProperty": {
					"Method": "GET",
					"ObjectType": "workflow.SelectorProperty"
				}
			}],
			"Required": true
		}, {
			"Default": {
				"ObjectType": "workflow.DefaultValue"
			},
			"DisplayMeta": {
				"InventorySelector": true,
				"ObjectType": "workflow.DisplayMeta",
				"WidgetType": "None"
			},
			"Label": "OS Image",
			"Name": "OsImage",
			"ObjectType": "workflow.MoReferenceDataType",
			"Properties": [{
				"DisplayAttributes": ["Name", "Vendor", "Version", "Source.FileLocation", "Source.LocationLink"],
				"ObjectType": "workflow.MoReferenceProperty",
				"Selector": "/api/v1/softwarerepository/OperatingSystemFiles",
				"SelectorProperty": {
					"Method": "GET",
					"ObjectType": "workflow.SelectorProperty"
				}
			}],
			"Required": true
		}, {
			"Default": {
				"ObjectType": "workflow.DefaultValue"
			},
			"Description": "OS Specific Parameters like Edition for Windows Operating systems.",
			"DisplayMeta": {
				"InventorySelector": true,
				"ObjectType": "workflow.DisplayMeta",
				"WidgetType": "None"
			},
			"InputParameters": {
				"Vendor": "${datatype.type.OsImage.Vendor}"
			},
			"Label": "OS Parameters",
			"Name": "OSParameters",
			"ObjectType": "workflow.CustomDataType",
			"Properties": {
				"CatalogMoid": "shared",
				"CustomDataTypeName": "OSParameters",
				"ObjectType": "workflow.CustomDataProperty"
			}
		}, {
			"Default": {
				"ObjectType": "workflow.DefaultValue"
			},
			"Description": "The install modes supported are - Cisco/Embedded.",
			"DisplayMeta": {
				"InventorySelector": true,
				"ObjectType": "workflow.DisplayMeta",
				"WidgetType": "None"
			},
			"Label": "Installation Mode",
			"Name": "InstallMode",
			"ObjectType": "workflow.CustomDataType",
			"Properties": {
				"CatalogMoid": "shared",
				"CustomDataTypeName": "InstallModeType",
				"ObjectType": "workflow.CustomDataProperty"
			},
			"Required": true
		}, {
			"Default": {
				"ObjectType": "workflow.DefaultValue"
			},
			"Description": "Required for Cisco mode and optional for Embedded mode.",
			"DisplayMeta": {
				"InventorySelector": true,
				"ObjectType": "workflow.DisplayMeta",
				"WidgetType": "None"
			},
			"Label": "SCU Image",
			"Name": "ScuImage",
			"ObjectType": "workflow.MoReferenceDataType",
			"Properties": [{
				"DisplayAttributes": ["Name", "Version", "SupportedModels", "Source.FileLocation", "Source.LocationLink"],
				"ObjectType": "workflow.MoReferenceProperty",
				"Selector": "/api/v1/firmware/ServerConfigurationUtilityDistributables",
				"SelectorProperty": {
					"Method": "GET",
					"ObjectType": "workflow.SelectorProperty"
				}
			}]
		}, {
			"Default": {
				"ObjectType": "workflow.DefaultValue"
			},
			"DisplayMeta": {
				"InventorySelector": true,
				"ObjectType": "workflow.DisplayMeta",
				"WidgetType": "None"
			},
			"Label": "Configuration File",
			"Name": "ConfigurationFile",
			"ObjectType": "workflow.MoReferenceDataType",
			"Properties": [{
				"DisplayAttributes": ["Name"],
				"ObjectType": "workflow.MoReferenceProperty",
				"Selector": "/api/v1/os/ConfigurationFiles?$filter=(Supported eq false)",
				"SelectorProperty": {
					"Method": "GET",
					"ObjectType": "workflow.SelectorProperty"
				}
			}]
		}, {
			"Default": {
				"ObjectType": "workflow.DefaultValue"
			},
			"Description": "Answers property contains all the network configurations, Hostname and  Root Password settings for Cisco Install Mode",
			"DisplayMeta": {
				"InventorySelector": true,
				"ObjectType": "workflow.DisplayMeta",
				"WidgetType": "None"
			},
			"InputParameters": {
				"Vendor": "${datatype.type.OsImage.Vendor}"
			},
			"Label": "Answers",
			"Name": "Answers",
			"ObjectType": "workflow.CustomDataType",
			"Properties": {
				"CatalogMoid": "shared",
				"CustomDataTypeName": "AnswersType",
				"ObjectType": "workflow.CustomDataProperty"
			},
			"Required": true
		}, {
			"Default": {
				"ObjectType": "workflow.DefaultValue"
			},
			"Description": "Custom Answer File and the placeholders ,if any, are provided for custom mode of OS install. Values for the placeholders are provided here.Answer File with or without placeholders can be provided.",
			"DisplayMeta": {
				"InventorySelector": true,
				"ObjectType": "workflow.DisplayMeta",
				"WidgetType": "None"
			},
			"IsTemplateSecure": true,
			"Label": "Additional Parameters",
			"Name": "AdditionalParameters",
			"ObjectType": "workflow.DynamicTemplateParserDataType",
			"TemplateType": "OsInstall"
		}, {
			"Default": {
				"ObjectType": "workflow.DefaultValue"
			},
			"Description": "Install targets supported are : Virtual Drive and Physical Drive. When an install target is not selected, OS will be installed on a valid Virtual Drive marked bootable. If a bootable Virtual Drive is not available, OS will be installed on the first valid Virtual Drive.",
			"DisplayMeta": {
				"InventorySelector": true,
				"ObjectType": "workflow.DisplayMeta",
				"WidgetType": "None"
			},
			"Label": "Install Target",
			"Name": "InstallTarget",
			"ObjectType": "workflow.PrimitiveDataType",
			"Properties": {
				"Constraints": {
					"EnumList": [],
					"ObjectType": "workflow.Constraints"
				},
				"InventorySelector": [{
					"DisplayAttributes": ["Name", "Id", "SerialNumber", "StorageControllerSlotId", "Bootable"],
					"ObjectType": "workflow.MoReferenceProperty",
					"Selector": "/api/v1/os/ValidInstallTargets",
					"SelectorProperty": {
						"Body": {
							"Servers": [{
								"Moid": "${datatype.type.Server.Moid}",
								"ObjectType": "${datatype.type.Server.SourceObjectType}"
							}],
							"Src": "orchestration"
						},
						"Method": "POST",
						"ObjectType": "workflow.SelectorProperty"
					},
					"ValueAttribute": "SourceMo"
				}],
				"ObjectType": "workflow.PrimitiveDataProperty",
				"Type": "json"
			}
		}]
	},
	"ClassId": "bulk.RestSubRequest",
	"ObjectType": "bulk.RestSubRequest",
	"TargetMoid": "",
	"Uri": "/v1/workflow/CustomDataTypeDefinitions",
	"Verb": "POST"
}, {
	"Body": {
		"ClassId": "workflow.CustomDataTypeDefinition",
		"Description": "Type definition for a Datacenter",
		"Label": "Datacenter",
		"Name": "HypervisorDatacenterType",
		"ObjectType": "workflow.CustomDataTypeDefinition",
		"ParameterSet": [],
		"Properties": {
			"ObjectType": "workflow.CustomDataTypeProperties"
		},
		"SharedScope": "shared",
		"TypeDefinition": [{
			"Default": {
				"ObjectType": "workflow.DefaultValue"
			},
			"DisplayMeta": {
				"InventorySelector": true,
				"ObjectType": "workflow.DisplayMeta",
				"WidgetType": "None"
			},
			"Label": "Datacenter",
			"Name": "Datacenter",
			"ObjectType": "workflow.PrimitiveDataType",
			"Properties": {
				"Constraints": {
					"EnumList": [],
					"ObjectType": "workflow.Constraints"
				},
				"InventorySelector": [{
					"DisplayAttributes": ["Name", "InventoryPath"],
					"ObjectType": "workflow.MoReferenceProperty",
					"Selector": "/api/v1/search/SearchItems?$filter=(IndexMotypes eq virtualization.BaseDatacenter)&$orderby=Name",
					"SelectorProperty": {
						"Method": "GET",
						"ObjectType": "workflow.SelectorProperty"
					},
					"ValueAttribute": "InventoryPath"
				}],
				"ObjectType": "workflow.PrimitiveDataProperty",
				"Type": "string"
			},
			"Required": true
		}]
	},
	"ClassId": "bulk.RestSubRequest",
	"ObjectType": "bulk.RestSubRequest",
	"TargetMoid": "",
	"Uri": "/v1/workflow/CustomDataTypeDefinitions",
	"Verb": "POST"
}, {
	"Body": {
		"ClassId": "workflow.CustomDataTypeDefinition",
		"Description": "Type definition for a Cluster.",
		"Label": "Cluster",
		"Name": "HypervisorClusterType",
		"ObjectType": "workflow.CustomDataTypeDefinition",
		"ParameterSet": [],
		"Properties": {
			"ObjectType": "workflow.CustomDataTypeProperties"
		},
		"SharedScope": "shared",
		"TypeDefinition": [{
			"Default": {
				"ObjectType": "workflow.DefaultValue"
			},
			"DisplayMeta": {
				"InventorySelector": true,
				"ObjectType": "workflow.DisplayMeta",
				"WidgetType": "None"
			},
			"Label": "Cluster",
			"Name": "Cluster",
			"ObjectType": "workflow.PrimitiveDataType",
			"Properties": {
				"Constraints": {
					"EnumList": [],
					"ObjectType": "workflow.Constraints"
				},
				"InventorySelector": [{
					"DisplayAttributes": ["Name", "InventoryPath"],
					"ObjectType": "workflow.MoReferenceProperty",
					"Selector": "/api/v1/search/SearchItems?$filter=(IndexMotypes eq virtualization.BaseCluster)&$orderby=Name",
					"SelectorProperty": {
						"Method": "GET",
						"ObjectType": "workflow.SelectorProperty"
					},
					"ValueAttribute": "InventoryPath"
				}],
				"ObjectType": "workflow.PrimitiveDataProperty",
				"Type": "string"
			},
			"Required": true
		}]
	},
	"ClassId": "bulk.RestSubRequest",
	"ObjectType": "bulk.RestSubRequest",
	"TargetMoid": "",
	"Uri": "/v1/workflow/CustomDataTypeDefinitions",
	"Verb": "POST"
}, {
	"Body": {
		"ClassId": "workflow.CustomDataTypeDefinition",
		"Description": "Type definition for a Hypervisor Host.",
		"Label": "ESXi Host",
		"Name": "HypervisorHostType",
		"ObjectType": "workflow.CustomDataTypeDefinition",
		"ParameterSet": [],
		"Properties": {
			"ObjectType": "workflow.CustomDataTypeProperties"
		},
		"SharedScope": "shared",
		"TypeDefinition": [{
			"Default": {
				"ObjectType": "workflow.DefaultValue"
			},
			"DisplayMeta": {
				"InventorySelector": true,
				"ObjectType": "workflow.DisplayMeta",
				"WidgetType": "None"
			},
			"Label": "Host",
			"Name": "Host",
			"ObjectType": "workflow.PrimitiveDataType",
			"Properties": {
				"Constraints": {
					"EnumList": [],
					"Max": 255,
					"Min": 1,
					"ObjectType": "workflow.Constraints",
					"Regex": "^(([1-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]).([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]).([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]).([1-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])|(([0-9A-Fa-f]{1,4}:([0-9A-Fa-f]{1,4}:([0-9A-Fa-f]{1,4}:([0-9A-Fa-f]{1,4}:([0-9A-Fa-f]{1,4}:[0-9A-Fa-f]{0,4}|:[0-9A-Fa-f]{1,4})?|(:[0-9A-Fa-f]{1,4}){0,2})|(:[0-9A-Fa-f]{1,4}){0,3})|(:[0-9A-Fa-f]{1,4}){0,4})|:(:[0-9A-Fa-f]{1,4}){0,5})((:[0-9A-Fa-f]{1,4}){2}|:(25[0-5]|(2[0-4]|1[0-9]|[1-9])?[0-9])(\\\\.(25[0-5]|(2[0-4]|1[0-9]|[1-9])?[0-9])){3})|(([0-9A-Fa-f]{1,4}:){1,6}|:):[0-9A-Fa-f]{0,4}|([0-9A-Fa-f]{1,4}:){7}:)|[a-zA-Z0-9]+([a-zA-Z0-9-._]*[a-zA-Z0-9]))$"
				},
				"InventorySelector": [{
					"DisplayAttributes": ["Name"],
					"ObjectType": "workflow.MoReferenceProperty",
					"Selector": "/api/v1/search/SearchItems?$filter=(IndexMotypes eq virtualization.BaseHost)&$orderby=Name",
					"SelectorProperty": {
						"Method": "GET",
						"ObjectType": "workflow.SelectorProperty"
					},
					"ValueAttribute": "Name"
				}],
				"ObjectType": "workflow.PrimitiveDataProperty",
				"Type": "string"
			},
			"Required": true
		}]
	},
	"ClassId": "bulk.RestSubRequest",
	"ObjectType": "bulk.RestSubRequest",
	"TargetMoid": "",
	"Uri": "/v1/workflow/CustomDataTypeDefinitions",
	"Verb": "POST"
}, {
	"Body": {
		"ClassId": "workflow.TaskDefinition",
		"DefaultVersion": true,
		"Description": "Unassigns server from server profile with profile Moref as input.\nOn successful execution, profile status will be the output.\n",
		"Label": "Remove Server from Server Profile",
		"Name": "RemoveServerFromServerProfile",
		"ObjectType": "workflow.TaskDefinition",
		"Properties": {
			"ExternalMeta": true,
			"InputDefinition": [{
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"Description": "Server Profile specifying configuration settings for a physical server",
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Profile",
				"Name": "Profile",
				"ObjectType": "workflow.MoReferenceDataType",
				"Properties": [{
					"DisplayAttributes": ["Name"],
					"ObjectType": "workflow.MoReferenceProperty",
					"Selector": "/api/v1/server/Profiles",
					"SelectorProperty": {
						"Method": "GET",
						"ObjectType": "workflow.SelectorProperty"
					}
				}],
				"Required": true
			}],
			"ObjectType": "workflow.Properties",
			"OutputDefinition": [{
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Profile Status",
				"Name": "ProfileStatus",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				}
			}],
			"RetryCount": 1,
			"RetryDelay": 100,
			"RetryPolicy": "Fixed",
			"SupportStatus": "Supported",
			"Timeout": 600,
			"TimeoutPolicy": "Retry"
		},
		"RollbackTasks": [],
		"SharedScope": "shared",
		"Tags": [{
			"Key": "category",
			"Value": "Compute"
		}, {
			"Key": "platformType.IMC",
			"Value": "true"
		}, {
			"Key": "platformType.IMCBlade",
			"Value": "true"
		}],
		"Version": 1
	},
	"ClassId": "bulk.RestSubRequest",
	"ObjectType": "bulk.RestSubRequest",
	"TargetMoid": "",
	"Uri": "/v1/workflow/TaskDefinitions",
	"Verb": "POST"
}, {
	"Body": {
		"ClassId": "workflow.TaskDefinition",
		"DefaultVersion": true,
		"Description": "Sets server to server profile with server and profile as inputs.\nIf the selected server is already part of another profile or if the selected profile has a different server previously assigned to it, then an error is displayed.\nOn successful execution, the profile status will be provided as output.",
		"Label": "Set Server to Server Profile",
		"Name": "SetServerToServerProfile",
		"ObjectType": "workflow.TaskDefinition",
		"Properties": {
			"ExternalMeta": true,
			"InputDefinition": [{
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"Description": "Server Profile specifying configuration settings for a physical server",
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Profile",
				"Name": "Profile",
				"ObjectType": "workflow.MoReferenceDataType",
				"Properties": [{
					"DisplayAttributes": ["Name"],
					"ObjectType": "workflow.MoReferenceProperty",
					"Selector": "/api/v1/server/Profiles",
					"SelectorProperty": {
						"Method": "GET",
						"ObjectType": "workflow.SelectorProperty"
					}
				}],
				"Required": true
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"Description": "Server to which the profile needs to be assigned",
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Server",
				"Name": "Server",
				"ObjectType": "workflow.MoReferenceDataType",
				"Properties": [{
					"DisplayAttributes": ["Name", "PlatformType", "MgmtIpAddress", "RegisteredDevice.ConnectionStatus", "Serial", "Firmware", "ManagementMode", "AssetTag", "UserLabel"],
					"ObjectType": "workflow.MoReferenceProperty",
					"Selector": "/api/v1/compute/PhysicalSummaries?$expand=RegisteredDevice($select=ConnectionStatus)&$select=RegisteredDevice,Name,PlatformType,ManagementMode,MgmtIpAddress,Serial,Firmware,UserLabel,AssetTag&$filter=(ManagementMode in ('IntersightStandalone','Intersight')) and ('Tags.Key' eq 'Intersight.LicenseTier' and 'Tags.Value' eq 'Premier')",
					"SelectorProperty": {
						"Method": "GET",
						"ObjectType": "workflow.SelectorProperty"
					}
				}],
				"Required": true
			}],
			"ObjectType": "workflow.Properties",
			"OutputDefinition": [{
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Profile Status",
				"Name": "ProfileStatus",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				}
			}],
			"RetryCount": 1,
			"RetryDelay": 100,
			"RetryPolicy": "Fixed",
			"SupportStatus": "Supported",
			"Timeout": 600,
			"TimeoutPolicy": "Retry"
		},
		"RollbackTasks": [{
			"CatalogMoid": "shared",
			"Description": "Unassigns server from server profile",
			"InputParameters": {
				"Profile": "${task.input.Profile}"
			},
			"Name": "RemoveServerFromServerProfile",
			"ObjectType": "workflow.RollbackTask",
			"Version": 1
		}],
		"SharedScope": "shared",
		"Tags": [{
			"Key": "category",
			"Value": "Compute"
		}, {
			"Key": "platformType.IMC",
			"Value": "true"
		}, {
			"Key": "platformType.IMCBlade",
			"Value": "true"
		}],
		"Version": 1
	},
	"ClassId": "bulk.RestSubRequest",
	"ObjectType": "bulk.RestSubRequest",
	"TargetMoid": "",
	"Uri": "/v1/workflow/TaskDefinitions",
	"Verb": "POST"
}, {
	"Body": {
		"ClassId": "workflow.TaskDefinition",
		"DefaultVersion": true,
		"Description": "Deploys the selected server profile on the server\nOn successful execution, the Deploy Server Profile workflow will be triggered.\n",
		"Label": "Deploy Server Profile",
		"Name": "DeployServerProfile",
		"ObjectType": "workflow.TaskDefinition",
		"Properties": {
			"ExternalMeta": true,
			"InputDefinition": [{
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"Description": "Server Profile specifying configuration settings for a physical server",
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Profile",
				"Name": "Profile",
				"ObjectType": "workflow.MoReferenceDataType",
				"Properties": [{
					"DisplayAttributes": ["Name"],
					"ObjectType": "workflow.MoReferenceProperty",
					"Selector": "/api/v1/server/Profiles?$filter=AssignedServer ne null",
					"SelectorProperty": {
						"Method": "GET",
						"ObjectType": "workflow.SelectorProperty"
					}
				}],
				"Required": true
			}],
			"ObjectType": "workflow.Properties",
			"OutputDefinition": [{
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"Description": "Workflow Triggered",
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Workflow Triggered",
				"Name": "Workflow",
				"ObjectType": "workflow.MoReferenceDataType",
				"Properties": [{
					"DisplayAttributes": ["Name"],
					"ObjectType": "workflow.MoReferenceProperty",
					"SelectorProperty": {
						"Method": "GET",
						"ObjectType": "workflow.SelectorProperty"
					}
				}]
			}],
			"RetryCount": 5,
			"RetryDelay": 30,
			"RetryPolicy": "Fixed",
			"SupportStatus": "Supported",
			"Timeout": 180,
			"TimeoutPolicy": "Retry"
		},
		"RollbackTasks": [],
		"SharedScope": "shared",
		"Tags": [{
			"Key": "category",
			"Value": "Compute"
		}, {
			"Key": "platformType.IMC",
			"Value": "true"
		}, {
			"Key": "platformType.IMCBlade",
			"Value": "true"
		}],
		"Version": 1
	},
	"ClassId": "bulk.RestSubRequest",
	"ObjectType": "bulk.RestSubRequest",
	"TargetMoid": "",
	"Uri": "/v1/workflow/TaskDefinitions",
	"Verb": "POST"
}, {
	"Body": {
		"ClassId": "workflow.TaskDefinition",
		"DefaultVersion": true,
		"Description": "This task formats workflow inputs for OS Install Workflow.",
		"Label": "Confirm SubWorkflow Type Task",
		"Name": "ConfirmSubWorkflowTypeTask",
		"ObjectType": "workflow.TaskDefinition",
		"Properties": {
			"InputDefinition": [{
				"CustomDataTypeProperties": {
					"CatalogMoid": "shared",
					"ObjectType": "workflow.CustomDataProperty"
				},
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Server",
				"Name": "Server",
				"ObjectType": "workflow.TargetDataType",
				"Properties": [{
					"ConnectorAttribute": "RegisteredDevice.Moid",
					"DisplayAttributes": ["MgmtIpAddress", "Name", "Serial"],
					"ObjectType": "workflow.TargetProperty",
					"Selector": "/api/v1/compute/PhysicalSummaries?$filter=(ManagementMode eq IntersightStandalone)",
					"SelectorProperty": {
						"Method": "GET",
						"ObjectType": "workflow.SelectorProperty"
					},
					"SupportedObjects": ["compute.RackUnit", "compute.Blade", "compute.PhysicalSummary"]
				}],
				"Required": true
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "SCU Image",
				"Name": "ScuImage",
				"ObjectType": "workflow.MoReferenceDataType",
				"Properties": [{
					"DisplayAttributes": ["Name", "Version", "SupportedModels"],
					"ObjectType": "workflow.MoReferenceProperty",
					"Selector": "/api/v1/firmware/ServerConfigurationUtilityDistributables",
					"SelectorProperty": {
						"Method": "GET",
						"ObjectType": "workflow.SelectorProperty"
					}
				}]
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"Description": "The install modes supported are - Cisco/Custom/Embedded.",
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Installation Mode",
				"Name": "InstallMode",
				"ObjectType": "workflow.CustomDataType",
				"Properties": {
					"CatalogMoid": "shared",
					"CustomDataTypeName": "InstallModeType",
					"ObjectType": "workflow.CustomDataProperty"
				},
				"Required": true
			}],
			"ObjectType": "workflow.Properties",
			"OutputDefinition": [{
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Workflow Type",
				"Name": "WFType",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				}
			}],
			"RetryCount": 3,
			"RetryDelay": 60,
			"RetryPolicy": "Fixed",
			"SupportStatus": "Supported",
			"Timeout": 60,
			"TimeoutPolicy": "Retry"
		},
		"RollbackTasks": [],
		"SharedScope": "shared",
		"Version": 1
	},
	"ClassId": "bulk.RestSubRequest",
	"ObjectType": "bulk.RestSubRequest",
	"TargetMoid": "",
	"Uri": "/v1/workflow/TaskDefinitions",
	"Verb": "POST"
}, {
	"Body": {
		"ClassId": "workflow.TaskDefinition",
		"DefaultVersion": true,
		"Description": "This task formats workflow inputs for OS Install Workflow.",
		"Label": "Process Workflow Inputs",
		"Name": "FormatWorkflowInputTask",
		"ObjectType": "workflow.TaskDefinition",
		"Properties": {
			"InputDefinition": [{
				"CustomDataTypeProperties": {
					"CatalogMoid": "shared",
					"ObjectType": "workflow.CustomDataProperty"
				},
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Server",
				"Name": "Server",
				"ObjectType": "workflow.TargetDataType",
				"Properties": [{
					"ConnectorAttribute": "RegisteredDevice.Moid",
					"DisplayAttributes": ["MgmtIpAddress", "Name", "Serial"],
					"ObjectType": "workflow.TargetProperty",
					"Selector": "/api/v1/compute/PhysicalSummaries?$filter=(ManagementMode eq IntersightStandalone)",
					"SelectorProperty": {
						"Method": "GET",
						"ObjectType": "workflow.SelectorProperty"
					},
					"SupportedObjects": ["compute.RackUnit", "compute.Blade", "compute.PhysicalSummary"]
				}],
				"Required": true
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Answers",
				"Name": "Answers",
				"ObjectType": "workflow.CustomDataType",
				"Properties": {
					"CatalogMoid": "shared",
					"CustomDataTypeName": "AnswersType",
					"ObjectType": "workflow.CustomDataProperty"
				},
				"Required": true
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Installation Mode",
				"Name": "InstallMode",
				"ObjectType": "workflow.CustomDataType",
				"Properties": {
					"CatalogMoid": "shared",
					"CustomDataTypeName": "InstallModeType",
					"ObjectType": "workflow.CustomDataProperty"
				}
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Configuration File",
				"Name": "ConfigurationFile",
				"ObjectType": "workflow.MoReferenceDataType",
				"Properties": [{
					"DisplayAttributes": ["Name"],
					"ObjectType": "workflow.MoReferenceProperty",
					"Selector": "/api/v1/os/ConfigurationFiles",
					"SelectorProperty": {
						"Method": "GET",
						"ObjectType": "workflow.SelectorProperty"
					}
				}]
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "OS Image",
				"Name": "OsImage",
				"ObjectType": "workflow.MoReferenceDataType",
				"Properties": [{
					"DisplayAttributes": ["Name", "Vendor", "Version"],
					"ObjectType": "workflow.MoReferenceProperty",
					"Selector": "/api/v1/softwarerepository/OperatingSystemFiles",
					"SelectorProperty": {
						"Method": "GET",
						"ObjectType": "workflow.SelectorProperty"
					}
				}],
				"Required": true
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "OS Parameters",
				"Name": "OSParameters",
				"ObjectType": "workflow.CustomDataType",
				"Properties": {
					"CatalogMoid": "shared",
					"CustomDataTypeName": "OSParameters",
					"ObjectType": "workflow.CustomDataProperty"
				}
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"IsTemplateSecure": true,
				"Label": "Additional Parameters",
				"Name": "AdditionalParameters",
				"ObjectType": "workflow.DynamicTemplateParserDataType",
				"TemplateType": "OsInstall"
			}],
			"ObjectType": "workflow.Properties",
			"OutputDefinition": [{
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Configuration File",
				"Name": "ConfigurationFile",
				"ObjectType": "workflow.MoReferenceDataType",
				"Properties": [{
					"DisplayAttributes": ["Name"],
					"ObjectType": "workflow.MoReferenceProperty",
					"Selector": "/api/v1/os/ConfigurationFiles",
					"SelectorProperty": {
						"Method": "GET",
						"ObjectType": "workflow.SelectorProperty"
					}
				}]
			}, {
				"CustomDataTypeProperties": {
					"CatalogMoid": "shared",
					"ObjectType": "workflow.CustomDataProperty"
				},
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Server",
				"Name": "Server",
				"ObjectType": "workflow.TargetDataType",
				"Properties": [{
					"ConnectorAttribute": "RegisteredDevice.Moid",
					"DisplayAttributes": ["MgmtIpAddress", "Name", "Serial"],
					"ObjectType": "workflow.TargetProperty",
					"Selector": "/api/v1/compute/PhysicalSummaries?$filter=(ManagementMode eq IntersightStandalone)",
					"SelectorProperty": {
						"Method": "GET",
						"ObjectType": "workflow.SelectorProperty"
					},
					"SupportedObjects": ["compute.RackUnit", "compute.Blade", "compute.PhysicalSummary"]
				}],
				"Required": true
			}, {
				"CustomDataTypeProperties": {
					"CatalogMoid": "shared",
					"ObjectType": "workflow.CustomDataProperty"
				},
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Target Device",
				"Name": "TargetDevice",
				"ObjectType": "workflow.TargetDataType",
				"Properties": [{
					"DisplayAttributes": ["DeviceHostname", "DeviceIpAddress", "Pid", "Serial"],
					"ObjectType": "workflow.TargetProperty",
					"Selector": "/api/v1/asset/DeviceRegistrations",
					"SelectorProperty": {
						"Method": "GET",
						"ObjectType": "workflow.SelectorProperty"
					}
				}]
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Device MoId",
				"Name": "DeviceMoId",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				}
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Server Moid",
				"Name": "ServerId",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				}
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Server Type",
				"Name": "ServerType",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				}
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Mos",
				"Name": "Mos",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "json"
				}
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Serial",
				"Name": "Serial",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				}
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Answer Type",
				"Name": "AnswerType",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				},
				"Required": true
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Answers",
				"Name": "Answers",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Secure": true,
					"Type": "string"
				},
				"Required": true
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Os Params",
				"Name": "OsParams",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				}
			}],
			"RetryCount": 3,
			"RetryDelay": 60,
			"RetryPolicy": "Fixed",
			"SupportStatus": "Supported",
			"Timeout": 60,
			"TimeoutPolicy": "Retry"
		},
		"RollbackTasks": [],
		"SecurePropAccess": true,
		"SharedScope": "shared",
		"Version": 1
	},
	"ClassId": "bulk.RestSubRequest",
	"ObjectType": "bulk.RestSubRequest",
	"TargetMoid": "",
	"Uri": "/v1/workflow/TaskDefinitions",
	"Verb": "POST"
}, {
	"Body": {
		"ClassId": "workflow.TaskDefinition",
		"DefaultVersion": true,
		"Description": "This task starts a scoped inventory for given set of mos and updates the latest state of those mos from the end point.",
		"Label": "Update Inventory",
		"Name": "UpdateServerInventoryTask",
		"ObjectType": "workflow.TaskDefinition",
		"Properties": {
			"InputDefinition": [{
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Device MoId",
				"Name": "DeviceMoId",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				}
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Mos",
				"Name": "Mos",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "json"
				}
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"Description": "Success Message",
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Success Message",
				"Name": "SuccessMsg",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				}
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"Description": "Failure Message",
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Failure Message",
				"Name": "FailureMsg",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				}
			}],
			"ObjectType": "workflow.Properties",
			"OutputDefinition": [{
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Device MoId",
				"Name": "DeviceMoId",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				}
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Mos",
				"Name": "Mos",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "json"
				}
			}],
			"RetryCount": 6,
			"RetryDelay": 60,
			"RetryPolicy": "Fixed",
			"SupportStatus": "Supported",
			"Timeout": 60,
			"TimeoutPolicy": "Retry"
		},
		"RollbackTasks": [],
		"SharedScope": "shared",
		"Version": 1
	},
	"ClassId": "bulk.RestSubRequest",
	"ObjectType": "bulk.RestSubRequest",
	"TargetMoid": "",
	"Uri": "/v1/workflow/TaskDefinitions",
	"Verb": "POST"
}, {
	"Body": {
		"ClassId": "workflow.TaskDefinition",
		"DefaultVersion": true,
		"Description": "This is a task to validate secure boot properties of a server",
		"Label": "Confirm Secure Boot Configuration",
		"Name": "ConfirmOSInstallTaskParameters",
		"ObjectType": "workflow.TaskDefinition",
		"Properties": {
			"InputDefinition": [{
				"CustomDataTypeProperties": {
					"CatalogMoid": "shared",
					"ObjectType": "workflow.CustomDataProperty"
				},
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Target Device",
				"Name": "TargetDevice",
				"ObjectType": "workflow.TargetDataType",
				"Properties": [{
					"DisplayAttributes": ["DeviceHostname", "DeviceIpAddress", "Pid", "Serial"],
					"ObjectType": "workflow.TargetProperty",
					"Selector": "/api/v1/asset/DeviceRegistrations?$filter=(PlatformType eq IMCM4 or PlatformType eq IMCM5 or PlatformType eq IMCRack)",
					"SelectorProperty": {
						"Method": "GET",
						"ObjectType": "workflow.SelectorProperty"
					}
				}],
				"Required": true
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Answer Source",
				"Name": "AnswerSource",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				},
				"Required": true
			}],
			"ObjectType": "workflow.Properties",
			"OutputDefinition": [],
			"RetryCount": 10,
			"RetryDelay": 10,
			"RetryPolicy": "Fixed",
			"SupportStatus": "Supported",
			"Timeout": 600,
			"TimeoutPolicy": "Retry"
		},
		"RollbackTasks": [],
		"SharedScope": "shared",
		"Tags": [{
			"Key": "TaskCategory",
			"Value": "Interface"
		}],
		"Version": 1
	},
	"ClassId": "bulk.RestSubRequest",
	"ObjectType": "bulk.RestSubRequest",
	"TargetMoid": "",
	"Uri": "/v1/workflow/TaskDefinitions",
	"Verb": "POST"
}, {
	"Body": {
		"ClassId": "workflow.TaskDefinition",
		"DefaultVersion": true,
		"Description": "Validate Install configuration provided by the user.",
		"Label": "Confirm OS Install Configuration",
		"Name": "ConfirmOsInstallConfiguration",
		"ObjectType": "workflow.TaskDefinition",
		"Properties": {
			"InputDefinition": [{
				"CustomDataTypeProperties": {
					"CatalogMoid": "shared",
					"ObjectType": "workflow.CustomDataProperty"
				},
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Server",
				"Name": "Server",
				"ObjectType": "workflow.TargetDataType",
				"Properties": [{
					"ConnectorAttribute": "RegisteredDevice.Moid",
					"DisplayAttributes": ["MgmtIpAddress", "Name", "Serial"],
					"ObjectType": "workflow.TargetProperty",
					"Selector": "/api/v1/compute/PhysicalSummaries?$filter=(ManagementMode eq IntersightStandalone)",
					"SelectorProperty": {
						"Method": "GET",
						"ObjectType": "workflow.SelectorProperty"
					},
					"SupportedObjects": ["compute.RackUnit", "compute.Blade", "compute.PhysicalSummary"]
				}],
				"Required": true
			}, {
				"CustomDataTypeProperties": {
					"CatalogMoid": "shared",
					"ObjectType": "workflow.CustomDataProperty"
				},
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Target Device",
				"Name": "TargetDevice",
				"ObjectType": "workflow.TargetDataType",
				"Properties": [{
					"DisplayAttributes": ["DeviceHostname", "DeviceIpAddress", "Pid", "Serial"],
					"ObjectType": "workflow.TargetProperty",
					"Selector": "/api/v1/asset/DeviceRegistrations?$filter=(PlatformType eq IMCM4 or PlatformType eq IMCM5 or PlatformType eq IMCRack)",
					"SelectorProperty": {
						"Method": "GET",
						"ObjectType": "workflow.SelectorProperty"
					}
				}],
				"Required": true
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "SCU Image",
				"Name": "ScuImage",
				"ObjectType": "workflow.MoReferenceDataType",
				"Properties": [{
					"DisplayAttributes": ["Name"],
					"ObjectType": "workflow.MoReferenceProperty",
					"SelectorProperty": {
						"Method": "GET",
						"ObjectType": "workflow.SelectorProperty"
					}
				}]
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Answer Source",
				"Name": "AnswerSource",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				},
				"Required": true
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"Description": "Primitive input with inventory selector",
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Install Target",
				"Name": "InstallTarget",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "json"
				}
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Actual Boot Mode",
				"Name": "ActualBootMode",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				}
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Boot Order Configuration",
				"Name": "BootOrderConfig",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				}
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "OS Image",
				"Name": "OSImage",
				"ObjectType": "workflow.MoReferenceDataType",
				"Properties": [{
					"DisplayAttributes": ["Name"],
					"ObjectType": "workflow.MoReferenceProperty",
					"SelectorProperty": {
						"Method": "GET",
						"ObjectType": "workflow.SelectorProperty"
					}
				}]
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Updated Actual Boot Mode",
				"Name": "UpdatedActualBootMode",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				}
			}],
			"ObjectType": "workflow.Properties",
			"OutputDefinition": [{
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"Description": "Primitive input with inventory selector",
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Install Target",
				"Name": "InstallTarget",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "json"
				}
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Storage Controller Slot Id",
				"Name": "StorageControllerSlotId",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				}
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Boot Mode",
				"Name": "BootMode",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				}
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Install Mode",
				"Name": "InstallMode",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				}
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Cleanup Boot Order",
				"Name": "CleanupBootOrder",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "boolean"
				}
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Reset Vmedia Configuration",
				"Name": "ResetVmediaConfig",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "boolean"
				}
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Reset Vmedia Configuration for ISO file",
				"Name": "ResetVmediaConfigISO",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "boolean"
				}
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Vmedia Configuration for ISO file",
				"Name": "VmediaConfigISO",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				}
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Vmedia Configuration Volume Name for ISO file",
				"Name": "VolumeNameISO",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				}
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "ISO vMedia mapping Password",
				"Name": "ISOPassword",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Secure": true,
					"Type": "string"
				}
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Reset Vmedia Configuration for IMG file",
				"Name": "ResetVmediaConfigIMG",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "boolean"
				}
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Vmedia Configuration for IMG file",
				"Name": "VmediaConfigIMG",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				}
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Vmedia Configuration Volume Name for IMG file",
				"Name": "VolumeNameIMG",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				}
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "IMG vMedia mapping Password",
				"Name": "IMGPassword",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Secure": true,
					"Type": "string"
				}
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Server Profile Url",
				"Name": "ProfileUrl",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				}
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Boot Order Configuration",
				"Name": "BootOrderConfig",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				}
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Onetime Boot Configuration",
				"Name": "OnetimeBootConfig",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				}
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Install Target Dn",
				"Name": "TargetDn",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				}
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Indicator to set boot order after installation",
				"Name": "SetBootOrder",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				}
			}],
			"RetryCount": 3,
			"RetryDelay": 60,
			"RetryPolicy": "Fixed",
			"SupportStatus": "Supported",
			"Timeout": 240,
			"TimeoutPolicy": "Retry"
		},
		"RollbackTasks": [],
		"SharedScope": "shared",
		"Version": 1
	},
	"ClassId": "bulk.RestSubRequest",
	"ObjectType": "bulk.RestSubRequest",
	"TargetMoid": "",
	"Uri": "/v1/workflow/TaskDefinitions",
	"Verb": "POST"
}, {
	"Body": {
		"ClassId": "workflow.CustomDataTypeDefinition",
		"Description": "Protocols used to transfer media include CIFS, NFS and HTTPS over RedFish.",
		"Label": "Transfer Protocol Type",
		"Name": "TransferProtocolType",
		"ObjectType": "workflow.CustomDataTypeDefinition",
		"ParameterSet": [],
		"Properties": {
			"ObjectType": "workflow.CustomDataTypeProperties"
		},
		"SharedScope": "shared",
		"TypeDefinition": [{
			"Default": {
				"ObjectType": "workflow.DefaultValue"
			},
			"Description": "Protocols used to transfer media include CIFS, NFS and HTTPS over RedFish.",
			"DisplayMeta": {
				"InventorySelector": true,
				"ObjectType": "workflow.DisplayMeta",
				"WidgetType": "None"
			},
			"Label": "Transfer Protocol Type",
			"Name": "TransferProtocolType",
			"ObjectType": "workflow.PrimitiveDataType",
			"Properties": {
				"Constraints": {
					"EnumList": [{
						"Label": "VMEDIA-CIFS",
						"ObjectType": "workflow.EnumEntry",
						"Value": "VMEDIA-CIFS"
					}, {
						"Label": "VMEDIA-NFS",
						"ObjectType": "workflow.EnumEntry",
						"Value": "VMEDIA-NFS"
					}, {
						"Label": "VMEDIA-HTTPS",
						"ObjectType": "workflow.EnumEntry",
						"Value": "VMEDIA-HTTPS"
					}],
					"ObjectType": "workflow.Constraints"
				},
				"InventorySelector": [],
				"ObjectType": "workflow.PrimitiveDataProperty",
				"Type": "enum"
			}
		}]
	},
	"ClassId": "bulk.RestSubRequest",
	"ObjectType": "bulk.RestSubRequest",
	"TargetMoid": "",
	"Uri": "/v1/workflow/CustomDataTypeDefinitions",
	"Verb": "POST"
}, {
	"Body": {
		"ClassId": "workflow.CustomDataTypeDefinition",
		"CompositeType": true,
		"Description": "Details of Image to be used for installation.",
		"Label": "Image Details Configuration",
		"Name": "ImageDetailsConfig",
		"ObjectType": "workflow.CustomDataTypeDefinition",
		"ParameterSet": [],
		"Properties": {
			"ObjectType": "workflow.CustomDataTypeProperties"
		},
		"SharedScope": "shared",
		"TypeDefinition": [{
			"Default": {
				"ObjectType": "workflow.DefaultValue"
			},
			"Description": "Repository details of the Image.",
			"DisplayMeta": {
				"InventorySelector": true,
				"ObjectType": "workflow.DisplayMeta",
				"WidgetType": "None"
			},
			"Label": "Image Repository",
			"Name": "ImageRepository",
			"ObjectType": "workflow.PrimitiveDataType",
			"Properties": {
				"Constraints": {
					"EnumList": [],
					"ObjectType": "workflow.Constraints"
				},
				"InventorySelector": [],
				"ObjectType": "workflow.PrimitiveDataProperty",
				"Type": "string"
			},
			"Required": true
		}, {
			"Default": {
				"ObjectType": "workflow.DefaultValue"
			},
			"Description": "Protocol used to transfer media.",
			"DisplayMeta": {
				"InventorySelector": true,
				"ObjectType": "workflow.DisplayMeta",
				"WidgetType": "None"
			},
			"Label": "Transfer Protocol",
			"Name": "TransferProtocol",
			"ObjectType": "workflow.CustomDataType",
			"Properties": {
				"CatalogMoid": "shared",
				"CustomDataTypeName": "TransferProtocolType",
				"ObjectType": "workflow.CustomDataProperty"
			},
			"Required": true
		}, {
			"Default": {
				"ObjectType": "workflow.DefaultValue"
			},
			"Description": "Username to access an external resource",
			"DisplayMeta": {
				"InventorySelector": true,
				"ObjectType": "workflow.DisplayMeta",
				"WidgetType": "None"
			},
			"Label": "Username",
			"Name": "Username",
			"ObjectType": "workflow.PrimitiveDataType",
			"Properties": {
				"Constraints": {
					"EnumList": [],
					"ObjectType": "workflow.Constraints"
				},
				"InventorySelector": [],
				"ObjectType": "workflow.PrimitiveDataProperty",
				"Type": "string"
			}
		}, {
			"Default": {
				"ObjectType": "workflow.DefaultValue"
			},
			"Description": "Password associated with the username.",
			"DisplayMeta": {
				"InventorySelector": true,
				"ObjectType": "workflow.DisplayMeta",
				"WidgetType": "None"
			},
			"Label": "Password",
			"Name": "Password",
			"ObjectType": "workflow.PrimitiveDataType",
			"Properties": {
				"Constraints": {
					"EnumList": [],
					"ObjectType": "workflow.Constraints"
				},
				"InventorySelector": [],
				"ObjectType": "workflow.PrimitiveDataProperty",
				"Secure": true,
				"Type": "string"
			}
		}, {
			"Default": {
				"ObjectType": "workflow.DefaultValue"
			},
			"Description": "Mount Option",
			"DisplayMeta": {
				"InventorySelector": true,
				"ObjectType": "workflow.DisplayMeta",
				"WidgetType": "None"
			},
			"Label": "Mount Option",
			"Name": "MountOption",
			"ObjectType": "workflow.PrimitiveDataType",
			"Properties": {
				"Constraints": {
					"EnumList": [],
					"ObjectType": "workflow.Constraints"
				},
				"InventorySelector": [],
				"ObjectType": "workflow.PrimitiveDataProperty",
				"Type": "string"
			}
		}]
	},
	"ClassId": "bulk.RestSubRequest",
	"ObjectType": "bulk.RestSubRequest",
	"TargetMoid": "",
	"Uri": "/v1/workflow/CustomDataTypeDefinitions",
	"Verb": "POST"
}, {
	"Body": {
		"ClassId": "workflow.TaskDefinition",
		"DefaultVersion": true,
		"Description": "OS specific answer file content is created with user provided answers.",
		"Label": "Save Configuration Parameters",
		"Name": "SaveOSAnswerFile",
		"ObjectType": "workflow.TaskDefinition",
		"Properties": {
			"InputDefinition": [{
				"CustomDataTypeProperties": {
					"CatalogMoid": "shared",
					"ObjectType": "workflow.CustomDataProperty"
				},
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Server",
				"Name": "Server",
				"ObjectType": "workflow.TargetDataType",
				"Properties": [{
					"ConnectorAttribute": "RegisteredDevice.Moid",
					"DisplayAttributes": ["MgmtIpAddress", "Name", "Serial"],
					"ObjectType": "workflow.TargetProperty",
					"Selector": "/api/v1/compute/PhysicalSummaries?$filter=(ManagementMode eq IntersightStandalone)",
					"SelectorProperty": {
						"Method": "GET",
						"ObjectType": "workflow.SelectorProperty"
					},
					"SupportedObjects": ["compute.RackUnit", "compute.Blade", "compute.PhysicalSummary"]
				}],
				"Required": true
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Answer File Content",
				"Name": "AnswerFileContent",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				}
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Answers",
				"Name": "Answers",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Secure": true,
					"Type": "string"
				},
				"Required": true
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"IsTemplateSecure": true,
				"Label": "Additional Parameters",
				"Name": "AdditionalParameters",
				"ObjectType": "workflow.DynamicTemplateParserDataType",
				"TemplateType": "OsInstall"
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "OS Image",
				"Name": "OsImage",
				"ObjectType": "workflow.MoReferenceDataType",
				"Properties": [{
					"DisplayAttributes": ["Name"],
					"ObjectType": "workflow.MoReferenceProperty",
					"SelectorProperty": {
						"Method": "GET",
						"ObjectType": "workflow.SelectorProperty"
					}
				}],
				"Required": true
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "SCU Image",
				"Name": "ScuImage",
				"ObjectType": "workflow.MoReferenceDataType",
				"Properties": [{
					"DisplayAttributes": ["Name"],
					"ObjectType": "workflow.MoReferenceProperty",
					"SelectorProperty": {
						"Method": "GET",
						"ObjectType": "workflow.SelectorProperty"
					}
				}]
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Answer Source",
				"Name": "AnswerSource",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				},
				"Required": true
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Boot Mode",
				"Name": "BootMode",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				},
				"Required": true
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Configuration File",
				"Name": "ConfigurationFile",
				"ObjectType": "workflow.MoReferenceDataType",
				"Properties": [{
					"DisplayAttributes": ["Name"],
					"ObjectType": "workflow.MoReferenceProperty",
					"Selector": "/api/v1/os/ConfigurationFiles",
					"SelectorProperty": {
						"Method": "GET",
						"ObjectType": "workflow.SelectorProperty"
					}
				}]
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Os Params",
				"Name": "OsParams",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				}
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"Description": "Primitive input with inventory selector",
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Install Target",
				"Name": "InstallTarget",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "json"
				}
			}],
			"ObjectType": "workflow.Properties",
			"OutputDefinition": [{
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Answer File Content",
				"Name": "AnswerFileContent",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				}
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Config File Content",
				"Name": "ConfigFileContent",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				}
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "ISO Share",
				"Name": "IsoShare",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				}
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "ISO Share IP",
				"Name": "IsoShareIp",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				}
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "ISO Share Type",
				"Name": "IsoShareType",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				}
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "ISO Share User",
				"Name": "IsoShareUser",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				}
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "ISO Share Password",
				"Name": "IsoSharePassword",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Secure": true,
					"Type": "string"
				}
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "ISO Share mountoptions",
				"Name": "IsoShareMountOptions",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				}
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Remote Share",
				"Name": "RemoteShare",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				}
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Remote File",
				"Name": "RemoteFile",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				}
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Model",
				"Name": "Model",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				}
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "OS Vendor",
				"Name": "OsVendor",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				}
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "OS Version",
				"Name": "OsVersion",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				}
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Platform Type",
				"Name": "PlatformType",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				}
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"Description": "Details of Answer File to be used during installation on IMM servers.",
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Answer File Details for IMM",
				"Name": "AnswerFileDetails",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"Type": "json"
				}
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"Description": "Details of OS Image to be used during installation on IMM servers.",
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "OS Image Details for IMM",
				"Name": "OSImageDetails",
				"ObjectType": "workflow.CustomDataType",
				"Properties": {
					"CatalogMoid": "shared",
					"CustomDataTypeName": "ImageDetailsConfig",
					"ObjectType": "workflow.CustomDataProperty"
				}
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"Description": "Details of SCU Image to be used during installation on IMM servers.",
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "SCU Image Details for IMM",
				"Name": "SCUImageDetails",
				"ObjectType": "workflow.CustomDataType",
				"Properties": {
					"CatalogMoid": "shared",
					"CustomDataTypeName": "ImageDetailsConfig",
					"ObjectType": "workflow.CustomDataProperty"
				}
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"Description": "OS specific attributes for IMM servers.",
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "OS specific attributes for IMM",
				"Name": "TargetOSDetails",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"Type": "json"
				}
			}],
			"RetryCount": 3,
			"RetryDelay": 60,
			"RetryPolicy": "Fixed",
			"SupportStatus": "Supported",
			"Timeout": 240,
			"TimeoutPolicy": "Retry"
		},
		"RollbackTasks": [],
		"SecurePropAccess": true,
		"SharedScope": "shared",
		"Tags": [{
			"Key": "TaskCategory",
			"Value": "Interface"
		}],
		"Version": 1
	},
	"ClassId": "bulk.RestSubRequest",
	"ObjectType": "bulk.RestSubRequest",
	"TargetMoid": "",
	"Uri": "/v1/workflow/TaskDefinitions",
	"Verb": "POST"
}, {
	"Body": {
		"ClassId": "workflow.TaskDefinition",
		"DefaultVersion": true,
		"Description": "This is a generic task to start the OS Install Agent",
		"Label": "Start OS Install Agent",
		"Name": "StartOSInstallAgent",
		"ObjectType": "workflow.TaskDefinition",
		"Properties": {
			"InputDefinition": [{
				"CustomDataTypeProperties": {
					"CatalogMoid": "shared",
					"ObjectType": "workflow.CustomDataProperty"
				},
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Target Device",
				"Name": "TargetDevice",
				"ObjectType": "workflow.TargetDataType",
				"Properties": [{
					"DisplayAttributes": ["DeviceHostname", "DeviceIpAddress", "Pid", "Serial"],
					"ObjectType": "workflow.TargetProperty",
					"Selector": "/api/v1/asset/DeviceRegistrations?$filter=(PlatformType eq IMCM4 or PlatformType eq IMCM5 or PlatformType eq IMCRack)",
					"SelectorProperty": {
						"Method": "GET",
						"ObjectType": "workflow.SelectorProperty"
					}
				}],
				"Required": true
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Answer Source",
				"Name": "AnswerSource",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				},
				"Required": true
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "ISO Share",
				"Name": "IsoShare",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				},
				"Required": true
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "ISO Share IP",
				"Name": "IsoShareIp",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				},
				"Required": true
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "ISO Share Type",
				"Name": "IsoShareType",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				},
				"Required": true
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "ISO Share User",
				"Name": "IsoShareUser",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				}
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "ISO Share Password",
				"Name": "IsoSharePassword",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Secure": true,
					"Type": "string"
				}
			}],
			"ObjectType": "workflow.Properties",
			"OutputDefinition": [],
			"RetryCount": 3,
			"RetryDelay": 10,
			"RetryPolicy": "Fixed",
			"SupportStatus": "Supported",
			"Timeout": 600,
			"TimeoutPolicy": "Retry"
		},
		"RollbackTasks": [],
		"SecurePropAccess": true,
		"SharedScope": "shared",
		"Tags": [{
			"Key": "TaskCategory",
			"Value": "Interface"
		}],
		"Version": 1
	},
	"ClassId": "bulk.RestSubRequest",
	"ObjectType": "bulk.RestSubRequest",
	"TargetMoid": "",
	"Uri": "/v1/workflow/TaskDefinitions",
	"Verb": "POST"
}, {
	"Body": {
		"ClassId": "workflow.TaskDefinition",
		"DefaultVersion": true,
		"Description": "This task is invoked to clean the configurations files related to OS install.",
		"Label": "os.DeleteBmcFile",
		"Name": "os.DeleteBmcFile",
		"ObjectType": "workflow.TaskDefinition",
		"Properties": {
			"InputDefinition": [{
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "ServerType",
				"Name": "ServerType",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				}
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "ServerId",
				"Name": "ServerId",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				}
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "AnswerSource",
				"Name": "AnswerSource",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				}
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Files",
				"Name": "Files",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				}
			}],
			"ObjectType": "workflow.Properties",
			"OutputDefinition": [],
			"RetryCount": 3,
			"RetryDelay": 120,
			"RetryPolicy": "Fixed",
			"SupportStatus": "Supported",
			"Timeout": 300,
			"TimeoutPolicy": "Retry"
		},
		"RollbackTasks": [],
		"SharedScope": "shared",
		"Version": 1
	},
	"ClassId": "bulk.RestSubRequest",
	"ObjectType": "bulk.RestSubRequest",
	"TargetMoid": "",
	"Uri": "/v1/workflow/TaskDefinitions",
	"Verb": "POST"
}, {
	"Body": {
		"ClassId": "workflow.TaskDefinition",
		"DefaultVersion": true,
		"Description": "This is a task to reset Virtual Media mapping.",
		"Label": "Reset Virtual Media Mapping to match Policy",
		"Name": "ResetVMediaMapping",
		"ObjectType": "workflow.TaskDefinition",
		"Properties": {
			"InputDefinition": [{
				"CustomDataTypeProperties": {
					"CatalogMoid": "shared",
					"ObjectType": "workflow.CustomDataProperty"
				},
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Target Device",
				"Name": "TargetDevice",
				"ObjectType": "workflow.TargetDataType",
				"Properties": [{
					"DisplayAttributes": ["DeviceHostname", "DeviceIpAddress", "Pid", "Serial"],
					"ObjectType": "workflow.TargetProperty",
					"Selector": "/api/v1/asset/DeviceRegistrations?$filter=(PlatformType eq IMCM4 or PlatformType eq IMCM5 or PlatformType eq IMCRack)",
					"SelectorProperty": {
						"Method": "GET",
						"ObjectType": "workflow.SelectorProperty"
					}
				}],
				"Required": true
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Reset Virtual Media Mapping",
				"Name": "ResetVmediaConfig",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "boolean"
				}
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Reset ISO Virtual Media Mapping",
				"Name": "ResetVmediaConfigISO",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "boolean"
				}
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Virtual Media Mapping for ISO file",
				"Name": "VmediaMappingISO",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				}
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Volume Name for ISO file",
				"Name": "VolumeNameISO",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				}
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "ISO vMedia Mapping Password",
				"Name": "ISOPassword",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Secure": true,
					"Type": "string"
				}
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Reset IMG Virtual Media Mapping",
				"Name": "ResetVmediaConfigIMG",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "boolean"
				}
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Virtual Media Mapping for IMG file",
				"Name": "VmediaMappingIMG",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				}
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Volume Name for IMG file",
				"Name": "VolumeNameIMG",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				}
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "IMG vMedia Mapping Password",
				"Name": "IMGPassword",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Secure": true,
					"Type": "string"
				}
			}],
			"ObjectType": "workflow.Properties",
			"OutputDefinition": [],
			"RetryDelay": 30,
			"RetryPolicy": "Fixed",
			"SupportStatus": "Supported",
			"Timeout": 600,
			"TimeoutPolicy": "Retry"
		},
		"RollbackTasks": [],
		"SecurePropAccess": true,
		"SharedScope": "shared",
		"Version": 1
	},
	"ClassId": "bulk.RestSubRequest",
	"ObjectType": "bulk.RestSubRequest",
	"TargetMoid": "",
	"Uri": "/v1/workflow/TaskDefinitions",
	"Verb": "POST"
}, {
	"Body": {
		"ClassId": "workflow.TaskDefinition",
		"DefaultVersion": true,
		"Description": "Cleanup boot order of the server.",
		"Label": "Cleanup Server Boot Order",
		"Name": "ResetServerBootOrder",
		"ObjectType": "workflow.TaskDefinition",
		"Properties": {
			"InputDefinition": [{
				"CustomDataTypeProperties": {
					"CatalogMoid": "shared",
					"ObjectType": "workflow.CustomDataProperty"
				},
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Target Device",
				"Name": "TargetDevice",
				"ObjectType": "workflow.TargetDataType",
				"Properties": [{
					"DisplayAttributes": ["DeviceHostname", "DeviceIpAddress", "Pid", "Serial"],
					"ObjectType": "workflow.TargetProperty",
					"Selector": "/api/v1/asset/DeviceRegistrations?$filter=(PlatformType eq IMCM4 or PlatformType eq IMCM5 or PlatformType eq IMCRack)",
					"SelectorProperty": {
						"Method": "GET",
						"ObjectType": "workflow.SelectorProperty"
					}
				}],
				"Required": true
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Boolean to denote the need for rebooting the server after update",
				"Name": "RebootServer",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "boolean"
				}
			}],
			"ObjectType": "workflow.Properties",
			"OutputDefinition": [],
			"RetryCount": 3,
			"RetryDelay": 10,
			"RetryPolicy": "Fixed",
			"SupportStatus": "Supported",
			"Timeout": 360,
			"TimeoutPolicy": "Retry"
		},
		"RollbackTasks": [],
		"SharedScope": "shared",
		"Version": 1
	},
	"ClassId": "bulk.RestSubRequest",
	"ObjectType": "bulk.RestSubRequest",
	"TargetMoid": "",
	"Uri": "/v1/workflow/TaskDefinitions",
	"Verb": "POST"
}, {
	"Body": {
		"ClassId": "workflow.CustomDataTypeDefinition",
		"CompositeType": true,
		"Description": "This data type takes holds information about a formatted string.",
		"Label": "Formatted Text",
		"Name": "FormattedText",
		"ObjectType": "workflow.CustomDataTypeDefinition",
		"ParameterSet": [],
		"Properties": {
			"ObjectType": "workflow.CustomDataTypeProperties"
		},
		"SharedScope": "shared",
		"TypeDefinition": [{
			"Default": {
				"ObjectType": "workflow.DefaultValue"
			},
			"Description": "The content type of the request. Currently supports JSON and Text.\n",
			"DisplayMeta": {
				"InventorySelector": true,
				"ObjectType": "workflow.DisplayMeta",
				"WidgetType": "None"
			},
			"Label": "Content Type",
			"Name": "ContentType",
			"ObjectType": "workflow.PrimitiveDataType",
			"Properties": {
				"Constraints": {
					"EnumList": [{
						"Label": "JSON",
						"ObjectType": "workflow.EnumEntry",
						"Value": "json"
					}, {
						"Label": "Text",
						"ObjectType": "workflow.EnumEntry",
						"Value": "text"
					}],
					"ObjectType": "workflow.Constraints"
				},
				"InventorySelector": [],
				"ObjectType": "workflow.PrimitiveDataProperty",
				"Type": "enum"
			},
			"Required": true
		}, {
			"Default": {
				"ObjectType": "workflow.DefaultValue"
			},
			"Description": "The content of the formatted text that can spawn multiple lines.",
			"DisplayMeta": {
				"InventorySelector": true,
				"ObjectType": "workflow.DisplayMeta",
				"WidgetType": "None"
			},
			"Label": "Text",
			"Name": "Text",
			"ObjectType": "workflow.PrimitiveDataType",
			"Properties": {
				"Constraints": {
					"EnumList": [],
					"ObjectType": "workflow.Constraints"
				},
				"InventorySelector": [],
				"ObjectType": "workflow.PrimitiveDataProperty",
				"Type": "string"
			},
			"Required": true
		}]
	},
	"ClassId": "bulk.RestSubRequest",
	"ObjectType": "bulk.RestSubRequest",
	"TargetMoid": "",
	"Uri": "/v1/workflow/CustomDataTypeDefinitions",
	"Verb": "POST"
}, {
	"Body": {
		"ClassId": "workflow.CustomDataTypeDefinition",
		"Description": "The types of values that can be extracted from API responses in IO Generic API tasks.",
		"Label": "Response Parameter Type",
		"Name": "ResponseParameterTypeEnum",
		"ObjectType": "workflow.CustomDataTypeDefinition",
		"ParameterSet": [],
		"Properties": {
			"ObjectType": "workflow.CustomDataTypeProperties"
		},
		"SharedScope": "shared",
		"TypeDefinition": [{
			"Default": {
				"ObjectType": "workflow.DefaultValue"
			},
			"Description": "The types of values that can be extracted from API responses in IO Generic API tasks. The JSON type can be used to extract any type of value from response as a parameter.",
			"DisplayMeta": {
				"InventorySelector": true,
				"ObjectType": "workflow.DisplayMeta",
				"WidgetType": "None"
			},
			"Label": "Parameter Type",
			"Name": "ParameterType",
			"ObjectType": "workflow.PrimitiveDataType",
			"Properties": {
				"Constraints": {
					"EnumList": [{
						"Label": "String",
						"ObjectType": "workflow.EnumEntry",
						"Value": "string"
					}, {
						"Label": "Integer",
						"ObjectType": "workflow.EnumEntry",
						"Value": "integer"
					}, {
						"Label": "Float",
						"ObjectType": "workflow.EnumEntry",
						"Value": "float"
					}, {
						"Label": "Boolean",
						"ObjectType": "workflow.EnumEntry",
						"Value": "boolean"
					}, {
						"Label": "JSON",
						"ObjectType": "workflow.EnumEntry",
						"Value": "json"
					}],
					"ObjectType": "workflow.Constraints"
				},
				"InventorySelector": [],
				"ObjectType": "workflow.PrimitiveDataProperty",
				"Type": "enum"
			},
			"Required": true
		}]
	},
	"ClassId": "bulk.RestSubRequest",
	"ObjectType": "bulk.RestSubRequest",
	"TargetMoid": "",
	"Uri": "/v1/workflow/CustomDataTypeDefinitions",
	"Verb": "POST"
}, {
	"Body": {
		"ClassId": "workflow.CustomDataTypeDefinition",
		"CompositeType": true,
		"Description": "This data type takes information about a parameter that needs to be extracted from an API response in Generic API tasks.",
		"Label": "Response Parameter",
		"Name": "ResponseParameter",
		"ObjectType": "workflow.CustomDataTypeDefinition",
		"ParameterSet": [],
		"Properties": {
			"ObjectType": "workflow.CustomDataTypeProperties"
		},
		"SharedScope": "shared",
		"TypeDefinition": [{
			"Default": {
				"ObjectType": "workflow.DefaultValue"
			},
			"Description": "The content specific path information that identifies the parameter value within the content. The value is usually a XPath or JSONPath or a regular expression in case of text content.",
			"DisplayMeta": {
				"InventorySelector": true,
				"ObjectType": "workflow.DisplayMeta",
				"WidgetType": "None"
			},
			"Label": "Path",
			"Name": "Path",
			"ObjectType": "workflow.PrimitiveDataType",
			"Properties": {
				"Constraints": {
					"EnumList": [],
					"ObjectType": "workflow.Constraints"
				},
				"InventorySelector": [],
				"ObjectType": "workflow.PrimitiveDataProperty",
				"Type": "string"
			},
			"Required": true
		}, {
			"Default": {
				"ObjectType": "workflow.DefaultValue"
			},
			"Description": "Name of the response parameter.",
			"DisplayMeta": {
				"InventorySelector": true,
				"ObjectType": "workflow.DisplayMeta",
				"WidgetType": "None"
			},
			"Label": "Name",
			"Name": "Name",
			"ObjectType": "workflow.PrimitiveDataType",
			"Properties": {
				"Constraints": {
					"EnumList": [],
					"ObjectType": "workflow.Constraints"
				},
				"InventorySelector": [],
				"ObjectType": "workflow.PrimitiveDataProperty",
				"Type": "string"
			},
			"Required": true
		}, {
			"Default": {
				"ObjectType": "workflow.DefaultValue"
			},
			"Description": "The response parameter type - will be one of string, integer, float, boolean, complex or collection. If the type is not specified, parameter will be considered of string type by default.",
			"DisplayMeta": {
				"InventorySelector": true,
				"ObjectType": "workflow.DisplayMeta",
				"WidgetType": "None"
			},
			"Label": "Type",
			"Name": "Type",
			"ObjectType": "workflow.CustomDataType",
			"Properties": {
				"CatalogMoid": "shared",
				"CustomDataTypeName": "ResponseParameterTypeEnum",
				"ObjectType": "workflow.CustomDataProperty"
			}
		}]
	},
	"ClassId": "bulk.RestSubRequest",
	"ObjectType": "bulk.RestSubRequest",
	"TargetMoid": "",
	"Uri": "/v1/workflow/CustomDataTypeDefinitions",
	"Verb": "POST"
}, {
	"Body": {
		"ClassId": "workflow.CustomDataTypeDefinition",
		"CompositeType": true,
		"Description": "Response parser framework supports extraction of required values from API/device responses. These responses may be of various content types such as XML, JSON, etc. The values of importance are modeled as parameters in the response parser framework.\nThe parameters can be of a scalar value type or a collection of values. A group of related parameters can be modeled as a single complex type parameter. These complex types will be very useful to extract a set of repeating group of related parameters.\nA response parser specification defines the set of parameters that need to be extracted from the content. The response parser specification allows complex type definitions to be defined for any complex parameters.",
		"Label": "Response Parser",
		"Name": "ResponseParserType",
		"ObjectType": "workflow.CustomDataTypeDefinition",
		"ParameterSet": [],
		"Properties": {
			"ObjectType": "workflow.CustomDataTypeProperties"
		},
		"SharedScope": "shared",
		"TypeDefinition": [{
			"ArrayItemType": {
				"ObjectType": "workflow.CustomArrayItem",
				"Properties": {
					"CatalogMoid": "shared",
					"CustomDataTypeName": "ResponseParameter",
					"ObjectType": "workflow.CustomDataProperty"
				}
			},
			"Default": {
				"ObjectType": "workflow.DefaultValue"
			},
			"Description": "The collection of parameters that need to be extracted from the API response.\n",
			"DisplayMeta": {
				"InventorySelector": true,
				"ObjectType": "workflow.DisplayMeta",
				"WidgetType": "None"
			},
			"Label": "Parameters",
			"Max": 10,
			"Min": 1,
			"Name": "Parameters",
			"ObjectType": "workflow.ArrayDataType"
		}]
	},
	"ClassId": "bulk.RestSubRequest",
	"ObjectType": "bulk.RestSubRequest",
	"TargetMoid": "",
	"Uri": "/v1/workflow/CustomDataTypeDefinitions",
	"Verb": "POST"
}, {
	"Body": {
		"ClassId": "workflow.CustomDataTypeDefinition",
		"Description": "The outcome type specifies status of the task to be set when the outcome condition evaluates to true.",
		"Label": "Outcome Type Enum",
		"Name": "OutcomeTypeEnum",
		"ObjectType": "workflow.CustomDataTypeDefinition",
		"ParameterSet": [],
		"Properties": {
			"ObjectType": "workflow.CustomDataTypeProperties"
		},
		"SharedScope": "shared",
		"TypeDefinition": [{
			"Default": {
				"ObjectType": "workflow.DefaultValue"
			},
			"Description": "The outcome type specifies status of the task to be set when the outcome condition evaluates to true.",
			"DisplayMeta": {
				"InventorySelector": true,
				"ObjectType": "workflow.DisplayMeta",
				"WidgetType": "None"
			},
			"Label": "Outcome Type",
			"Name": "OutcomeType",
			"ObjectType": "workflow.PrimitiveDataType",
			"Properties": {
				"Constraints": {
					"EnumList": [{
						"Label": "Success",
						"ObjectType": "workflow.EnumEntry",
						"Value": "Success"
					}, {
						"Label": "Error",
						"ObjectType": "workflow.EnumEntry",
						"Value": "Error"
					}, {
						"Label": "Skip Task Execution",
						"ObjectType": "workflow.EnumEntry",
						"Value": "SkipTaskExecution"
					}, {
						"Label": "Terminal Error",
						"ObjectType": "workflow.EnumEntry",
						"Value": "TerminalError"
					}],
					"ObjectType": "workflow.Constraints"
				},
				"InventorySelector": [],
				"ObjectType": "workflow.PrimitiveDataProperty",
				"Type": "enum"
			},
			"Required": true
		}]
	},
	"ClassId": "bulk.RestSubRequest",
	"ObjectType": "bulk.RestSubRequest",
	"TargetMoid": "",
	"Uri": "/v1/workflow/CustomDataTypeDefinitions",
	"Verb": "POST"
}, {
	"Body": {
		"ClassId": "workflow.CustomDataTypeDefinition",
		"CompositeType": true,
		"Description": "Intersight Orchestrator allows the users to specify the different API outcomes.\nThe task status message for an outcome can be specified. An outcome can be qualified as recoverable/non-recoverable error condition.",
		"Label": "Outcome",
		"Name": "Outcome",
		"ObjectType": "workflow.CustomDataTypeDefinition",
		"ParameterSet": [],
		"Properties": {
			"ObjectType": "workflow.CustomDataTypeProperties"
		},
		"SharedScope": "shared",
		"TypeDefinition": [{
			"Default": {
				"ObjectType": "workflow.DefaultValue"
			},
			"Description": "The user friendly name given to the task outcome.\n",
			"DisplayMeta": {
				"InventorySelector": true,
				"ObjectType": "workflow.DisplayMeta",
				"WidgetType": "None"
			},
			"Label": "Name",
			"Name": "Name",
			"ObjectType": "workflow.PrimitiveDataType",
			"Properties": {
				"Constraints": {
					"EnumList": [],
					"ObjectType": "workflow.Constraints"
				},
				"InventorySelector": [],
				"ObjectType": "workflow.PrimitiveDataProperty",
				"Type": "string"
			},
			"Required": true
		}, {
			"Default": {
				"ObjectType": "workflow.DefaultValue"
			},
			"Description": "The condition expression that uses a golang template logical expression to mark this outcome when the condition evaluates to true for the task execution.\nThe condition can refer outputs extracted via the response parser. The format to refer the captured output is {{.local.response.<captured-parameter-name>}}.\nLets say we have defined 'Name' in the response parser specification and in the condition we want to check if the extracted output 'Name' equals to string value 'Test', condition looks like - {{eq .local.response.Name \"Test\"}}. Make sure to enclose the value within double quotes if it is of string datatype.\n",
			"DisplayMeta": {
				"InventorySelector": true,
				"ObjectType": "workflow.DisplayMeta",
				"WidgetType": "None"
			},
			"Label": "Condition",
			"Name": "Condition",
			"ObjectType": "workflow.PrimitiveDataType",
			"Properties": {
				"Constraints": {
					"EnumList": [],
					"ObjectType": "workflow.Constraints"
				},
				"InventorySelector": [],
				"ObjectType": "workflow.PrimitiveDataProperty",
				"Type": "string"
			},
			"Required": true
		}, {
			"Default": {
				"ObjectType": "workflow.DefaultValue"
			},
			"Description": "The message to be shown when the outcome specified by condition occurs. Message can have references to the response\nparser captured output.\n",
			"DisplayMeta": {
				"InventorySelector": true,
				"ObjectType": "workflow.DisplayMeta",
				"WidgetType": "None"
			},
			"Label": "Message",
			"Name": "Message",
			"ObjectType": "workflow.PrimitiveDataType",
			"Properties": {
				"Constraints": {
					"EnumList": [],
					"ObjectType": "workflow.Constraints"
				},
				"InventorySelector": [],
				"ObjectType": "workflow.PrimitiveDataProperty",
				"Type": "string"
			}
		}, {
			"Default": {
				"ObjectType": "workflow.DefaultValue"
			},
			"Description": "The outcome type based on which task status is updated accordingly. Following outcome types are defined. 1. Success              - Indicates that the outcome is a success and task execution status is marked as 'success'.\n2. Error                - Indicates that the outcome is an error and task execution status is marked as 'failed'.\n3. Skip Task Execution  - Indicates that the task needs to be skipped based on the condition specified and\n                          mark the execution status as 'NO_OP'.\n",
			"DisplayMeta": {
				"InventorySelector": true,
				"ObjectType": "workflow.DisplayMeta",
				"WidgetType": "None"
			},
			"Label": "Type of the outcome",
			"Name": "Type",
			"ObjectType": "workflow.CustomDataType",
			"Properties": {
				"CatalogMoid": "shared",
				"CustomDataTypeName": "OutcomeTypeEnum",
				"ObjectType": "workflow.CustomDataProperty"
			}
		}]
	},
	"ClassId": "bulk.RestSubRequest",
	"ObjectType": "bulk.RestSubRequest",
	"TargetMoid": "",
	"Uri": "/v1/workflow/CustomDataTypeDefinitions",
	"Verb": "POST"
}, {
	"Body": {
		"ClassId": "workflow.TaskDefinition",
		"Description": "Invokes the given Web API against the given endpoint. The endpoint can be Intersight API or an external endpoint added as Target in Intersight. Please refer Supported Endpoints section in the Web API request end user documentation for the list of Intersight Targets on which Web API task can be invoked.\n",
		"Label": "Invoke Web API Request",
		"Name": "InvokeGenericWebApi",
		"ObjectType": "workflow.TaskDefinition",
		"Properties": {
			"ExternalMeta": true,
			"InputDefinition": [{
				"CustomDataTypeProperties": {
					"CatalogMoid": "shared",
					"ObjectType": "workflow.CustomDataProperty"
				},
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"Description": "The API call can be made to Intersight or an external endpoint added as Target. Target should be in claimed or connected state. Please refer Supported Endpoints section in the Web API request end user documentation for the list of Intersight Targets on which Web API task can be invoked. An empty value for this input indicates that the API call is made to Intersight.\n",
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "External Target",
				"Name": "Target",
				"ObjectType": "workflow.TargetDataType",
				"Properties": [{
					"DisplayAttributes": ["Name", "TargetType"],
					"ObjectType": "workflow.TargetProperty",
					"Selector": "/api/v1/asset/Targets?$filter=((TargetType eq HTTPEndpoint and Status eq Claimed) or ((TargetType eq PureStorageFlashArray or TargetType eq HitachiVirtualStoragePlatform or TargetType eq NetAppActiveIqUnifiedManager or TargetType eq TerraformCloud or TargetType eq VmwareVcenter or TargetType eq APIC) and Status eq Connected))",
					"SelectorProperty": {
						"Method": "GET",
						"ObjectType": "workflow.SelectorProperty"
					},
					"SupportedObjects": ["asset.Target"]
				}]
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"Description": "HTTP protocol to be used - HTTP, HTTPS. Populated implicitly by fetching the value from target task input if API endpoint is added as target within Intersight. Default value of HTTPS is set if not specified in other scenarios.\n",
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Protocol",
				"Name": "Protocol",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [{
							"Label": "HTTP",
							"ObjectType": "workflow.EnumEntry",
							"Value": "http"
						}, {
							"Label": "HTTPS",
							"ObjectType": "workflow.EnumEntry",
							"Value": "https"
						}],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "enum"
				}
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"Description": "HTTP method to be requested on the given URL. If the value is not given, GET is used as default.\n",
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Method",
				"Name": "Method",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [{
							"Label": "GET",
							"ObjectType": "workflow.EnumEntry",
							"Value": "GET"
						}, {
							"Label": "HEAD",
							"ObjectType": "workflow.EnumEntry",
							"Value": "HEAD"
						}, {
							"Label": "POST",
							"ObjectType": "workflow.EnumEntry",
							"Value": "POST"
						}, {
							"Label": "PUT",
							"ObjectType": "workflow.EnumEntry",
							"Value": "PUT"
						}, {
							"Label": "PATCH",
							"ObjectType": "workflow.EnumEntry",
							"Value": "PATCH"
						}, {
							"Label": "DELETE",
							"ObjectType": "workflow.EnumEntry",
							"Value": "DELETE"
						}, {
							"Label": "OPTIONS",
							"ObjectType": "workflow.EnumEntry",
							"Value": "OPTIONS"
						}],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "enum"
				}
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"Description": "Relative URL for Intersight, Device Registration and Target APIs. Does not support specifying fully qualified URL.\n",
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "URL",
				"Name": "Url",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				},
				"Required": true
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"Description": "The request headers that need to be sent in the request in key value pairs list.\n",
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Headers",
				"Name": "Headers",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "json"
				}
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"Description": "The key value pairs given in this input will be sent in HTTP 'Cookie' header.\n",
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Cookies",
				"Name": "Cookies",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "json"
				}
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"Description": "The type of the response. Currently supports JSON.\n",
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Response Type",
				"Name": "ContentType",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [{
							"Label": "JSON",
							"ObjectType": "workflow.EnumEntry",
							"Value": "json"
						}],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "enum"
				}
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"Description": "The optional request body that is sent as part of this API request. The request body can contain golang templates that can be populated with task input parameters and previous API output parameters.\n",
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Body",
				"Name": "Body",
				"ObjectType": "workflow.CustomDataType",
				"Properties": {
					"CatalogMoid": "shared",
					"CustomDataTypeName": "FormattedText",
					"ObjectType": "workflow.CustomDataProperty"
				}
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"Description": "The structure of the response parser shall provide the list of values that need to be extracted from the API response.\n",
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Response Parser",
				"Name": "ResponseParser",
				"ObjectType": "workflow.CustomDataType",
				"Properties": {
					"CatalogMoid": "shared",
					"CustomDataTypeName": "ResponseParserType",
					"ObjectType": "workflow.CustomDataProperty"
				}
			}, {
				"ArrayItemType": {
					"ObjectType": "workflow.CustomArrayItem",
					"Properties": {
						"CatalogMoid": "shared",
						"CustomDataTypeName": "Outcome",
						"ObjectType": "workflow.CustomDataProperty"
					}
				},
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"Description": "Allows to capture the possible outcomes of this API. This is a collection of outcomes which gets evaluated in the order they are given. If an outcome condition evaluates to 'true', status of the task can be set to one of the supported types - Success, Error or no operation and also an optional task execution message can be set.\nAt the end of the outcomes list, a catchall success/fail outcome can be added with condition explicitly set as 'true'. This allows to mark the status of task execution either success or failure when none of the previous outcomes match.\nWhen no outcomes is specified, default behaviour is to mark the API execution status 'success' if obtained HTTP status code is 2xx else mark it as 'failed'.\n",
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Outcomes",
				"Max": 10,
				"Name": "Outcomes",
				"ObjectType": "workflow.ArrayDataType"
			}],
			"ObjectType": "workflow.Properties",
			"OutputDefinition": [{
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"Description": "The response headers that are extracted from the API response.\n",
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Headers",
				"Name": "Headers",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "json"
				}
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"Description": "The list of cookies obtained from the response in the form of key value pairs.\n",
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Cookies",
				"Name": "Cookies",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "json"
				}
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"Description": "The HTTP status code of the Web API response.\n",
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Status Code",
				"Name": "StatusCode",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "integer"
				}
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"Description": "The HTTP status message of the Web API response.\n",
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Status Message",
				"Name": "StatusMessage",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				}
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"Description": "The list of output parameters extracted from the response.\n",
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Parameters",
				"Name": "Parameters",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "json"
				}
			}],
			"RetryDelay": 60,
			"RetryPolicy": "Fixed",
			"SupportStatus": "Supported",
			"Timeout": 120,
			"TimeoutPolicy": "Timeout"
		},
		"RollbackTasks": [],
		"SharedScope": "shared",
		"Tags": [{
			"Key": "category",
			"Value": "Executors"
		}],
		"Version": 1
	},
	"ClassId": "bulk.RestSubRequest",
	"ObjectType": "bulk.RestSubRequest",
	"TargetMoid": "",
	"Uri": "/v1/workflow/TaskDefinitions",
	"Verb": "POST"
}, {
	"Body": {
		"ClassId": "workflow.TaskDefinition",
		"DefaultVersion": true,
		"Description": "This is a task to validate Virtual Media mapping",
		"Label": "Confirm Virtual Media Mapping status",
		"Name": "ConfirmVMediaMappingStatus",
		"ObjectType": "workflow.TaskDefinition",
		"Properties": {
			"InputDefinition": [{
				"CustomDataTypeProperties": {
					"CatalogMoid": "shared",
					"ObjectType": "workflow.CustomDataProperty"
				},
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Target Device",
				"Name": "TargetDevice",
				"ObjectType": "workflow.TargetDataType",
				"Properties": [{
					"DisplayAttributes": ["DeviceHostname", "DeviceIpAddress", "Pid", "Serial"],
					"ObjectType": "workflow.TargetProperty",
					"Selector": "/api/v1/asset/DeviceRegistrations?$filter=(PlatformType eq IMCM4 or PlatformType eq IMCM5 or PlatformType eq IMCRack)",
					"SelectorProperty": {
						"Method": "GET",
						"ObjectType": "workflow.SelectorProperty"
					}
				}],
				"Required": true
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Valitate Mapping Status if it is set",
				"Name": "ValidateMappingStatus",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "boolean"
				}
			}],
			"ObjectType": "workflow.Properties",
			"OutputDefinition": [{
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "MappingStatus",
				"Name": "MappingStatus",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				}
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "VolumeName",
				"Name": "VolumeName",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				}
			}],
			"RetryCount": 3,
			"RetryDelay": 120,
			"RetryPolicy": "Fixed",
			"SupportStatus": "Supported",
			"Timeout": 600,
			"TimeoutPolicy": "Retry"
		},
		"RollbackTasks": [],
		"SharedScope": "shared",
		"Tags": [{
			"Key": "TaskCategory",
			"Value": "Interface"
		}],
		"Version": 1
	},
	"ClassId": "bulk.RestSubRequest",
	"ObjectType": "bulk.RestSubRequest",
	"TargetMoid": "",
	"Uri": "/v1/workflow/TaskDefinitions",
	"Verb": "POST"
}, {
	"Body": {
		"ClassId": "workflow.TaskDefinition",
		"DefaultVersion": true,
		"Description": "This is a task to unmap active Virtual Media mapping",
		"Label": "Unmaps Virtual Media Mount",
		"Name": "DisableVMediaMapping",
		"ObjectType": "workflow.TaskDefinition",
		"Properties": {
			"InputDefinition": [{
				"CustomDataTypeProperties": {
					"CatalogMoid": "shared",
					"ObjectType": "workflow.CustomDataProperty"
				},
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Target Device",
				"Name": "TargetDevice",
				"ObjectType": "workflow.TargetDataType",
				"Properties": [{
					"DisplayAttributes": ["DeviceHostname", "DeviceIpAddress", "Pid", "Serial"],
					"ObjectType": "workflow.TargetProperty",
					"Selector": "/api/v1/asset/DeviceRegistrations?$filter=(PlatformType eq IMCM4 or PlatformType eq IMCM5 or PlatformType eq IMCRack)",
					"SelectorProperty": {
						"Method": "GET",
						"ObjectType": "workflow.SelectorProperty"
					}
				}],
				"Required": true
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Volume Name",
				"Name": "VolumeName",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				},
				"Required": true
			}],
			"ObjectType": "workflow.Properties",
			"OutputDefinition": [],
			"RetryCount": 3,
			"RetryDelay": 30,
			"RetryPolicy": "Fixed",
			"SupportStatus": "Supported",
			"Timeout": 600,
			"TimeoutPolicy": "Retry"
		},
		"RollbackTasks": [],
		"SharedScope": "shared",
		"Version": 1
	},
	"ClassId": "bulk.RestSubRequest",
	"ObjectType": "bulk.RestSubRequest",
	"TargetMoid": "",
	"Uri": "/v1/workflow/TaskDefinitions",
	"Verb": "POST"
}, {
	"Body": {
		"ClassId": "workflow.TaskDefinition",
		"DefaultVersion": true,
		"Description": "This is a task to create Virtual Media mapping",
		"Label": "Create Virtual Media Mapping status",
		"Name": "NewVMediaMapping",
		"ObjectType": "workflow.TaskDefinition",
		"Properties": {
			"InputDefinition": [{
				"CustomDataTypeProperties": {
					"CatalogMoid": "shared",
					"ObjectType": "workflow.CustomDataProperty"
				},
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Target Device",
				"Name": "TargetDevice",
				"ObjectType": "workflow.TargetDataType",
				"Properties": [{
					"DisplayAttributes": ["DeviceHostname", "DeviceIpAddress", "Pid", "Serial"],
					"ObjectType": "workflow.TargetProperty",
					"Selector": "/api/v1/asset/DeviceRegistrations?$filter=(PlatformType eq IMCM4 or PlatformType eq IMCM5 or PlatformType eq IMCRack)",
					"SelectorProperty": {
						"Method": "GET",
						"ObjectType": "workflow.SelectorProperty"
					}
				}],
				"Required": true
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Volume Name",
				"Name": "VolumeName",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				},
				"Required": true
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Remote Share",
				"Name": "RemoteShare",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				},
				"Required": true
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Remote File",
				"Name": "RemoteFile",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				},
				"Required": true
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Remote Share Type",
				"Name": "RemoteShareType",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				},
				"Required": true
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Remote Share User",
				"Name": "RemoteShareUser",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				}
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Remote Share Password",
				"Name": "RemoteSharePassword",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Secure": true,
					"Type": "string"
				}
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Remote Share Mount Options",
				"Name": "RemoteShareMountOptions",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				}
			}],
			"ObjectType": "workflow.Properties",
			"OutputDefinition": [],
			"RetryCount": 3,
			"RetryDelay": 30,
			"RetryPolicy": "Fixed",
			"SupportStatus": "Supported",
			"Timeout": 600,
			"TimeoutPolicy": "Retry"
		},
		"RollbackTasks": [],
		"SecurePropAccess": true,
		"SharedScope": "shared",
		"Version": 1
	},
	"ClassId": "bulk.RestSubRequest",
	"ObjectType": "bulk.RestSubRequest",
	"TargetMoid": "",
	"Uri": "/v1/workflow/TaskDefinitions",
	"Verb": "POST"
}, {
	"Body": {
		"ClassId": "workflow.TaskDefinition",
		"DefaultVersion": true,
		"Description": "This is a generic task to track the status of the OSI Agent",
		"Label": "Watch OS Install Status",
		"Name": "WatchOSInstallStatus",
		"ObjectType": "workflow.TaskDefinition",
		"Properties": {
			"InputDefinition": [{
				"CustomDataTypeProperties": {
					"CatalogMoid": "shared",
					"ObjectType": "workflow.CustomDataProperty"
				},
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Target Device",
				"Name": "TargetDevice",
				"ObjectType": "workflow.TargetDataType",
				"Properties": [{
					"DisplayAttributes": ["DeviceHostname", "DeviceIpAddress", "Pid", "Serial"],
					"ObjectType": "workflow.TargetProperty",
					"Selector": "/api/v1/asset/DeviceRegistrations?$filter=(PlatformType eq IMCM4 or PlatformType eq IMCM5 or PlatformType eq IMCRack)",
					"SelectorProperty": {
						"Method": "GET",
						"ObjectType": "workflow.SelectorProperty"
					}
				}],
				"Required": true
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Answer Source",
				"Name": "AnswerSource",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				},
				"Required": true
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"Description": "Operating System Installation Target",
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Install Target",
				"Name": "InstallTarget",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "json"
				}
			}],
			"ObjectType": "workflow.Properties",
			"OutputDefinition": [],
			"RetryCount": 30,
			"RetryDelay": 120,
			"RetryPolicy": "Fixed",
			"SupportStatus": "Supported",
			"Timeout": 180,
			"TimeoutPolicy": "Retry"
		},
		"RollbackTasks": [],
		"SharedScope": "shared",
		"Tags": [{
			"Key": "TaskCategory",
			"Value": "Interface"
		}],
		"Version": 1
	},
	"ClassId": "bulk.RestSubRequest",
	"ObjectType": "bulk.RestSubRequest",
	"TargetMoid": "",
	"Uri": "/v1/workflow/TaskDefinitions",
	"Verb": "POST"
}, {
	"Body": {
		"ClassId": "workflow.TaskDefinition",
		"DefaultVersion": true,
		"Description": "This task is invoked to track the status of OS installation completion.",
		"Label": "os.ReadBmcFile",
		"Name": "os.ReadBmcFile",
		"ObjectType": "workflow.TaskDefinition",
		"Properties": {
			"InputDefinition": [{
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "ServerType",
				"Name": "ServerType",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				}
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "ServerId",
				"Name": "ServerId",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				}
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "AnswerSource",
				"Name": "AnswerSource",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				}
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "OsVendor",
				"Name": "OsVendor",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				}
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "OsVersion",
				"Name": "OsVersion",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				}
			}],
			"ObjectType": "workflow.Properties",
			"OutputDefinition": [],
			"RetryCount": 15,
			"RetryDelay": 600,
			"RetryPolicy": "Fixed",
			"SupportStatus": "Supported",
			"Timeout": 9000,
			"TimeoutPolicy": "Retry"
		},
		"RollbackTasks": [],
		"SharedScope": "shared",
		"Version": 1
	},
	"ClassId": "bulk.RestSubRequest",
	"ObjectType": "bulk.RestSubRequest",
	"TargetMoid": "",
	"Uri": "/v1/workflow/TaskDefinitions",
	"Verb": "POST"
}, {
	"Body": {
		"ClassId": "workflow.TaskDefinition",
		"DefaultVersion": true,
		"Description": "Set boot order of the server.",
		"Label": "Set Server Boot Order",
		"Name": "SetServerBootOrder",
		"ObjectType": "workflow.TaskDefinition",
		"Properties": {
			"InputDefinition": [{
				"CustomDataTypeProperties": {
					"CatalogMoid": "shared",
					"ObjectType": "workflow.CustomDataProperty"
				},
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Target Device",
				"Name": "TargetDevice",
				"ObjectType": "workflow.TargetDataType",
				"Properties": [{
					"DisplayAttributes": ["DeviceHostname", "DeviceIpAddress", "Pid", "Serial"],
					"ObjectType": "workflow.TargetProperty",
					"Selector": "/api/v1/asset/DeviceRegistrations?$filter=(PlatformType eq IMCM4 or PlatformType eq IMCM5 or PlatformType eq IMCRack)",
					"SelectorProperty": {
						"Method": "GET",
						"ObjectType": "workflow.SelectorProperty"
					}
				}],
				"Required": true
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Answer Source",
				"Name": "AnswerSource",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				},
				"Required": true
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Boot Mode",
				"Name": "BootMode",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				},
				"Required": true
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Model",
				"Name": "Model",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				},
				"Required": true
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Platform Type",
				"Name": "PlatformType",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				},
				"Required": true
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "OS Vendor",
				"Name": "OsVendor",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				},
				"Required": true
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "OS Version",
				"Name": "OsVersion",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				},
				"Required": true
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Storage Controller Slot Id",
				"Name": "StorageControllerSlotId",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				},
				"Required": true
			}],
			"ObjectType": "workflow.Properties",
			"OutputDefinition": [],
			"RetryCount": 3,
			"RetryDelay": 10,
			"RetryPolicy": "Fixed",
			"SupportStatus": "Supported",
			"Timeout": 360,
			"TimeoutPolicy": "Retry"
		},
		"RollbackTasks": [],
		"SharedScope": "shared",
		"Tags": [{
			"Key": "TaskCategory",
			"Value": "Interface"
		}],
		"Version": 1
	},
	"ClassId": "bulk.RestSubRequest",
	"ObjectType": "bulk.RestSubRequest",
	"TargetMoid": "",
	"Uri": "/v1/workflow/TaskDefinitions",
	"Verb": "POST"
}, {
	"Body": {
		"ClassId": "workflow.WorkflowDefinition",
		"DefaultVersion": true,
		"Description": "Workflow to install an Operating System on Standalone Servers",
		"InputDefinition": [{
			"CustomDataTypeProperties": {
				"CatalogMoid": "shared",
				"ObjectType": "workflow.CustomDataProperty"
			},
			"Default": {
				"ObjectType": "workflow.DefaultValue"
			},
			"DisplayMeta": {
				"InventorySelector": true,
				"ObjectType": "workflow.DisplayMeta",
				"WidgetType": "None"
			},
			"Label": "Server",
			"Name": "Server",
			"ObjectType": "workflow.TargetDataType",
			"Properties": [{
				"ConnectorAttribute": "RegisteredDevice.Moid",
				"DisplayAttributes": ["MgmtIpAddress", "Name", "Serial"],
				"ObjectType": "workflow.TargetProperty",
				"Selector": "/api/v1/compute/PhysicalSummaries?$filter=(ManagementMode eq IntersightStandalone)",
				"SelectorProperty": {
					"Method": "GET",
					"ObjectType": "workflow.SelectorProperty"
				},
				"SupportedObjects": ["compute.RackUnit", "compute.Blade", "compute.PhysicalSummary"]
			}],
			"Required": true
		}, {
			"Default": {
				"ObjectType": "workflow.DefaultValue"
			},
			"DisplayMeta": {
				"InventorySelector": true,
				"ObjectType": "workflow.DisplayMeta",
				"WidgetType": "None"
			},
			"Label": "OS Image",
			"Name": "OsImage",
			"ObjectType": "workflow.MoReferenceDataType",
			"Properties": [{
				"DisplayAttributes": ["Name", "Vendor", "Version"],
				"ObjectType": "workflow.MoReferenceProperty",
				"Selector": "/api/v1/softwarerepository/OperatingSystemFiles",
				"SelectorProperty": {
					"Method": "GET",
					"ObjectType": "workflow.SelectorProperty"
				}
			}],
			"Required": true
		}, {
			"Default": {
				"ObjectType": "workflow.DefaultValue"
			},
			"DisplayMeta": {
				"InventorySelector": true,
				"ObjectType": "workflow.DisplayMeta",
				"WidgetType": "None"
			},
			"Label": "OS Parameters",
			"Name": "OSParameters",
			"ObjectType": "workflow.CustomDataType",
			"Properties": {
				"CatalogMoid": "shared",
				"CustomDataTypeName": "OSParameters",
				"ObjectType": "workflow.CustomDataProperty"
			}
		}, {
			"Default": {
				"ObjectType": "workflow.DefaultValue"
			},
			"DisplayMeta": {
				"InventorySelector": true,
				"ObjectType": "workflow.DisplayMeta",
				"WidgetType": "None"
			},
			"Label": "SCU Image",
			"Name": "ScuImage",
			"ObjectType": "workflow.MoReferenceDataType",
			"Properties": [{
				"DisplayAttributes": ["Name"],
				"ObjectType": "workflow.MoReferenceProperty",
				"Selector": "/api/v1/firmware/ServerConfigurationUtilityDistributables",
				"SelectorProperty": {
					"Method": "GET",
					"ObjectType": "workflow.SelectorProperty"
				}
			}]
		}, {
			"Default": {
				"ObjectType": "workflow.DefaultValue"
			},
			"DisplayMeta": {
				"InventorySelector": true,
				"ObjectType": "workflow.DisplayMeta",
				"WidgetType": "None"
			},
			"Label": "Installation Mode",
			"Name": "InstallMode",
			"ObjectType": "workflow.CustomDataType",
			"Properties": {
				"CatalogMoid": "shared",
				"CustomDataTypeName": "InstallModeType",
				"ObjectType": "workflow.CustomDataProperty"
			},
			"Required": true
		}, {
			"Default": {
				"ObjectType": "workflow.DefaultValue"
			},
			"DisplayMeta": {
				"InventorySelector": true,
				"ObjectType": "workflow.DisplayMeta",
				"WidgetType": "None"
			},
			"Label": "Configuration File",
			"Name": "ConfigurationFile",
			"ObjectType": "workflow.MoReferenceDataType",
			"Properties": [{
				"DisplayAttributes": ["Name"],
				"ObjectType": "workflow.MoReferenceProperty",
				"Selector": "/api/v1/os/ConfigurationFiles",
				"SelectorProperty": {
					"Method": "GET",
					"ObjectType": "workflow.SelectorProperty"
				}
			}]
		}, {
			"Default": {
				"ObjectType": "workflow.DefaultValue"
			},
			"DisplayMeta": {
				"InventorySelector": true,
				"ObjectType": "workflow.DisplayMeta",
				"WidgetType": "None"
			},
			"InputParameters": {
				"Vendor": "${workflow.input.OsImage.Vendor}"
			},
			"Label": "Answers",
			"Name": "Answers",
			"ObjectType": "workflow.CustomDataType",
			"Properties": {
				"CatalogMoid": "shared",
				"CustomDataTypeName": "AnswersType",
				"ObjectType": "workflow.CustomDataProperty"
			},
			"Required": true
		}, {
			"Default": {
				"ObjectType": "workflow.DefaultValue"
			},
			"DisplayMeta": {
				"InventorySelector": true,
				"ObjectType": "workflow.DisplayMeta",
				"WidgetType": "None"
			},
			"IsTemplateSecure": true,
			"Label": "Additional Parameters",
			"Name": "AdditionalParameters",
			"ObjectType": "workflow.DynamicTemplateParserDataType",
			"TemplateType": "OsInstall"
		}, {
			"Default": {
				"ObjectType": "workflow.DefaultValue"
			},
			"Description": "Primitive input with inventory selector",
			"DisplayMeta": {
				"InventorySelector": true,
				"ObjectType": "workflow.DisplayMeta",
				"WidgetType": "None"
			},
			"Label": "Install Target",
			"Name": "InstallTarget",
			"ObjectType": "workflow.PrimitiveDataType",
			"Properties": {
				"Constraints": {
					"EnumList": [],
					"ObjectType": "workflow.Constraints"
				},
				"InventorySelector": [{
					"DisplayAttributes": ["Name", "Id", "StorageControllerSlotId", "Bootable"],
					"ObjectType": "workflow.MoReferenceProperty",
					"Selector": "/api/v1/os/ValidInstallTargets",
					"SelectorProperty": {
						"Body": {
							"Servers": [{
								"Moid": "${workflow.input.Server.Moid}",
								"ObjectType": "${workflow.input.Server.SourceObjectType}"
							}],
							"Src": "orchestration"
						},
						"Method": "POST",
						"ObjectType": "workflow.SelectorProperty"
					},
					"ValueAttribute": "SourceMo"
				}],
				"ObjectType": "workflow.PrimitiveDataProperty",
				"Type": "json"
			}
		}, {
			"Default": {
				"ObjectType": "workflow.DefaultValue",
				"Value": [{
					"check": false,
					"dn": "",
					"props": {},
					"type": "storage.PhysicalDisk"
				}, {
					"check": false,
					"dn": "",
					"props": {},
					"type": "storage.Controller"
				}, {
					"check": false,
					"dn": "",
					"props": {},
					"type": "boot.DeviceBootMode"
				}, {
					"check": false,
					"dn": "",
					"props": {},
					"type": "storage.VirtualDrive"
				}, {
					"check": false,
					"dn": "",
					"props": {},
					"type": "compute.RackUnit"
				}, {
					"check": false,
					"dn": "",
					"props": {},
					"type": "compute.Blade"
				}, {
					"check": false,
					"dn": "",
					"props": {},
					"type": "firmware.RunningFirmware"
				}]
			},
			"DisplayMeta": {
				"InventorySelector": true,
				"ObjectType": "workflow.DisplayMeta",
				"WidgetType": "None"
			},
			"Label": "Inventory Mos",
			"Name": "Mos",
			"ObjectType": "workflow.PrimitiveDataType",
			"Properties": {
				"Constraints": {
					"EnumList": [],
					"ObjectType": "workflow.Constraints"
				},
				"InventorySelector": [],
				"ObjectType": "workflow.PrimitiveDataProperty",
				"Type": "json"
			}
		}],
		"InputParameterSet": [],
		"Label": "Operating System Install on Standalone server",
		"Name": "InstallOS",
		"ObjectType": "workflow.WorkflowDefinition",
		"OutputDefinition": [],
		"Properties": {
			"ObjectType": "workflow.WorkflowProperties",
			"SupportStatus": "Supported"
		},
		"SharedScope": "shared",
		"Tasks": [{
			"Description": "Operating System Install Start",
			"Label": "StartTask",
			"Name": "StartTask",
			"NextTask": "FormatWorkflowInputTask",
			"ObjectType": "workflow.StartTask"
		}, {
			"CatalogMoid": "shared",
			"Description": "Process Workflow Input Task",
			"InputParameters": {
				"AdditionalParameters": "${workflow.input.AdditionalParameters}",
				"Answers": "${workflow.input.Answers}",
				"ConfigurationFile": "${workflow.input.ConfigurationFile}",
				"InstallMode": "${workflow.input.InstallMode}",
				"OSParameters": "${workflow.input.OSParameters}",
				"OsImage": "${workflow.input.OsImage}",
				"Server": "${workflow.input.Server}"
			},
			"Label": "Process Workflow Input Task",
			"Name": "FormatWorkflowInputTask",
			"ObjectType": "workflow.WorkerTask",
			"OnFailure": "FailureEndTask",
			"OnSuccess": "PerformScopedInventory",
			"TaskDefinitionName": "FormatWorkflowInputTask",
			"Version": 1
		}, {
			"CatalogMoid": "shared",
			"Description": "Perform Scoped Inventory on the server",
			"InputParameters": {
				"DeviceMoId": "${FormatWorkflowInputTask.output.DeviceMoId}",
				"Mos": "${FormatWorkflowInputTask.output.Mos}"
			},
			"Label": "Perform Scoped Inventory",
			"Name": "PerformScopedInventory",
			"ObjectType": "workflow.WorkerTask",
			"OnFailure": "FailureEndTask",
			"OnSuccess": "ConfirmOSInstallTaskParameters",
			"TaskDefinitionName": "UpdateServerInventoryTask",
			"Version": 1
		}, {
			"CatalogMoid": "shared",
			"Description": "Confirm SecureBoot Properties",
			"InputParameters": {
				"AnswerSource": "${FormatWorkflowInputTask.output.AnswerType}",
				"TargetDevice": "${FormatWorkflowInputTask.output.TargetDevice}"
			},
			"Label": "Confirm Secure Boot Configuration",
			"Name": "ConfirmOSInstallTaskParameters",
			"ObjectType": "workflow.WorkerTask",
			"OnFailure": "FailureEndTask",
			"OnSuccess": "ConfirmInstallConfiguration",
			"TaskDefinitionName": "ConfirmOSInstallTaskParameters",
			"Version": 1
		}, {
			"CatalogMoid": "shared",
			"Description": "Validate Install configuration provided by the user.",
			"InputParameters": {
				"AnswerSource": "${FormatWorkflowInputTask.output.AnswerType}",
				"InstallTarget": "${workflow.input.InstallTarget}",
				"ScuImage": "${workflow.input.ScuImage}",
				"Server": "${FormatWorkflowInputTask.output.Server}",
				"TargetDevice": "${FormatWorkflowInputTask.output.TargetDevice}"
			},
			"Label": "Confirm Install Configuration",
			"Name": "ConfirmInstallConfiguration",
			"ObjectType": "workflow.WorkerTask",
			"OnFailure": "FailureEndTask",
			"OnSuccess": "PopulateConfigurationFile",
			"TaskDefinitionName": "ConfirmOsInstallConfiguration",
			"Version": 1
		}, {
			"CatalogMoid": "shared",
			"Description": "Customize answers and create Operating System Deployment Utility configuration",
			"InputParameters": {
				"AdditionalParameters": "${workflow.input.AdditionalParameters}",
				"AnswerSource": "${FormatWorkflowInputTask.output.AnswerType}",
				"Answers": "${FormatWorkflowInputTask.output.Answers}",
				"BootMode": "${ConfirmInstallConfiguration.output.BootMode}",
				"ConfigurationFile": "${FormatWorkflowInputTask.output.ConfigurationFile}",
				"InstallTarget": "${ConfirmInstallConfiguration.output.InstallTarget}",
				"OsImage": "${workflow.input.OsImage}",
				"OsParams": "${FormatWorkflowInputTask.output.OsParams}",
				"ScuImage": "${workflow.input.ScuImage}",
				"Server": "${FormatWorkflowInputTask.output.Server}"
			},
			"Label": "Prepare Operating System Install Configuration",
			"Name": "PopulateConfigurationFile",
			"ObjectType": "workflow.WorkerTask",
			"OnFailure": "FailureEndTask",
			"OnSuccess": "TestScuCustomization",
			"TaskDefinitionName": "SaveOSAnswerFile",
			"Version": 1
		}, {
			"Condition": "${ConfirmInstallConfiguration.output.InstallMode}",
			"DecisionCases": [{
				"Description": "This case is matched when SCU is skipped for Embedded Install",
				"NextTask": "QueryVMediaMappingStatus",
				"ObjectType": "workflow.DecisionCase",
				"Value": "EmbeddedWithoutScu"
			}, {
				"Description": "This case is matched when SCU is choosen for any mode of install",
				"NextTask": "OSIStart",
				"ObjectType": "workflow.DecisionCase",
				"Value": "SCUFlow"
			}, {
				"Description": "This case is matched when SCU is required but missing",
				"NextTask": "FailureEndTask",
				"ObjectType": "workflow.DecisionCase",
				"Value": "Invalid"
			}],
			"DefaultTask": "FailureEndTask",
			"Label": "Evaluate Server Configuration Utility Customization",
			"Name": "TestScuCustomization",
			"ObjectType": "workflow.DecisionTask"
		}, {
			"CatalogMoid": "shared",
			"Description": "Initiate Operating System Installation",
			"InputParameters": {
				"AnswerSource": "${FormatWorkflowInputTask.output.AnswerType}",
				"IsoShare": "${PopulateConfigurationFile.output.IsoShare}",
				"IsoShareIp": "${PopulateConfigurationFile.output.IsoShareIp}",
				"IsoSharePassword": "${PopulateConfigurationFile.output.IsoSharePassword}",
				"IsoShareType": "${PopulateConfigurationFile.output.IsoShareType}",
				"IsoShareUser": "${PopulateConfigurationFile.output.IsoShareUser}",
				"TargetDevice": "${FormatWorkflowInputTask.output.TargetDevice}"
			},
			"Label": "Initiate Operating System Installation",
			"Name": "OSIStart",
			"ObjectType": "workflow.WorkerTask",
			"OnFailure": "DeleteBmcFileOnFail",
			"OnSuccess": "DeleteBmcFile",
			"TaskDefinitionName": "StartOSInstallAgent",
			"Version": 1
		}, {
			"CatalogMoid": "shared",
			"Description": "Clean Operating System Configuration Files",
			"InputParameters": {
				"AnswerSource": "${FormatWorkflowInputTask.output.AnswerType}",
				"ServerId": "${FormatWorkflowInputTask.output.ServerId}",
				"ServerType": "${FormatWorkflowInputTask.output.ServerType}"
			},
			"Label": "Clean Operating System Configuration Files",
			"Name": "DeleteBmcFileOnFail",
			"ObjectType": "workflow.WorkerTask",
			"OnFailure": "ResetVMediaMappingOnFail",
			"OnSuccess": "ResetVMediaMappingOnFail",
			"TaskDefinitionName": "os.DeleteBmcFile",
			"Version": 1
		}, {
			"CatalogMoid": "shared",
			"Description": "Reset Virtual Media Mapping",
			"InputParameters": {
				"IMGPassword": "${ConfirmInstallConfiguration.output.IMGPassword}",
				"ISOPassword": "${ConfirmInstallConfiguration.output.ISOPassword}",
				"ResetVmediaConfig": "${ConfirmInstallConfiguration.output.ResetVmediaConfig}",
				"ResetVmediaConfigIMG": "${ConfirmInstallConfiguration.output.ResetVmediaConfigIMG}",
				"ResetVmediaConfigISO": "${ConfirmInstallConfiguration.output.ResetVmediaConfigISO}",
				"TargetDevice": "${FormatWorkflowInputTask.output.TargetDevice}",
				"VmediaMappingIMG": "${ConfirmInstallConfiguration.output.VmediaConfigIMG}",
				"VmediaMappingISO": "${ConfirmInstallConfiguration.output.VmediaConfigISO}",
				"VolumeNameIMG": "${ConfirmInstallConfiguration.output.VolumeNameIMG}",
				"VolumeNameISO": "${ConfirmInstallConfiguration.output.VolumeNameISO}"
			},
			"Label": "Reset Virtual Media Mapping",
			"Name": "ResetVMediaMappingOnFail",
			"ObjectType": "workflow.WorkerTask",
			"OnFailure": "TestBootOrderCustomizationOnFail",
			"OnSuccess": "TestBootOrderCustomizationOnFail",
			"TaskDefinitionName": "ResetVMediaMapping",
			"Version": 1
		}, {
			"Condition": "${ConfirmInstallConfiguration.output.CleanupBootOrder}",
			"DecisionCases": [{
				"Description": "This case is matched when Boot policy is associated to the server in Cisco or Custom Install modes.",
				"NextTask": "CleanupBootOrderOnFail",
				"ObjectType": "workflow.DecisionCase",
				"Value": "true"
			}, {
				"Description": "This case is matched when Boot policy is not associated or Install mode is Embedded.",
				"NextTask": "TestRecalculateConfigDriftOnFail",
				"ObjectType": "workflow.DecisionCase",
				"Value": "false"
			}],
			"DefaultTask": "FailureEndTask",
			"Label": "Evaluate Boot Order Customization",
			"Name": "TestBootOrderCustomizationOnFail",
			"ObjectType": "workflow.DecisionTask"
		}, {
			"CatalogMoid": "shared",
			"Description": "Cleanup Boot Order",
			"InputParameters": {
				"RebootServer": false,
				"TargetDevice": "${FormatWorkflowInputTask.output.TargetDevice}"
			},
			"Label": "Cleanup Boot Order",
			"Name": "CleanupBootOrderOnFail",
			"ObjectType": "workflow.WorkerTask",
			"OnFailure": "CalculateDriftOnFail",
			"OnSuccess": "CalculateDriftOnFail",
			"TaskDefinitionName": "ResetServerBootOrder",
			"Version": 1
		}, {
			"Condition": "${ConfirmInstallConfiguration.output.ResetVmediaConfig}",
			"DecisionCases": [{
				"Description": "This case is matched when server profile with vMedia policy is attached to the server.",
				"NextTask": "CalculateDriftOnFail",
				"ObjectType": "workflow.DecisionCase",
				"Value": "true"
			}, {
				"Description": "This case is matched when no boot policy or vMedia policy is attached to the server.",
				"NextTask": "FailureEndTask",
				"ObjectType": "workflow.DecisionCase",
				"Value": "false"
			}],
			"DefaultTask": "FailureEndTask",
			"Label": "Evaluate need to Recalculate Configuration Drift",
			"Name": "TestRecalculateConfigDriftOnFail",
			"ObjectType": "workflow.DecisionTask"
		}, {
			"CatalogMoid": "shared",
			"Description": "Recalculate Configuration Drift",
			"InputParameters": {
				"Body": {
					"ContentType": "json",
					"Text": "{\"Action\":\"TriggerDrift\"}"
				},
				"Method": "PATCH",
				"Url": "${ConfirmInstallConfiguration.output.ProfileUrl}"
			},
			"Label": "Recalculate Configuration drift",
			"Name": "CalculateDriftOnFail",
			"ObjectType": "workflow.WorkerTask",
			"OnFailure": "FailureEndTask",
			"OnSuccess": "FailureEndTask",
			"TaskDefinitionName": "InvokeGenericWebApi",
			"Version": 2
		}, {
			"CatalogMoid": "shared",
			"Description": "Clean Operating System Configuration Files",
			"InputParameters": {
				"AnswerSource": "${FormatWorkflowInputTask.output.AnswerType}",
				"ServerId": "${FormatWorkflowInputTask.output.ServerId}",
				"ServerType": "${FormatWorkflowInputTask.output.ServerType}"
			},
			"Label": "Clean Operating System Configuration Files",
			"Name": "DeleteBmcFile",
			"ObjectType": "workflow.WorkerTask",
			"OnFailure": "ResetVMediaMappingOnFail",
			"OnSuccess": "ConfirmVMediaMappingStatus",
			"TaskDefinitionName": "os.DeleteBmcFile",
			"Version": 1
		}, {
			"CatalogMoid": "shared",
			"Description": "Query Virtual Media Entries",
			"InputParameters": {
				"TargetDevice": "${FormatWorkflowInputTask.output.TargetDevice}",
				"ValidateMappingStatus": false
			},
			"Label": "Validate Virtual Media Mapping",
			"Name": "QueryVMediaMappingStatus",
			"ObjectType": "workflow.WorkerTask",
			"OnFailure": "FailureEndTask",
			"OnSuccess": "UnmapVirtualMedia",
			"TaskDefinitionName": "ConfirmVMediaMappingStatus",
			"Version": 1
		}, {
			"CatalogMoid": "shared",
			"Description": "Unmap Virtual Media Volume",
			"InputParameters": {
				"TargetDevice": "${FormatWorkflowInputTask.output.TargetDevice}",
				"VolumeName": "${QueryVMediaMappingStatus.output.VolumeName}"
			},
			"Label": "Unmap Mapped Virtual Media Mapping",
			"Name": "UnmapVirtualMedia",
			"ObjectType": "workflow.WorkerTask",
			"OnFailure": "FailureEndTask",
			"OnSuccess": "CreateVmediaMapping",
			"TaskDefinitionName": "DisableVMediaMapping",
			"Version": 1
		}, {
			"CatalogMoid": "shared",
			"Description": "Create Virtual Media Mapping",
			"InputParameters": {
				"RemoteFile": "${PopulateConfigurationFile.output.RemoteFile}",
				"RemoteShare": "${PopulateConfigurationFile.output.RemoteShare}",
				"RemoteShareMountOptions": "${PopulateConfigurationFile.output.IsoShareMountOptions}",
				"RemoteSharePassword": "${PopulateConfigurationFile.output.IsoSharePassword}",
				"RemoteShareType": "${PopulateConfigurationFile.output.IsoShareType}",
				"RemoteShareUser": "${PopulateConfigurationFile.output.IsoShareUser}",
				"TargetDevice": "${FormatWorkflowInputTask.output.TargetDevice}",
				"VolumeName": "OSI"
			},
			"Label": "Create New Virtual Media Mapping",
			"Name": "CreateVmediaMapping",
			"ObjectType": "workflow.WorkerTask",
			"OnFailure": "FailureEndTask",
			"OnSuccess": "ConfirmVMediaMappingStatus",
			"TaskDefinitionName": "NewVMediaMapping",
			"Version": 1
		}, {
			"CatalogMoid": "shared",
			"Description": "Confirm Virtual Media Mapping",
			"InputParameters": {
				"TargetDevice": "${FormatWorkflowInputTask.output.TargetDevice}",
				"ValidateMappingStatus": true
			},
			"Label": "Confirm Virtual Media Mapping",
			"Name": "ConfirmVMediaMappingStatus",
			"ObjectType": "workflow.WorkerTask",
			"OnFailure": "ResetVMediaMappingOnFail",
			"OnSuccess": "OSInstallStatus",
			"TaskDefinitionName": "ConfirmVMediaMappingStatus",
			"Version": 1
		}, {
			"CatalogMoid": "shared",
			"Description": "Track Operating System Bootstrap Progress",
			"InputParameters": {
				"AnswerSource": "${FormatWorkflowInputTask.output.AnswerType}",
				"InstallTarget": "${workflow.input.InstallTarget}",
				"TargetDevice": "${FormatWorkflowInputTask.output.TargetDevice}"
			},
			"Label": "Track Operating System Bootstrap Progress",
			"Name": "OSInstallStatus",
			"ObjectType": "workflow.WorkerTask",
			"OnFailure": "ResetVMediaMappingOnFail",
			"OnSuccess": "ReadBmcFile",
			"TaskDefinitionName": "WatchOSInstallStatus",
			"Version": 1
		}, {
			"CatalogMoid": "shared",
			"Description": "Monitor Operating System Installation",
			"InputParameters": {
				"AnswerSource": "${FormatWorkflowInputTask.output.AnswerType}",
				"OsVendor": "${PopulateConfigurationFile.output.OsVendor}",
				"OsVersion": "${PopulateConfigurationFile.output.OsVersion}",
				"ServerId": "${FormatWorkflowInputTask.output.ServerId}",
				"ServerType": "${FormatWorkflowInputTask.output.ServerType}"
			},
			"Label": "Monitor Operating System Installation",
			"Name": "ReadBmcFile",
			"ObjectType": "workflow.WorkerTask",
			"OnFailure": "ResetVMediaMappingOnFail",
			"OnSuccess": "ResetVMediaMapping",
			"TaskDefinitionName": "os.ReadBmcFile",
			"Version": 1
		}, {
			"CatalogMoid": "shared",
			"Description": "Reset Virtual Media Mapping",
			"InputParameters": {
				"IMGPassword": "${ConfirmInstallConfiguration.output.IMGPassword}",
				"ISOPassword": "${ConfirmInstallConfiguration.output.ISOPassword}",
				"ResetVmediaConfig": "${ConfirmInstallConfiguration.output.ResetVmediaConfig}",
				"ResetVmediaConfigIMG": "${ConfirmInstallConfiguration.output.ResetVmediaConfigIMG}",
				"ResetVmediaConfigISO": "${ConfirmInstallConfiguration.output.ResetVmediaConfigISO}",
				"TargetDevice": "${FormatWorkflowInputTask.output.TargetDevice}",
				"VmediaMappingIMG": "${ConfirmInstallConfiguration.output.VmediaConfigIMG}",
				"VmediaMappingISO": "${ConfirmInstallConfiguration.output.VmediaConfigISO}",
				"VolumeNameIMG": "${ConfirmInstallConfiguration.output.VolumeNameIMG}",
				"VolumeNameISO": "${ConfirmInstallConfiguration.output.VolumeNameISO}"
			},
			"Label": "Reset Virtual Media Mapping",
			"Name": "ResetVMediaMapping",
			"ObjectType": "workflow.WorkerTask",
			"OnFailure": "FailureEndTask",
			"OnSuccess": "TestBootOrderCustomization",
			"TaskDefinitionName": "ResetVMediaMapping",
			"Version": 1
		}, {
			"Condition": "${ConfirmInstallConfiguration.output.CleanupBootOrder}",
			"DecisionCases": [{
				"Description": "This case is matched when Boot policy is associated to the server in Cisco or Custom Install modes.",
				"NextTask": "CleanupBootOrder",
				"ObjectType": "workflow.DecisionCase",
				"Value": "true"
			}, {
				"Description": "This case is matched when Boot policy is not associated or Install mode is Embedded.",
				"NextTask": "SetBootOrderToLocalHdd",
				"ObjectType": "workflow.DecisionCase",
				"Value": "false"
			}],
			"DefaultTask": "FailureEndTask",
			"Label": "Evaluate Boot Order Customization",
			"Name": "TestBootOrderCustomization",
			"ObjectType": "workflow.DecisionTask"
		}, {
			"CatalogMoid": "shared",
			"Description": "Cleanup Boot Order",
			"InputParameters": {
				"RebootServer": true,
				"TargetDevice": "${FormatWorkflowInputTask.output.TargetDevice}"
			},
			"Label": "Cleanup Boot Order",
			"Name": "CleanupBootOrder",
			"ObjectType": "workflow.WorkerTask",
			"OnFailure": "FailureEndTask",
			"OnSuccess": "CalculateDrift",
			"TaskDefinitionName": "ResetServerBootOrder",
			"Version": 1
		}, {
			"CatalogMoid": "shared",
			"Description": "Set Boot Order",
			"InputParameters": {
				"AnswerSource": "${FormatWorkflowInputTask.output.AnswerType}",
				"BootMode": "${ConfirmInstallConfiguration.output.BootMode}",
				"Model": "${PopulateConfigurationFile.output.Model}",
				"OsVendor": "${PopulateConfigurationFile.output.OsVendor}",
				"OsVersion": "${PopulateConfigurationFile.output.OsVersion}",
				"PlatformType": "${PopulateConfigurationFile.output.PlatformType}",
				"StorageControllerSlotId": "${ConfirmInstallConfiguration.output.StorageControllerSlotId}",
				"TargetDevice": "${FormatWorkflowInputTask.output.TargetDevice}"
			},
			"Label": "Set Boot Order",
			"Name": "SetBootOrderToLocalHdd",
			"ObjectType": "workflow.WorkerTask",
			"OnFailure": "FailureEndTask",
			"OnSuccess": "TestRecalculateConfigDrift",
			"TaskDefinitionName": "SetServerBootOrder",
			"Version": 1
		}, {
			"Condition": "${ConfirmInstallConfiguration.output.ResetVmediaConfig}",
			"DecisionCases": [{
				"Description": "This case is matched when server profile with vMedia policy is attached to the server.",
				"NextTask": "CalculateDrift",
				"ObjectType": "workflow.DecisionCase",
				"Value": "true"
			}, {
				"Description": "This case is matched when no boot policy or vMedia policy is attached to the server.",
				"NextTask": "SuccessEndTask",
				"ObjectType": "workflow.DecisionCase",
				"Value": "false"
			}],
			"DefaultTask": "FailureEndTask",
			"Label": "Evaluate need to Recalculate Configuration Drift",
			"Name": "TestRecalculateConfigDrift",
			"ObjectType": "workflow.DecisionTask"
		}, {
			"CatalogMoid": "shared",
			"Description": "Recalculate Configuration Drift",
			"InputParameters": {
				"Body": {
					"ContentType": "json",
					"Text": "{\"Action\":\"TriggerDrift\"}"
				},
				"Method": "PATCH",
				"Url": "${ConfirmInstallConfiguration.output.ProfileUrl}"
			},
			"Label": "Recalculate Configuration drift",
			"Name": "CalculateDrift",
			"ObjectType": "workflow.WorkerTask",
			"OnFailure": "SuccessEndTask",
			"OnSuccess": "SuccessEndTask",
			"TaskDefinitionName": "InvokeGenericWebApi",
			"Version": 2
		}, {
			"Description": "Operating System installation completion task, on success",
			"Label": "SuccessEndTask",
			"Name": "SuccessEndTask",
			"ObjectType": "workflow.SuccessEndTask"
		}, {
			"Description": "Operating System installation completion task, on failure",
			"Label": "FailureEndTask",
			"Name": "FailureEndTask",
			"ObjectType": "workflow.FailureEndTask"
		}],
		"UiInputFilters": [],
		"VariableDefinition": [],
		"Version": 13
	},
	"ClassId": "bulk.RestSubRequest",
	"ObjectType": "bulk.RestSubRequest",
	"TargetMoid": "",
	"Uri": "/v1/workflow/WorkflowDefinitions",
	"Verb": "POST"
}, {
	"Body": {
		"ClassId": "workflow.TaskDefinition",
		"DefaultVersion": true,
		"Description": "This is a task to validate OS install parameters for Intersight Managed Server",
		"Label": "Confirm OS Install Task Parameters for IMM",
		"Name": "ConfirmOSInstallParameters",
		"ObjectType": "workflow.TaskDefinition",
		"Properties": {
			"InputDefinition": [{
				"CustomDataTypeProperties": {
					"CatalogMoid": "shared",
					"ObjectType": "workflow.CustomDataProperty"
				},
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Target Device",
				"Name": "TargetDevice",
				"ObjectType": "workflow.TargetDataType",
				"Properties": [{
					"DisplayAttributes": ["DeviceHostname", "DeviceIpAddress", "Pid", "Serial"],
					"ObjectType": "workflow.TargetProperty",
					"Selector": "/api/v1/asset/DeviceRegistrations",
					"SelectorProperty": {
						"Method": "GET",
						"ObjectType": "workflow.SelectorProperty"
					}
				}],
				"Required": true
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Serial",
				"Name": "Serial",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				},
				"Required": true
			}],
			"ObjectType": "workflow.Properties",
			"OutputDefinition": [{
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Actual Boot Mode",
				"Name": "ActualBootMode",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				},
				"Required": true
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Existing Configuration",
				"Name": "ConfigPolicy",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				},
				"Required": true
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Configured Boot Mode",
				"Name": "ConfiguredBootMode",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				},
				"Required": true
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Actual Order",
				"Name": "ActualOrder",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				},
				"Required": true
			}],
			"RetryCount": 10,
			"RetryDelay": 30,
			"RetryPolicy": "Fixed",
			"SupportStatus": "Supported",
			"Timeout": 600,
			"TimeoutPolicy": "Retry"
		},
		"RollbackTasks": [],
		"SharedScope": "shared",
		"Version": 1
	},
	"ClassId": "bulk.RestSubRequest",
	"ObjectType": "bulk.RestSubRequest",
	"TargetMoid": "",
	"Uri": "/v1/workflow/TaskDefinitions",
	"Verb": "POST"
}, {
	"Body": {
		"ClassId": "workflow.TaskDefinition",
		"Description": "Sets Server Power state to Power On, Power Off, Power Cycle or Hard Reset.",
		"Label": "Set Server Power State",
		"Name": "SetServerPowerState",
		"ObjectType": "workflow.TaskDefinition",
		"Properties": {
			"ExternalMeta": true,
			"InputDefinition": [{
				"CustomDataTypeProperties": {
					"CatalogMoid": "shared",
					"ObjectType": "workflow.CustomDataProperty"
				},
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Server",
				"Name": "Server",
				"ObjectType": "workflow.TargetDataType",
				"Properties": [{
					"ConnectorAttribute": "RegisteredDevice.Moid",
					"DisplayAttributes": ["Name"],
					"ObjectType": "workflow.TargetProperty",
					"Selector": "/api/v1/compute/PhysicalSummaries?$filter=PlatformType in ('IMC','IMCBlade','IMCM5','IMCM4')",
					"SupportedObjects": ["compute.RackUnit", "compute.Blade", "compute.PhysicalSummary"]
				}],
				"Required": true
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"Description": "Sets Server Power state to Power On, Power Off, Power Cycle or Hard Reset.",
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Desired Power State",
				"Name": "PowerState",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [{
							"Label": "Power On",
							"ObjectType": "workflow.EnumEntry",
							"Value": "Power On"
						}, {
							"Label": "Power Off",
							"ObjectType": "workflow.EnumEntry",
							"Value": "Power Off"
						}, {
							"Label": "Power Cycle",
							"ObjectType": "workflow.EnumEntry",
							"Value": "Power Cycle"
						}, {
							"Label": "Hard Reset",
							"ObjectType": "workflow.EnumEntry",
							"Value": "Hard Reset"
						}],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "enum"
				},
				"Required": true
			}],
			"ObjectType": "workflow.Properties",
			"OutputDefinition": [{
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"Description": "Workflow Triggered",
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Workflow Triggered",
				"Name": "Workflow",
				"ObjectType": "workflow.MoReferenceDataType",
				"Properties": [{
					"DisplayAttributes": ["Name"],
					"ObjectType": "workflow.MoReferenceProperty"
				}]
			}],
			"RetryDelay": 100,
			"RetryPolicy": "Fixed",
			"SupportStatus": "Beta",
			"Timeout": 86400,
			"TimeoutPolicy": "Retry"
		},
		"RollbackTasks": [],
		"SharedScope": "shared",
		"Tags": [{
			"Key": "category",
			"Value": "Compute"
		}, {
			"Key": "platformType.IMC",
			"Value": "true"
		}, {
			"Key": "platformType.IMCBlade",
			"Value": "true"
		}],
		"Version": 1
	},
	"ClassId": "bulk.RestSubRequest",
	"ObjectType": "bulk.RestSubRequest",
	"TargetMoid": "",
	"Uri": "/v1/workflow/TaskDefinitions",
	"Verb": "POST"
}, {
	"Body": {
		"ClassId": "workflow.TaskDefinition",
		"DefaultVersion": true,
		"Description": "This is a task to validate the status of server",
		"Label": "Confirm Server status",
		"Name": "ConfirmServerState",
		"ObjectType": "workflow.TaskDefinition",
		"Properties": {
			"InputDefinition": [{
				"CustomDataTypeProperties": {
					"CatalogMoid": "shared",
					"ObjectType": "workflow.CustomDataProperty"
				},
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Target Device",
				"Name": "TargetDevice",
				"ObjectType": "workflow.TargetDataType",
				"Properties": [{
					"DisplayAttributes": ["DeviceHostname", "DeviceIpAddress", "Pid", "Serial"],
					"ObjectType": "workflow.TargetProperty",
					"Selector": "/api/v1/asset/DeviceRegistrations",
					"SelectorProperty": {
						"Method": "GET",
						"ObjectType": "workflow.SelectorProperty"
					}
				}],
				"Required": true
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Serial",
				"Name": "Serial",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				},
				"Required": true
			}],
			"ObjectType": "workflow.Properties",
			"OutputDefinition": [{
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Power State",
				"Name": "PowerState",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				},
				"Required": true
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Post Completion Status",
				"Name": "PostCompletionState",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				},
				"Required": true
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Actual Boot Mode",
				"Name": "ActualBootMode",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				},
				"Required": true
			}],
			"RetryCount": 20,
			"RetryDelay": 10,
			"RetryPolicy": "Fixed",
			"SupportStatus": "Supported",
			"Timeout": 60,
			"TimeoutPolicy": "Retry"
		},
		"RollbackTasks": [],
		"SharedScope": "shared",
		"Version": 1
	},
	"ClassId": "bulk.RestSubRequest",
	"ObjectType": "bulk.RestSubRequest",
	"TargetMoid": "",
	"Uri": "/v1/workflow/TaskDefinitions",
	"Verb": "POST"
}, {
	"Body": {
		"ClassId": "workflow.TaskDefinition",
		"DefaultVersion": true,
		"Description": "This is a task to Install OS via Redfish",
		"Label": "InstallOSIMM",
		"Name": "InstallOSIMM",
		"ObjectType": "workflow.TaskDefinition",
		"Properties": {
			"InputDefinition": [{
				"CustomDataTypeProperties": {
					"CatalogMoid": "shared",
					"ObjectType": "workflow.CustomDataProperty"
				},
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Target Device",
				"Name": "TargetDevice",
				"ObjectType": "workflow.TargetDataType",
				"Properties": [{
					"DisplayAttributes": ["DeviceHostname", "DeviceIpAddress", "Pid", "Serial"],
					"ObjectType": "workflow.TargetProperty",
					"Selector": "/api/v1/asset/DeviceRegistrations",
					"SelectorProperty": {
						"Method": "GET",
						"ObjectType": "workflow.SelectorProperty"
					}
				}],
				"Required": true
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "TargetDisk",
				"Name": "TargetDisk",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				},
				"Required": true
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"Description": "SCU Image Details",
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "SCU Image Details",
				"Name": "SCUImageDetails",
				"ObjectType": "workflow.CustomDataType",
				"Properties": {
					"CatalogMoid": "shared",
					"CustomDataTypeName": "ImageDetailsConfig",
					"ObjectType": "workflow.CustomDataProperty"
				},
				"Required": true
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"Description": "OS Image Details",
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "OS Image Details",
				"Name": "OSImageDetails",
				"ObjectType": "workflow.CustomDataType",
				"Properties": {
					"CatalogMoid": "shared",
					"CustomDataTypeName": "ImageDetailsConfig",
					"ObjectType": "workflow.CustomDataProperty"
				},
				"Required": true
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "AnswerFileDetails",
				"Name": "AnswerFileDetails",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "json"
				},
				"Required": true
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "TargetOSDetails",
				"Name": "TargetOSDetails",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "json"
				},
				"Required": true
			}],
			"ObjectType": "workflow.Properties",
			"OutputDefinition": [{
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Results",
				"Name": "Results",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				},
				"Required": true
			}],
			"RetryCount": 3,
			"RetryDelay": 30,
			"RetryPolicy": "Fixed",
			"SupportStatus": "Supported",
			"Timeout": 600,
			"TimeoutPolicy": "Retry"
		},
		"RollbackTasks": [],
		"SecurePropAccess": true,
		"SharedScope": "shared",
		"Version": 1
	},
	"ClassId": "bulk.RestSubRequest",
	"ObjectType": "bulk.RestSubRequest",
	"TargetMoid": "",
	"Uri": "/v1/workflow/TaskDefinitions",
	"Verb": "POST"
}, {
	"Body": {
		"ClassId": "workflow.TaskDefinition",
		"DefaultVersion": true,
		"Description": "This is a task to check install request status",
		"Label": "Get Install Status",
		"Name": "GetInstallStatus",
		"ObjectType": "workflow.TaskDefinition",
		"Properties": {
			"InputDefinition": [{
				"CustomDataTypeProperties": {
					"CatalogMoid": "shared",
					"ObjectType": "workflow.CustomDataProperty"
				},
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Target Device",
				"Name": "TargetDevice",
				"ObjectType": "workflow.TargetDataType",
				"Properties": [{
					"DisplayAttributes": ["DeviceHostname", "Pid", "Serial"],
					"ObjectType": "workflow.TargetProperty",
					"Selector": "/api/v1/asset/DeviceRegistrations",
					"SelectorProperty": {
						"Method": "GET",
						"ObjectType": "workflow.SelectorProperty"
					}
				}],
				"Required": true
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "TaskID",
				"Name": "TaskID",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				},
				"Required": true
			}],
			"ObjectType": "workflow.Properties",
			"OutputDefinition": [],
			"RetryCount": 30,
			"RetryDelay": 15,
			"RetryPolicy": "Fixed",
			"SupportStatus": "Supported",
			"Timeout": 90,
			"TimeoutPolicy": "Retry"
		},
		"RollbackTasks": [],
		"SharedScope": "shared",
		"Version": 1
	},
	"ClassId": "bulk.RestSubRequest",
	"ObjectType": "bulk.RestSubRequest",
	"TargetMoid": "",
	"Uri": "/v1/workflow/TaskDefinitions",
	"Verb": "POST"
}, {
	"Body": {
		"ClassId": "workflow.TaskDefinition",
		"DefaultVersion": true,
		"Description": "Set boot order for the server",
		"Label": "Set Server Boot Order",
		"Name": "UpdateBootOrder",
		"ObjectType": "workflow.TaskDefinition",
		"Properties": {
			"InputDefinition": [{
				"CustomDataTypeProperties": {
					"CatalogMoid": "shared",
					"ObjectType": "workflow.CustomDataProperty"
				},
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Target Device",
				"Name": "TargetDevice",
				"ObjectType": "workflow.TargetDataType",
				"Properties": [{
					"DisplayAttributes": ["DeviceHostname", "Pid", "Serial"],
					"ObjectType": "workflow.TargetProperty",
					"Selector": "/api/v1/asset/DeviceRegistrations",
					"SelectorProperty": {
						"Method": "GET",
						"ObjectType": "workflow.SelectorProperty"
					}
				}],
				"Required": true
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Boot Configuration",
				"Name": "BootConfiguration",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				},
				"Required": true
			}],
			"ObjectType": "workflow.Properties",
			"OutputDefinition": [],
			"RetryCount": 3,
			"RetryDelay": 10,
			"RetryPolicy": "Fixed",
			"SupportStatus": "Supported",
			"Timeout": 120,
			"TimeoutPolicy": "Retry"
		},
		"RollbackTasks": [],
		"SharedScope": "shared",
		"Version": 1
	},
	"ClassId": "bulk.RestSubRequest",
	"ObjectType": "bulk.RestSubRequest",
	"TargetMoid": "",
	"Uri": "/v1/workflow/TaskDefinitions",
	"Verb": "POST"
}, {
	"Body": {
		"ClassId": "workflow.TaskDefinition",
		"DefaultVersion": true,
		"Description": "This task is to Mount Virtual Media for OS installation.",
		"Label": "Mount Virtual Media",
		"Name": "MountVirtualMediaForImm",
		"ObjectType": "workflow.TaskDefinition",
		"Properties": {
			"InputDefinition": [{
				"CustomDataTypeProperties": {
					"CatalogMoid": "shared",
					"ObjectType": "workflow.CustomDataProperty"
				},
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Server MO",
				"Name": "ServerMO",
				"ObjectType": "workflow.TargetDataType",
				"Properties": [{
					"DisplayAttributes": ["Name"],
					"ObjectType": "workflow.TargetProperty",
					"Selector": "/api/v1/compute/PhysicalSummaries",
					"SelectorProperty": {
						"Method": "GET",
						"ObjectType": "workflow.SelectorProperty"
					}
				}],
				"Required": true
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "OS Image",
				"Name": "osImage",
				"ObjectType": "workflow.MoReferenceDataType",
				"Properties": [{
					"DisplayAttributes": ["Name"],
					"ObjectType": "workflow.MoReferenceProperty",
					"Selector": "/api/v1/softwarerepository/OperatingSystemFiles",
					"SelectorProperty": {
						"Method": "GET",
						"ObjectType": "workflow.SelectorProperty"
					}
				}],
				"Required": true
			}],
			"ObjectType": "workflow.Properties",
			"OutputDefinition": [{
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Drive ID",
				"Name": "DriveID",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				}
			}],
			"RetryCount": 3,
			"RetryDelay": 60,
			"RetryPolicy": "Fixed",
			"SupportStatus": "Supported",
			"Timeout": 300,
			"TimeoutPolicy": "Retry"
		},
		"RollbackTasks": [],
		"SharedScope": "shared",
		"Version": 1
	},
	"ClassId": "bulk.RestSubRequest",
	"ObjectType": "bulk.RestSubRequest",
	"TargetMoid": "",
	"Uri": "/v1/workflow/TaskDefinitions",
	"Verb": "POST"
}, {
	"Body": {
		"ClassId": "workflow.TaskDefinition",
		"DefaultVersion": true,
		"Description": "This is a task to get Virtual Media mount status",
		"Label": "Get Virtual Media Mount Status",
		"Name": "GetVirtualMediaMountStatusForIMM",
		"ObjectType": "workflow.TaskDefinition",
		"Properties": {
			"InputDefinition": [{
				"CustomDataTypeProperties": {
					"CatalogMoid": "shared",
					"ObjectType": "workflow.CustomDataProperty"
				},
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Target Device",
				"Name": "TargetDevice",
				"ObjectType": "workflow.TargetDataType",
				"Properties": [{
					"DisplayAttributes": ["DeviceHostname", "Pid", "Serial"],
					"ObjectType": "workflow.TargetProperty",
					"Selector": "/api/v1/asset/DeviceRegistrations",
					"SelectorProperty": {
						"Method": "GET",
						"ObjectType": "workflow.SelectorProperty"
					}
				}],
				"Required": true
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "DriveID",
				"Name": "DriveID",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				},
				"Required": true
			}],
			"ObjectType": "workflow.Properties",
			"OutputDefinition": [],
			"RetryCount": 8,
			"RetryDelay": 15,
			"RetryPolicy": "Fixed",
			"SupportStatus": "Supported",
			"Timeout": 15,
			"TimeoutPolicy": "Retry"
		},
		"RollbackTasks": [],
		"SharedScope": "shared",
		"Version": 1
	},
	"ClassId": "bulk.RestSubRequest",
	"ObjectType": "bulk.RestSubRequest",
	"TargetMoid": "",
	"Uri": "/v1/workflow/TaskDefinitions",
	"Verb": "POST"
}, {
	"Body": {
		"ClassId": "workflow.TaskDefinition",
		"DefaultVersion": true,
		"Description": "Set one time boot order for the server",
		"Label": "Set One Time Boot Order",
		"Name": "UpdateOneTimeBootOrderForImm",
		"ObjectType": "workflow.TaskDefinition",
		"Properties": {
			"InputDefinition": [{
				"CustomDataTypeProperties": {
					"CatalogMoid": "shared",
					"ObjectType": "workflow.CustomDataProperty"
				},
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Target Device",
				"Name": "TargetDevice",
				"ObjectType": "workflow.TargetDataType",
				"Properties": [{
					"DisplayAttributes": ["DeviceHostname", "Pid", "Serial"],
					"ObjectType": "workflow.TargetProperty",
					"Selector": "/api/v1/asset/DeviceRegistrations",
					"SelectorProperty": {
						"Method": "GET",
						"ObjectType": "workflow.SelectorProperty"
					}
				}],
				"Required": true
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Boot Configuration",
				"Name": "BootConfiguration",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				},
				"Required": true
			}],
			"ObjectType": "workflow.Properties",
			"OutputDefinition": [],
			"RetryCount": 3,
			"RetryDelay": 10,
			"RetryPolicy": "Fixed",
			"SupportStatus": "Supported",
			"Timeout": 120,
			"TimeoutPolicy": "Retry"
		},
		"RollbackTasks": [],
		"SharedScope": "shared",
		"Version": 1
	},
	"ClassId": "bulk.RestSubRequest",
	"ObjectType": "bulk.RestSubRequest",
	"TargetMoid": "",
	"Uri": "/v1/workflow/TaskDefinitions",
	"Verb": "POST"
}, {
	"Body": {
		"ClassId": "workflow.WorkflowDefinition",
		"DefaultVersion": true,
		"Description": "Workflow to install an Operating System on IMM servers",
		"InputDefinition": [{
			"CustomDataTypeProperties": {
				"CatalogMoid": "shared",
				"ObjectType": "workflow.CustomDataProperty"
			},
			"Default": {
				"ObjectType": "workflow.DefaultValue"
			},
			"DisplayMeta": {
				"InventorySelector": true,
				"ObjectType": "workflow.DisplayMeta",
				"WidgetType": "None"
			},
			"Label": "Server",
			"Name": "Server",
			"ObjectType": "workflow.TargetDataType",
			"Properties": [{
				"ConnectorAttribute": "RegisteredDevice.Moid",
				"DisplayAttributes": ["MgmtIpAddress", "Name", "Serial"],
				"ObjectType": "workflow.TargetProperty",
				"Selector": "/api/v1/compute/PhysicalSummaries?$filter=(ManagementMode in ('IntersightStandalone', 'Intersight'))",
				"SelectorProperty": {
					"Method": "GET",
					"ObjectType": "workflow.SelectorProperty"
				},
				"SupportedObjects": ["compute.RackUnit", "compute.Blade", "compute.PhysicalSummary"]
			}],
			"Required": true
		}, {
			"Default": {
				"ObjectType": "workflow.DefaultValue"
			},
			"DisplayMeta": {
				"InventorySelector": true,
				"ObjectType": "workflow.DisplayMeta",
				"WidgetType": "None"
			},
			"Label": "OS Image",
			"Name": "OsImage",
			"ObjectType": "workflow.MoReferenceDataType",
			"Properties": [{
				"DisplayAttributes": ["Name", "Vendor", "Version"],
				"ObjectType": "workflow.MoReferenceProperty",
				"Selector": "/api/v1/softwarerepository/OperatingSystemFiles",
				"SelectorProperty": {
					"Method": "GET",
					"ObjectType": "workflow.SelectorProperty"
				}
			}],
			"Required": true
		}, {
			"Default": {
				"ObjectType": "workflow.DefaultValue"
			},
			"DisplayMeta": {
				"InventorySelector": true,
				"ObjectType": "workflow.DisplayMeta",
				"WidgetType": "None"
			},
			"Label": "OS Parameters",
			"Name": "OSParameters",
			"ObjectType": "workflow.CustomDataType",
			"Properties": {
				"CatalogMoid": "shared",
				"CustomDataTypeName": "OSParameters",
				"ObjectType": "workflow.CustomDataProperty"
			}
		}, {
			"Default": {
				"ObjectType": "workflow.DefaultValue"
			},
			"DisplayMeta": {
				"InventorySelector": true,
				"ObjectType": "workflow.DisplayMeta",
				"WidgetType": "None"
			},
			"Label": "SCU Image",
			"Name": "ScuImage",
			"ObjectType": "workflow.MoReferenceDataType",
			"Properties": [{
				"DisplayAttributes": ["Name"],
				"ObjectType": "workflow.MoReferenceProperty",
				"Selector": "/api/v1/firmware/ServerConfigurationUtilityDistributables",
				"SelectorProperty": {
					"Method": "GET",
					"ObjectType": "workflow.SelectorProperty"
				}
			}]
		}, {
			"Default": {
				"ObjectType": "workflow.DefaultValue"
			},
			"DisplayMeta": {
				"InventorySelector": true,
				"ObjectType": "workflow.DisplayMeta",
				"WidgetType": "None"
			},
			"Label": "Configuration File",
			"Name": "ConfigurationFile",
			"ObjectType": "workflow.MoReferenceDataType",
			"Properties": [{
				"DisplayAttributes": ["Name"],
				"ObjectType": "workflow.MoReferenceProperty",
				"Selector": "/api/v1/os/ConfigurationFiles",
				"SelectorProperty": {
					"Method": "GET",
					"ObjectType": "workflow.SelectorProperty"
				}
			}]
		}, {
			"Default": {
				"ObjectType": "workflow.DefaultValue"
			},
			"DisplayMeta": {
				"InventorySelector": true,
				"ObjectType": "workflow.DisplayMeta",
				"WidgetType": "None"
			},
			"InputParameters": {
				"Vendor": "${workflow.input.OsImage.Vendor}"
			},
			"Label": "Answers",
			"Name": "Answers",
			"ObjectType": "workflow.CustomDataType",
			"Properties": {
				"CatalogMoid": "shared",
				"CustomDataTypeName": "AnswersType",
				"ObjectType": "workflow.CustomDataProperty"
			},
			"Required": true
		}, {
			"Default": {
				"ObjectType": "workflow.DefaultValue"
			},
			"DisplayMeta": {
				"InventorySelector": true,
				"ObjectType": "workflow.DisplayMeta",
				"WidgetType": "None"
			},
			"IsTemplateSecure": true,
			"Label": "Additional Parameters",
			"Name": "AdditionalParameters",
			"ObjectType": "workflow.DynamicTemplateParserDataType",
			"TemplateType": "OsInstall"
		}, {
			"Default": {
				"ObjectType": "workflow.DefaultValue"
			},
			"Description": "Primitive input with inventory selector",
			"DisplayMeta": {
				"InventorySelector": true,
				"ObjectType": "workflow.DisplayMeta",
				"WidgetType": "None"
			},
			"Label": "Install Target",
			"Name": "InstallTarget",
			"ObjectType": "workflow.PrimitiveDataType",
			"Properties": {
				"Constraints": {
					"EnumList": [],
					"ObjectType": "workflow.Constraints"
				},
				"InventorySelector": [{
					"DisplayAttributes": ["Name", "Id", "StorageControllerSlotId", "Bootable"],
					"ObjectType": "workflow.MoReferenceProperty",
					"Selector": "/api/v1/os/ValidInstallTargets",
					"SelectorProperty": {
						"Body": {
							"Servers": [{
								"Moid": "${workflow.input.Server.Moid}",
								"ObjectType": "${workflow.input.Server.SourceObjectType}"
							}],
							"Src": "orchestration"
						},
						"Method": "POST",
						"ObjectType": "workflow.SelectorProperty"
					},
					"ValueAttribute": "SourceMo"
				}],
				"ObjectType": "workflow.PrimitiveDataProperty",
				"Type": "json"
			}
		}, {
			"Default": {
				"ObjectType": "workflow.DefaultValue"
			},
			"DisplayMeta": {
				"InventorySelector": true,
				"ObjectType": "workflow.DisplayMeta",
				"WidgetType": "None"
			},
			"Label": "Installation Mode",
			"Name": "InstallMode",
			"ObjectType": "workflow.CustomDataType",
			"Properties": {
				"CatalogMoid": "shared",
				"CustomDataTypeName": "InstallModeType",
				"ObjectType": "workflow.CustomDataProperty"
			},
			"Required": true
		}],
		"InputParameterSet": [],
		"Label": "Operating System Install on IMM",
		"Name": "InstallOSIMM",
		"ObjectType": "workflow.WorkflowDefinition",
		"OutputDefinition": [],
		"Properties": {
			"ObjectType": "workflow.WorkflowProperties",
			"SupportStatus": "Supported"
		},
		"SharedScope": "shared",
		"Tasks": [{
			"Description": "Operating System Install Start",
			"Label": "StartTask",
			"Name": "StartTask",
			"NextTask": "FormatWorkflowInputTask",
			"ObjectType": "workflow.StartTask"
		}, {
			"CatalogMoid": "shared",
			"Description": "Process Workflow Input Task",
			"InputParameters": {
				"AdditionalParameters": "${workflow.input.AdditionalParameters}",
				"Answers": "${workflow.input.Answers}",
				"ConfigurationFile": "${workflow.input.ConfigurationFile}",
				"InstallMode": "${workflow.input.InstallMode}",
				"OSParameters": "${workflow.input.OSParameters}",
				"OsImage": "${workflow.input.OsImage}",
				"Server": "${workflow.input.Server}"
			},
			"Label": "Process Workflow Input Task",
			"Name": "FormatWorkflowInputTask",
			"ObjectType": "workflow.WorkerTask",
			"OnFailure": "FailureEndTask",
			"OnSuccess": "ConfirmOSInstallParameters",
			"TaskDefinitionName": "FormatWorkflowInputTask",
			"Version": 1
		}, {
			"CatalogMoid": "shared",
			"Description": "Retrieve Server Configuration",
			"InputParameters": {
				"Serial": "${FormatWorkflowInputTask.output.Serial}",
				"TargetDevice": "${FormatWorkflowInputTask.output.TargetDevice}"
			},
			"Label": "Retrieve Server Configuration",
			"Name": "ConfirmOSInstallParameters",
			"ObjectType": "workflow.WorkerTask",
			"OnFailure": "FailureEndTask",
			"OnSuccess": "CheckStagedPolicies",
			"TaskDefinitionName": "ConfirmOSInstallParameters",
			"Version": 1
		}, {
			"Condition": "if (${ConfirmOSInstallParameters.output.ActualBootMode} == 'NoActualOrder') 'Reboot'; else if (${ConfirmOSInstallParameters.output.ConfiguredBootMode} == 'NoConfigPolicy') 'NoReboot';else if (${ConfirmOSInstallParameters.output.ConfiguredBootMode} !=${ConfirmOSInstallParameters.output.ActualBootMode}) 'Reboot';else 'NoReboot' ;",
			"DecisionCases": [{
				"Description": "Power Cycle to apply boot policy",
				"NextTask": "SetServerPowerStateForPolicy",
				"ObjectType": "workflow.DecisionCase",
				"Value": "Reboot"
			}, {
				"Description": "No Staged Boot Policies",
				"NextTask": "ConfirmInstallConfiguration",
				"ObjectType": "workflow.DecisionCase",
				"Value": "NoReboot"
			}],
			"DefaultTask": "FailureEndTask",
			"Label": "Evaluate Staged Policies",
			"Name": "CheckStagedPolicies",
			"ObjectType": "workflow.DecisionTask"
		}, {
			"CatalogMoid": "shared",
			"Description": "Server Power Cycle",
			"InputParameters": {
				"PowerState": "Power Cycle",
				"Server": "${FormatWorkflowInputTask.output.Server}"
			},
			"Label": "Set Server Power State",
			"Name": "SetServerPowerStateForPolicy",
			"ObjectType": "workflow.WorkerTask",
			"OnFailure": "FailureEndTask",
			"OnSuccess": "ConfirmServerState",
			"TaskDefinitionName": "SetServerPowerState",
			"Version": 2
		}, {
			"CatalogMoid": "shared",
			"Description": "This is a task to validate the status of server",
			"InputParameters": {
				"Serial": "${FormatWorkflowInputTask.output.Serial}",
				"TargetDevice": "${FormatWorkflowInputTask.output.TargetDevice}"
			},
			"Label": "Confirm Server Power Status",
			"Name": "ConfirmServerState",
			"ObjectType": "workflow.WorkerTask",
			"OnFailure": "FailureEndTask",
			"OnSuccess": "ConfirmInstallConfiguration",
			"TaskDefinitionName": "ConfirmServerState",
			"Version": 1
		}, {
			"CatalogMoid": "shared",
			"Description": "Validate Install configuration provided by the user",
			"InputParameters": {
				"ActualBootMode": "${ConfirmOSInstallParameters.output.ActualBootMode}",
				"AnswerSource": "${FormatWorkflowInputTask.output.AnswerType}",
				"BootOrderConfig": "${ConfirmOSInstallParameters.output.ConfigPolicy}",
				"InstallTarget": "${workflow.input.InstallTarget}",
				"OSImage": "${workflow.input.OsImage}",
				"ScuImage": "${workflow.input.ScuImage}",
				"Server": "${FormatWorkflowInputTask.output.Server}",
				"TargetDevice": "${FormatWorkflowInputTask.output.TargetDevice}",
				"UpdatedActualBootMode": "${ConfirmServerState.output.ActualBootMode}"
			},
			"Label": "Validate Install Configuration",
			"Name": "ConfirmInstallConfiguration",
			"ObjectType": "workflow.WorkerTask",
			"OnFailure": "FailureEndTask",
			"OnSuccess": "TestScuCustomization",
			"TaskDefinitionName": "ConfirmOsInstallConfiguration",
			"Version": 1
		}, {
			"Condition": "${ConfirmInstallConfiguration.output.InstallMode}",
			"DecisionCases": [{
				"Description": "This case is matched when SCU is skipped for Embedded Install",
				"NextTask": "MountVirtualMedia",
				"ObjectType": "workflow.DecisionCase",
				"Value": "EmbeddedWithoutScu"
			}, {
				"Description": "This case is matched when SCU is choosen for any mode of install",
				"NextTask": "PopulateConfigurationFile",
				"ObjectType": "workflow.DecisionCase",
				"Value": "SCUFlow"
			}, {
				"Description": "This case is matched when SCU is required but missing",
				"NextTask": "FailureEndTask",
				"ObjectType": "workflow.DecisionCase",
				"Value": "Invalid"
			}],
			"DefaultTask": "FailureEndTask",
			"Label": "Evaluate Server Configuration Utility Customization",
			"Name": "TestScuCustomization",
			"ObjectType": "workflow.DecisionTask"
		}, {
			"CatalogMoid": "shared",
			"Description": "Customize answers and create Operating System Deployment Utility configuration",
			"InputParameters": {
				"AdditionalParameters": "${workflow.input.AdditionalParameters}",
				"AnswerSource": "${FormatWorkflowInputTask.output.AnswerType}",
				"Answers": "${FormatWorkflowInputTask.output.Answers}",
				"BootMode": "${ConfirmOSInstallParameters.output.ActualBootMode}",
				"ConfigurationFile": "${FormatWorkflowInputTask.output.ConfigurationFile}",
				"OsImage": "${workflow.input.OsImage}",
				"OsParams": "${FormatWorkflowInputTask.output.OsParams}",
				"ScuImage": "${workflow.input.ScuImage}",
				"Server": "${FormatWorkflowInputTask.output.Server}"
			},
			"Label": "Prepare Operating System Install Configuration",
			"Name": "PopulateConfigurationFile",
			"ObjectType": "workflow.WorkerTask",
			"OnFailure": "FailureEndTask",
			"OnSuccess": "InstallOSIMM",
			"TaskDefinitionName": "SaveOSAnswerFile",
			"Version": 1
		}, {
			"CatalogMoid": "shared",
			"Description": "Initiate Operating System Installation",
			"InputParameters": {
				"AnswerFileDetails": "${PopulateConfigurationFile.output.AnswerFileDetails}",
				"OSImageDetails": "${PopulateConfigurationFile.output.OSImageDetails}",
				"SCUImageDetails": "${PopulateConfigurationFile.output.SCUImageDetails}",
				"TargetDevice": "${FormatWorkflowInputTask.output.TargetDevice}",
				"TargetDisk": "${ConfirmInstallConfiguration.output.TargetDn}",
				"TargetOSDetails": "${PopulateConfigurationFile.output.TargetOSDetails}"
			},
			"Label": "Initiate Operating System Installation",
			"Name": "InstallOSIMM",
			"ObjectType": "workflow.WorkerTask",
			"OnFailure": "FailureEndTask",
			"OnSuccess": "GetInstallStatus",
			"TaskDefinitionName": "InstallOSIMM",
			"Version": 1
		}, {
			"CatalogMoid": "shared",
			"Description": "Track OS Install Preparation Progress",
			"InputParameters": {
				"TargetDevice": "${FormatWorkflowInputTask.output.TargetDevice}",
				"TaskID": "${InstallOSIMM.output.Results}"
			},
			"Label": "Track OS Install Preparation Progress",
			"Name": "GetInstallStatus",
			"ObjectType": "workflow.WorkerTask",
			"OnFailure": "DeleteBmcFileOnFail",
			"OnSuccess": "DeleteBmcFile",
			"TaskDefinitionName": "GetInstallStatus",
			"Version": 1
		}, {
			"CatalogMoid": "shared",
			"Description": "Clean Operating System Configuration Files",
			"InputParameters": {
				"AnswerSource": "${FormatWorkflowInputTask.output.AnswerType}",
				"ServerId": "${FormatWorkflowInputTask.output.ServerId}",
				"ServerType": "${FormatWorkflowInputTask.output.ServerType}"
			},
			"Label": "Clean Operating System Configuration Files",
			"Name": "DeleteBmcFileOnFail",
			"ObjectType": "workflow.WorkerTask",
			"OnFailure": "FailedStateInstallConfiguration",
			"OnSuccess": "FailedStateInstallConfiguration",
			"TaskDefinitionName": "os.DeleteBmcFile",
			"Version": 1
		}, {
			"CatalogMoid": "shared",
			"Description": "Clean Operating System Configuration Files",
			"InputParameters": {
				"AnswerSource": "${FormatWorkflowInputTask.output.AnswerType}",
				"ServerId": "${FormatWorkflowInputTask.output.ServerId}",
				"ServerType": "${FormatWorkflowInputTask.output.ServerType}"
			},
			"Label": "Clean Operating System Configuration Files",
			"Name": "DeleteBmcFile",
			"ObjectType": "workflow.WorkerTask",
			"OnFailure": "FailedStateInstallConfiguration",
			"OnSuccess": "CheckAnswerSource",
			"TaskDefinitionName": "os.DeleteBmcFile",
			"Version": 1
		}, {
			"Condition": "${FormatWorkflowInputTask.output.AnswerType}",
			"DecisionCases": [{
				"Description": "Evaluate Boot COnfiguration",
				"NextTask": "CheckBootConfiguration",
				"ObjectType": "workflow.DecisionCase",
				"Value": "Embedded"
			}],
			"DefaultTask": "ReadBmcFile",
			"Label": "Evaluate Answer Source",
			"Name": "CheckAnswerSource",
			"ObjectType": "workflow.DecisionTask"
		}, {
			"CatalogMoid": "shared",
			"Description": "Monitor Operating System Installation",
			"InputParameters": {
				"AnswerSource": "${FormatWorkflowInputTask.output.AnswerType}",
				"OsVendor": "${PopulateConfigurationFile.output.OsVendor}",
				"OsVersion": "${PopulateConfigurationFile.output.OsVersion}",
				"ServerId": "${FormatWorkflowInputTask.output.ServerId}",
				"ServerType": "${FormatWorkflowInputTask.output.ServerType}"
			},
			"Label": "Monitor Operating System Installation",
			"Name": "ReadBmcFile",
			"ObjectType": "workflow.WorkerTask",
			"OnFailure": "FailedStateInstallConfiguration",
			"OnSuccess": "CheckBootConfiguration",
			"TaskDefinitionName": "os.ReadBmcFile",
			"Version": 1
		}, {
			"Condition": "${ConfirmInstallConfiguration.output.SetBootOrder}",
			"DecisionCases": [{
				"Description": "Update HDD in Boot Configuration",
				"NextTask": "UpdateBootOrder",
				"ObjectType": "workflow.DecisionCase",
				"Value": "SetBootOrder"
			}, {
				"Description": "Boot Configuration change not required",
				"NextTask": "SuccessEndTask",
				"ObjectType": "workflow.DecisionCase",
				"Value": "RetainBootOrder"
			}],
			"DefaultTask": "FailureEndTask",
			"Label": "Evaluate Boot Configuration",
			"Name": "CheckBootConfiguration",
			"ObjectType": "workflow.DecisionTask"
		}, {
			"CatalogMoid": "shared",
			"Description": "Set boot order for the server",
			"InputParameters": {
				"BootConfiguration": "${ConfirmInstallConfiguration.output.BootOrderConfig}",
				"TargetDevice": "${FormatWorkflowInputTask.output.TargetDevice}"
			},
			"Label": "Set Server Boot Order",
			"Name": "UpdateBootOrder",
			"ObjectType": "workflow.WorkerTask",
			"OnFailure": "FailureEndTask",
			"OnSuccess": "SetServerPowerState",
			"TaskDefinitionName": "UpdateBootOrder",
			"Version": 1
		}, {
			"CatalogMoid": "shared",
			"Description": "Mount Virtual Media",
			"InputParameters": {
				"ServerMO": "${workflow.input.Server}",
				"osImage": "${workflow.input.OsImage}"
			},
			"Label": "Mount Virtual Media",
			"Name": "MountVirtualMedia",
			"ObjectType": "workflow.WorkerTask",
			"OnFailure": "FailureEndTask",
			"OnSuccess": "CheckMountStatus",
			"TaskDefinitionName": "MountVirtualMediaForImm",
			"Version": 1
		}, {
			"CatalogMoid": "shared",
			"Description": "Check Virtual Media Mount Status",
			"InputParameters": {
				"DriveID": "${MountVirtualMedia.output.DriveID}",
				"TargetDevice": "${FormatWorkflowInputTask.output.TargetDevice}"
			},
			"Label": "Check Mount Status",
			"Name": "CheckMountStatus",
			"ObjectType": "workflow.WorkerTask",
			"OnFailure": "FailureEndTask",
			"OnSuccess": "UpdateOnetimeBootOrder",
			"TaskDefinitionName": "GetVirtualMediaMountStatusForIMM",
			"Version": 1
		}, {
			"CatalogMoid": "shared",
			"Description": "Set onetime boot order for the server",
			"InputParameters": {
				"BootConfiguration": "${ConfirmInstallConfiguration.output.OnetimeBootConfig}",
				"TargetDevice": "${FormatWorkflowInputTask.output.TargetDevice}"
			},
			"Label": "Set Server Boot Order",
			"Name": "UpdateOnetimeBootOrder",
			"ObjectType": "workflow.WorkerTask",
			"OnFailure": "FailureEndTask",
			"OnSuccess": "SetServerPowerState",
			"TaskDefinitionName": "UpdateOneTimeBootOrderForImm",
			"Version": 1
		}, {
			"CatalogMoid": "shared",
			"Description": "Server Power Cycle",
			"InputParameters": {
				"PowerState": "Power Cycle",
				"Server": "${FormatWorkflowInputTask.output.Server}"
			},
			"Label": "Set Server Power State",
			"Name": "SetServerPowerState",
			"ObjectType": "workflow.WorkerTask",
			"OnFailure": "FailureEndTask",
			"OnSuccess": "SuccessEndTask",
			"TaskDefinitionName": "SetServerPowerState",
			"Version": 2
		}, {
			"CatalogMoid": "shared",
			"Description": "Backup Server Configuration",
			"InputParameters": {
				"Serial": "${FormatWorkflowInputTask.output.Serial}",
				"TargetDevice": "${FormatWorkflowInputTask.output.TargetDevice}"
			},
			"Label": "Backup Server Configuration",
			"Name": "FailedStateInstallConfiguration",
			"ObjectType": "workflow.WorkerTask",
			"OnFailure": "FailureEndTask",
			"OnSuccess": "UpdateBootOrderOnFailure",
			"TaskDefinitionName": "ConfirmOSInstallParameters",
			"Version": 1
		}, {
			"CatalogMoid": "shared",
			"Description": "Set boot order for the server",
			"InputParameters": {
				"BootConfiguration": "${ConfirmInstallConfiguration.output.BootOrderConfig}",
				"TargetDevice": "${FormatWorkflowInputTask.output.TargetDevice}"
			},
			"Label": "Set Server Boot Order",
			"Name": "UpdateBootOrderOnFailure",
			"ObjectType": "workflow.WorkerTask",
			"OnFailure": "FailureEndTask",
			"OnSuccess": "SetServerPowerStateOnFailure",
			"TaskDefinitionName": "UpdateBootOrder",
			"Version": 1
		}, {
			"CatalogMoid": "shared",
			"Description": "Server Power Cycle",
			"InputParameters": {
				"PowerState": "Power Cycle",
				"Server": "${FormatWorkflowInputTask.output.Server}"
			},
			"Label": "Set Server Power State",
			"Name": "SetServerPowerStateOnFailure",
			"ObjectType": "workflow.WorkerTask",
			"OnFailure": "FailureEndTask",
			"OnSuccess": "FailureEndTask",
			"TaskDefinitionName": "SetServerPowerState",
			"Version": 2
		}, {
			"Description": "Operating System installation completion task, on success",
			"Label": "SuccessEndTask",
			"Name": "SuccessEndTask",
			"ObjectType": "workflow.SuccessEndTask"
		}, {
			"Description": "Operating System installation completion task, on failure",
			"Label": "FailureEndTask",
			"Name": "FailureEndTask",
			"ObjectType": "workflow.FailureEndTask"
		}],
		"UiInputFilters": [],
		"VariableDefinition": [],
		"Version": 4
	},
	"ClassId": "bulk.RestSubRequest",
	"ObjectType": "bulk.RestSubRequest",
	"TargetMoid": "",
	"Uri": "/v1/workflow/WorkflowDefinitions",
	"Verb": "POST"
}, {
	"Body": {
		"ClassId": "workflow.WorkflowDefinition",
		"DefaultVersion": true,
		"Description": "Workflow to install an Operating System",
		"InputDefinition": [{
			"CustomDataTypeProperties": {
				"CatalogMoid": "shared",
				"CustomDataTypeName": "OSInstallTargetDataType",
				"ObjectType": "workflow.CustomDataProperty"
			},
			"Default": {
				"ObjectType": "workflow.DefaultValue"
			},
			"DisplayMeta": {
				"InventorySelector": true,
				"ObjectType": "workflow.DisplayMeta",
				"WidgetType": "None"
			},
			"Label": "Server",
			"Name": "Server",
			"ObjectType": "workflow.TargetDataType",
			"Properties": [],
			"Required": true
		}, {
			"Default": {
				"ObjectType": "workflow.DefaultValue"
			},
			"Description": "OS Specific Parameters like Edition for Windows Operating systems.",
			"DisplayMeta": {
				"InventorySelector": true,
				"ObjectType": "workflow.DisplayMeta",
				"WidgetType": "None"
			},
			"InputParameters": {
				"Server": "${workflow.inputDataType.OSInstallTargetDataType}"
			},
			"Label": "OS Install Inputs",
			"Name": "OSInstallInputs",
			"ObjectType": "workflow.CustomDataType",
			"Properties": {
				"CatalogMoid": "shared",
				"CustomDataTypeName": "OSInstallInputs",
				"ObjectType": "workflow.CustomDataProperty"
			},
			"Required": true
		}],
		"InputParameterSet": [],
		"Label": "Operating System Install",
		"Name": "InstallServerOS",
		"ObjectType": "workflow.WorkflowDefinition",
		"OutputDefinition": [],
		"Properties": {
			"ExternalMeta": true,
			"ObjectType": "workflow.WorkflowProperties",
			"SupportStatus": "Supported"
		},
		"SharedScope": "shared",
		"Tags": [{
			"Key": "category",
			"Value": "Compute"
		}],
		"Tasks": [{
			"Description": "Operating System Install Start",
			"Label": "StartTask",
			"Name": "StartTask",
			"NextTask": "ConfirmSubWorkflowTypeTask",
			"ObjectType": "workflow.StartTask"
		}, {
			"CatalogMoid": "shared",
			"Description": "This task confirms the type of server for OS Install Workflow to be executed",
			"InputParameters": {
				"InstallMode": "${workflow.input.OSInstallInputs.InstallMode}",
				"ScuImage": "${workflow.input.OSInstallInputs.ScuImage}",
				"Server": "${workflow.input.Server}"
			},
			"Label": "Confirm Server Configuration for Installation",
			"Name": "ConfirmSubWorkflowTypeTask",
			"ObjectType": "workflow.WorkerTask",
			"OnFailure": "FailureEndTask",
			"OnSuccess": "ConditionalTaskInstallOS",
			"TaskDefinitionName": "ConfirmSubWorkflowTypeTask",
			"Version": 1
		}, {
			"Condition": "${ConfirmSubWorkflowTypeTask.output.WFType}",
			"DecisionCases": [{
				"Description": "Condition to match when server is a standalone",
				"NextTask": "InstallOSStandaloneServer",
				"ObjectType": "workflow.DecisionCase",
				"Value": "Standalone"
			}, {
				"Description": "Condition to match when server is managed by IMM",
				"NextTask": "InstallOSIMMServer",
				"ObjectType": "workflow.DecisionCase",
				"Value": "IMM"
			}],
			"DefaultTask": "FailureEndTask",
			"Description": "Conditional task will check if workflow should proceed to install the Operating System",
			"Label": "Check and Proceed to Install Operating System",
			"Name": "ConditionalTaskInstallOS",
			"ObjectType": "workflow.DecisionTask"
		}, {
			"CatalogMoid": "shared",
			"Description": "Install Operating System on Standalone Server",
			"InputParameters": {
				"AdditionalParameters": "${workflow.input.OSInstallInputs.AdditionalParameters}",
				"Answers": "${workflow.input.OSInstallInputs.Answers}",
				"ConfigurationFile": "${workflow.input.OSInstallInputs.ConfigurationFile}",
				"InstallMode": "${workflow.input.OSInstallInputs.InstallMode}",
				"InstallTarget": "${workflow.input.OSInstallInputs.InstallTarget}",
				"OSParameters": "${workflow.input.OSInstallInputs.OSParameters}",
				"OsImage": "${workflow.input.OSInstallInputs.OsImage}",
				"ScuImage": "${workflow.input.OSInstallInputs.ScuImage}",
				"Server": "${workflow.input.Server}"
			},
			"Label": "Install Operating System on Standalone Server",
			"Name": "InstallOSStandaloneServer",
			"ObjectType": "workflow.SubWorkflowTask",
			"OnFailure": "FailureEndTask",
			"OnSuccess": "SuccessEndTask",
			"Version": 13,
			"WorkflowDefinitionName": "InstallOS"
		}, {
			"CatalogMoid": "shared",
			"Description": "Install Operating System on Intersight Managed Server",
			"InputParameters": {
				"AdditionalParameters": "${workflow.input.OSInstallInputs.AdditionalParameters}",
				"Answers": "${workflow.input.OSInstallInputs.Answers}",
				"ConfigurationFile": "${workflow.input.OSInstallInputs.ConfigurationFile}",
				"InstallMode": "${workflow.input.OSInstallInputs.InstallMode}",
				"InstallTarget": "${workflow.input.OSInstallInputs.InstallTarget}",
				"OSParameters": "${workflow.input.OSInstallInputs.OSParameters}",
				"OsImage": "${workflow.input.OSInstallInputs.OsImage}",
				"ScuImage": "${workflow.input.OSInstallInputs.ScuImage}",
				"Server": "${workflow.input.Server}"
			},
			"Label": "Install Operating System on Intersight Managed server",
			"Name": "InstallOSIMMServer",
			"ObjectType": "workflow.SubWorkflowTask",
			"OnFailure": "FailureEndTask",
			"OnSuccess": "SuccessEndTask",
			"Version": 4,
			"WorkflowDefinitionName": "InstallOSIMM"
		}, {
			"Description": "Operating System installation completion task, on success",
			"Label": "SuccessEndTask",
			"Name": "SuccessEndTask",
			"ObjectType": "workflow.SuccessEndTask"
		}, {
			"Description": "Operating System installation completion task, on failure",
			"Label": "FailureEndTask",
			"Name": "FailureEndTask",
			"ObjectType": "workflow.FailureEndTask"
		}],
		"UiInputFilters": [],
		"VariableDefinition": [],
		"Version": 5
	},
	"ClassId": "bulk.RestSubRequest",
	"ObjectType": "bulk.RestSubRequest",
	"TargetMoid": "",
	"Uri": "/v1/workflow/WorkflowDefinitions",
	"Verb": "POST"
}, {
	"Body": {
		"ClassId": "workflow.TaskDefinition",
		"DefaultVersion": true,
		"Description": "Pauses the current workflow for the specified duration.",
		"Label": "Sleep Task",
		"Name": "InvokeSleepTask",
		"ObjectType": "workflow.TaskDefinition",
		"Properties": {
			"ExternalMeta": true,
			"InputDefinition": [{
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Sleep Time in Seconds",
				"Name": "SleepTimeInSec",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"Max": 600,
						"Min": 1,
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "integer"
				},
				"Required": true
			}],
			"ObjectType": "workflow.Properties",
			"OutputDefinition": [],
			"RetryCount": 3,
			"RetryDelay": 60,
			"RetryPolicy": "Fixed",
			"SupportStatus": "Supported",
			"Timeout": 600,
			"TimeoutPolicy": "Timeout"
		},
		"RollbackTasks": [],
		"SharedScope": "shared",
		"Tags": [{
			"Key": "category",
			"Value": "CoreTasks"
		}],
		"Version": 1
	},
	"ClassId": "bulk.RestSubRequest",
	"ObjectType": "bulk.RestSubRequest",
	"TargetMoid": "",
	"Uri": "/v1/workflow/TaskDefinitions",
	"Verb": "POST"
}, {
	"Body": {
		"ClassId": "workflow.TaskDefinition",
		"DefaultVersion": true,
		"Description": "Remove host from a selected hypervisor. Requires datacenter and host as inputs.  On successful execution, host name is generated as output",
		"Label": "Remove Hypervisor Host",
		"Name": "RemoveHypervisorHost",
		"ObjectType": "workflow.TaskDefinition",
		"Properties": {
			"ExternalMeta": true,
			"InputDefinition": [{
				"CustomDataTypeProperties": {
					"CatalogMoid": "shared",
					"ObjectType": "workflow.CustomDataProperty"
				},
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Hypervisor Manager",
				"Name": "Vcenter",
				"ObjectType": "workflow.TargetDataType",
				"Properties": [{
					"DisplayAttributes": ["DeviceHostname", "Vendor"],
					"ObjectType": "workflow.TargetProperty",
					"Selector": "/api/v1/asset/DeviceRegistrations?$filter=PlatformType eq 'VmwareVcenter'",
					"SelectorProperty": {
						"Method": "GET",
						"ObjectType": "workflow.SelectorProperty"
					}
				}],
				"Required": true
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"Description": "Datacenter associated with the host",
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Datacenter",
				"Name": "Datacenter",
				"ObjectType": "workflow.CustomDataType",
				"Properties": {
					"CatalogMoid": "shared",
					"CustomDataTypeName": "HypervisorDatacenterType",
					"ObjectType": "workflow.CustomDataProperty"
				},
				"Required": true
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"Description": "Name or IP address of the host to be removed.",
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Host",
				"Name": "Host",
				"ObjectType": "workflow.CustomDataType",
				"Properties": {
					"CatalogMoid": "shared",
					"CustomDataTypeName": "HypervisorHostType",
					"ObjectType": "workflow.CustomDataProperty"
				},
				"Required": true
			}],
			"ObjectType": "workflow.Properties",
			"OutputDefinition": [{
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"Description": "Name of the host that was removed",
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Host",
				"Name": "Host",
				"ObjectType": "workflow.CustomDataType",
				"Properties": {
					"CatalogMoid": "shared",
					"CustomDataTypeName": "HypervisorHostType",
					"ObjectType": "workflow.CustomDataProperty"
				}
			}],
			"RetryCount": 1,
			"RetryDelay": 100,
			"RetryPolicy": "Fixed",
			"SupportStatus": "Beta",
			"Timeout": 500,
			"TimeoutPolicy": "Retry"
		},
		"RollbackTasks": [],
		"SharedScope": "shared",
		"Tags": [{
			"Key": "category",
			"Value": "Virtualization"
		}, {
			"Key": "platformType.VmwareVcenter",
			"Value": "true"
		}],
		"Version": 1
	},
	"ClassId": "bulk.RestSubRequest",
	"ObjectType": "bulk.RestSubRequest",
	"TargetMoid": "",
	"Uri": "/v1/workflow/TaskDefinitions",
	"Verb": "POST"
}, {
	"Body": {
		"ClassId": "workflow.TaskDefinition",
		"DefaultVersion": true,
		"Description": "Add host to the selected hypervisor. Requires datacenter, host IP/name, username, password as inputs. On successful execution, host name is generated as output.",
		"Label": "New Hypervisor Host",
		"Name": "NewHypervisorHost",
		"ObjectType": "workflow.TaskDefinition",
		"Properties": {
			"ExternalMeta": true,
			"InputDefinition": [{
				"CustomDataTypeProperties": {
					"CatalogMoid": "shared",
					"ObjectType": "workflow.CustomDataProperty"
				},
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Hypervisor Manager",
				"Name": "Vcenter",
				"ObjectType": "workflow.TargetDataType",
				"Properties": [{
					"DisplayAttributes": ["DeviceHostname", "Vendor"],
					"ObjectType": "workflow.TargetProperty",
					"Selector": "/api/v1/asset/DeviceRegistrations?$filter=PlatformType eq 'VmwareVcenter'",
					"SelectorProperty": {
						"Method": "GET",
						"ObjectType": "workflow.SelectorProperty"
					}
				}],
				"Required": true
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"Description": "Datacenter to which host is to be added.",
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Datacenter",
				"Name": "Datacenter",
				"ObjectType": "workflow.CustomDataType",
				"Properties": {
					"CatalogMoid": "shared",
					"CustomDataTypeName": "HypervisorDatacenterType",
					"ObjectType": "workflow.CustomDataProperty"
				},
				"Required": true
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"Description": "Cluster to which host is to be added.",
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Cluster",
				"Name": "Cluster",
				"ObjectType": "workflow.CustomDataType",
				"Properties": {
					"CatalogMoid": "shared",
					"CustomDataTypeName": "HypervisorClusterType",
					"ObjectType": "workflow.CustomDataProperty"
				}
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"Description": "Host name or IP address of the host to be added.",
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Host",
				"Name": "Host",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				},
				"Required": true
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"Description": "Username to be used for host access.",
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Username",
				"Name": "Username",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				},
				"Required": true
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"Description": "Password to be used for host access.",
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Password",
				"Name": "Password",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Secure": true,
					"Type": "string"
				},
				"Required": true
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"Description": "Connection to host will be established after successful addition.",
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Connect Now",
				"Name": "ConnectNow",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "boolean"
				}
			}],
			"ObjectType": "workflow.Properties",
			"OutputDefinition": [{
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Host",
				"Name": "Host",
				"ObjectType": "workflow.CustomDataType",
				"Properties": {
					"CatalogMoid": "shared",
					"CustomDataTypeName": "HypervisorHostType",
					"ObjectType": "workflow.CustomDataProperty"
				}
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Managed Object Reference Identity",
				"Name": "HostId",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				}
			}],
			"RetryCount": 1,
			"RetryDelay": 100,
			"RetryPolicy": "Fixed",
			"SupportStatus": "Beta",
			"Timeout": 500,
			"TimeoutPolicy": "Retry"
		},
		"RollbackTasks": [{
			"CatalogMoid": "shared",
			"Description": "Remove host from a selected hypervisor. Requires datacenter and host as inputs.  On successful execution, host name is generated as output.",
			"InputParameters": {
				"Datacenter": "${task.input.Datacenter}",
				"Folder": "${task.input.Folder}",
				"Host": "${task.input.Host}",
				"Vcenter": "${task.input.Vcenter}"
			},
			"Name": "RemoveHypervisorHost",
			"ObjectType": "workflow.RollbackTask",
			"Version": 1
		}],
		"SecurePropAccess": true,
		"SharedScope": "shared",
		"Tags": [{
			"Key": "category",
			"Value": "Virtualization"
		}, {
			"Key": "platformType.VmwareVcenter",
			"Value": "true"
		}],
		"Version": 1
	},
	"ClassId": "bulk.RestSubRequest",
	"ObjectType": "bulk.RestSubRequest",
	"TargetMoid": "",
	"Uri": "/v1/workflow/TaskDefinitions",
	"Verb": "POST"
}, {
	"Body": {
		"ClassId": "workflow.TaskDefinition",
		"DefaultVersion": true,
		"Description": "Deletes server profile given by user. A profile can not be deleted when a server is assigned to it unless it is incomplete.",
		"Label": "Remove Server Profile",
		"Name": "RemoveServerProfile",
		"ObjectType": "workflow.TaskDefinition",
		"Properties": {
			"ExternalMeta": true,
			"InputDefinition": [{
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"Description": "Server Profile specifying configuration settings for a physical server.",
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Profile",
				"Name": "Profile",
				"ObjectType": "workflow.MoReferenceDataType",
				"Properties": [{
					"DisplayAttributes": ["Name"],
					"ObjectType": "workflow.MoReferenceProperty",
					"Selector": "/api/v1/server/Profiles",
					"SelectorProperty": {
						"Method": "GET",
						"ObjectType": "workflow.SelectorProperty"
					}
				}],
				"Required": true
			}],
			"ObjectType": "workflow.Properties",
			"OutputDefinition": [],
			"RetryCount": 3,
			"RetryDelay": 30,
			"RetryPolicy": "Fixed",
			"SupportStatus": "Supported",
			"Timeout": 60,
			"TimeoutPolicy": "Retry"
		},
		"RollbackTasks": [],
		"SharedScope": "shared",
		"Tags": [{
			"Key": "category",
			"Value": "Compute"
		}, {
			"Key": "platformType.IMC",
			"Value": "true"
		}, {
			"Key": "platformType.IMCBlade",
			"Value": "true"
		}],
		"Version": 1
	},
	"ClassId": "bulk.RestSubRequest",
	"ObjectType": "bulk.RestSubRequest",
	"TargetMoid": "",
	"Uri": "/v1/workflow/TaskDefinitions",
	"Verb": "POST"
}, {
	"Body": {
		"ClassId": "workflow.TaskDefinition",
		"DefaultVersion": true,
		"Description": "Creates a server profile from the selected template and adds the associated policies to the server profile.\nIf the 'Target Profile Name' is provided, it will be considered as the name of the profile to be created. The task will fail, if the profile name already exists.\nIf the 'Target Profile Name' is not provided, the name of the profile is generated from the 'Target Profile Name Prefix' and 'Target Profile Name Suffix' inputs.\n",
		"Label": "New Server Profile from Template",
		"Name": "NewServerProfileFromTemplate",
		"ObjectType": "workflow.TaskDefinition",
		"Properties": {
			"ExternalMeta": true,
			"InputDefinition": [{
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"Description": "Server Profile template specifying configuration settings for a physical server",
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Source Profile Template",
				"Name": "SourceProfileTemplate",
				"ObjectType": "workflow.MoReferenceDataType",
				"Properties": [{
					"DisplayAttributes": ["Name"],
					"ObjectType": "workflow.MoReferenceProperty",
					"Selector": "/api/v1/server/ProfileTemplates",
					"SelectorProperty": {
						"Method": "GET",
						"ObjectType": "workflow.SelectorProperty"
					}
				}],
				"Required": true
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"Description": "Name of the Target Server Profile.\nIf the name is provided in the input and if a profile with the same name exists, then this task fails.\nIf the name is not provided, the target prefix and suffix is used to identify the available profile name.\n",
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Target Profile Name",
				"Name": "TargetProfileName",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"Max": 63,
						"Min": 1,
						"ObjectType": "workflow.Constraints",
						"Regex": "^[a-zA-Z0-9_.-]{1,64}$"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				}
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"Description": "Prefix to be used for name of the profile.\nIf not provided, \"&lt;SourceProfileTemplateName&gt;_DERIVED-\" will be used as prefix. This value is appended with an auto incremented number to identify the available profile name.\n",
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Target Profile Name Prefix",
				"Name": "TargetProfileNamePrefix",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"Max": 63,
						"Min": 1,
						"ObjectType": "workflow.Constraints",
						"Regex": "^[a-zA-Z0-9_.-]{1,64}$"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				}
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"Description": "Suffix to be used for name of the profile.\n",
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Target Profile Name Suffix",
				"Name": "TargetProfileNameSuffix",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"Max": 63,
						"Min": 1,
						"ObjectType": "workflow.Constraints",
						"Regex": "^[a-zA-Z0-9_.-]{1,64}$"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				}
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"Description": "Detailed description for the Target Server Profile.\nIf not provided, description of the template will be used.\n",
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Target Profile Description",
				"Name": "TargetProfileDescription",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"Max": 1024,
						"Min": 1,
						"ObjectType": "workflow.Constraints",
						"Regex": "^[a-zA-Z0-9]+[\\sa-zA-Z0-9_'.:-]*$"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				}
			}],
			"ObjectType": "workflow.Properties",
			"OutputDefinition": [{
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"Description": "Created Server Profile",
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Profile",
				"Name": "Profile",
				"ObjectType": "workflow.MoReferenceDataType",
				"Properties": [{
					"DisplayAttributes": ["Name"],
					"ObjectType": "workflow.MoReferenceProperty",
					"Selector": "/api/v1/server/Profiles",
					"SelectorProperty": {
						"Method": "GET",
						"ObjectType": "workflow.SelectorProperty"
					}
				}],
				"Required": true
			}],
			"RetryCount": 3,
			"RetryDelay": 60,
			"RetryPolicy": "Fixed",
			"SupportStatus": "Supported",
			"Timeout": 60,
			"TimeoutPolicy": "Timeout"
		},
		"RollbackTasks": [{
			"CatalogMoid": "shared",
			"Description": "Deletes the created server profile.",
			"InputParameters": {
				"Profile": "${task.output.Profile}"
			},
			"Name": "RemoveServerProfile",
			"ObjectType": "workflow.RollbackTask",
			"Version": 1
		}],
		"SharedScope": "shared",
		"Tags": [{
			"Key": "category",
			"Value": "Compute"
		}, {
			"Key": "platformType.IMC",
			"Value": "true"
		}, {
			"Key": "platformType.IMCBlade",
			"Value": "true"
		}],
		"Version": 1
	},
	"ClassId": "bulk.RestSubRequest",
	"ObjectType": "bulk.RestSubRequest",
	"TargetMoid": "",
	"Uri": "/v1/workflow/TaskDefinitions",
	"Verb": "POST"
}, {
	"Body": {
		"ClassId": "workflow.WorkflowDefinition",
		"DefaultVersion": true,
		"Description": "Sample Workflow to Deploy and Onboard an ESXi in an existing vSphere cluster",
		"InputDefinition": [{
			"Default": {
				"ObjectType": "workflow.DefaultValue"
			},
			"Description": "Server Profile template specifying configuration settings for a physical server",
			"DisplayMeta": {
				"InventorySelector": true,
				"ObjectType": "workflow.DisplayMeta",
				"WidgetType": "None"
			},
			"Label": "Source Profile Template",
			"Name": "SourceProfileTemplate",
			"ObjectType": "workflow.MoReferenceDataType",
			"Properties": [{
				"DisplayAttributes": ["Name"],
				"ObjectType": "workflow.MoReferenceProperty",
				"Selector": "/api/v1/server/ProfileTemplates",
				"SelectorProperty": {
					"Method": "GET",
					"ObjectType": "workflow.SelectorProperty"
				}
			}],
			"Required": true
		}, {
			"CustomDataTypeProperties": {
				"CatalogMoid": "shared",
				"CustomDataTypeName": "OSInstallTargetDataType",
				"ObjectType": "workflow.CustomDataProperty"
			},
			"Default": {
				"ObjectType": "workflow.DefaultValue"
			},
			"DisplayMeta": {
				"InventorySelector": true,
				"ObjectType": "workflow.DisplayMeta",
				"WidgetType": "None"
			},
			"Label": "Server",
			"Name": "Server",
			"ObjectType": "workflow.TargetDataType",
			"Properties": [],
			"Required": true
		}, {
			"Default": {
				"ObjectType": "workflow.DefaultValue"
			},
			"Description": "OS Specific Parameters like Edition for Windows Operating systems.",
			"DisplayMeta": {
				"InventorySelector": true,
				"ObjectType": "workflow.DisplayMeta",
				"WidgetType": "None"
			},
			"InputParameters": {
				"Server": "${workflow.inputDataType.OSInstallTargetDataType}"
			},
			"Label": "OS Install Inputs",
			"Name": "OSInstallInputs",
			"ObjectType": "workflow.CustomDataType",
			"Properties": {
				"CatalogMoid": "shared",
				"CustomDataTypeName": "OSInstallInputs",
				"ObjectType": "workflow.CustomDataProperty"
			},
			"Required": true
		}, {
			"CustomDataTypeProperties": {
				"CatalogMoid": "shared",
				"ObjectType": "workflow.CustomDataProperty"
			},
			"Default": {
				"ObjectType": "workflow.DefaultValue"
			},
			"DisplayMeta": {
				"InventorySelector": true,
				"ObjectType": "workflow.DisplayMeta",
				"WidgetType": "None"
			},
			"Label": "vCenter Target",
			"Name": "Vcenter",
			"ObjectType": "workflow.TargetDataType",
			"Properties": [{
				"DisplayAttributes": ["DeviceHostname", "Vendor"],
				"ObjectType": "workflow.TargetProperty",
				"Selector": "/api/v1/asset/DeviceRegistrations?$filter=PlatformType eq 'VmwareVcenter'",
				"SelectorProperty": {
					"Method": "GET",
					"ObjectType": "workflow.SelectorProperty"
				}
			}],
			"Required": true
		}, {
			"Default": {
				"ObjectType": "workflow.DefaultValue"
			},
			"Description": "Datacenter to which host is to be added.",
			"DisplayMeta": {
				"InventorySelector": true,
				"ObjectType": "workflow.DisplayMeta",
				"WidgetType": "None"
			},
			"Label": "VMware Datacenter",
			"Name": "Datacenter",
			"ObjectType": "workflow.CustomDataType",
			"Properties": {
				"CatalogMoid": "shared",
				"CustomDataTypeName": "HypervisorDatacenterType",
				"ObjectType": "workflow.CustomDataProperty"
			},
			"Required": true
		}, {
			"Default": {
				"ObjectType": "workflow.DefaultValue"
			},
			"Description": "Cluster to which host is to be added.",
			"DisplayMeta": {
				"InventorySelector": true,
				"ObjectType": "workflow.DisplayMeta",
				"WidgetType": "None"
			},
			"Label": "VMware Cluster",
			"Name": "Cluster",
			"ObjectType": "workflow.CustomDataType",
			"Properties": {
				"CatalogMoid": "shared",
				"CustomDataTypeName": "HypervisorClusterType",
				"ObjectType": "workflow.CustomDataProperty"
			},
			"Required": true
		}],
		"InputParameterSet": [{
			"Condition": "eq",
			"ControlParameter": "Vcenter.ConnectionStatus",
			"EnableParameters": ["Datacenter", "Cluster"],
			"Name": "vmware_params",
			"ObjectType": "workflow.ParameterSet",
			"Value": "Connected"
		}],
		"Label": "Provision ESXi Host",
		"Name": "ProvisionESXiHost",
		"ObjectType": "workflow.WorkflowDefinition",
		"OutputDefinition": [{
			"Default": {
				"ObjectType": "workflow.DefaultValue"
			},
			"Description": "Created Server Profile",
			"DisplayMeta": {
				"InventorySelector": true,
				"ObjectType": "workflow.DisplayMeta",
				"WidgetType": "None"
			},
			"Label": "Profile",
			"Name": "Profile",
			"ObjectType": "workflow.MoReferenceDataType",
			"Properties": [{
				"DisplayAttributes": ["Name"],
				"ObjectType": "workflow.MoReferenceProperty",
				"Selector": "/api/v1/server/Profiles",
				"SelectorProperty": {
					"Method": "GET",
					"ObjectType": "workflow.SelectorProperty"
				}
			}],
			"Required": true
		}, {
			"Default": {
				"ObjectType": "workflow.DefaultValue"
			},
			"DisplayMeta": {
				"InventorySelector": true,
				"ObjectType": "workflow.DisplayMeta",
				"WidgetType": "None"
			},
			"Label": "Profile Status",
			"Name": "ProfileStatus",
			"ObjectType": "workflow.PrimitiveDataType",
			"Properties": {
				"Constraints": {
					"EnumList": [],
					"ObjectType": "workflow.Constraints"
				},
				"InventorySelector": [],
				"ObjectType": "workflow.PrimitiveDataProperty",
				"Type": "string"
			}
		}, {
			"Default": {
				"ObjectType": "workflow.DefaultValue"
			},
			"DisplayMeta": {
				"InventorySelector": true,
				"ObjectType": "workflow.DisplayMeta",
				"WidgetType": "None"
			},
			"Label": "ESXi Host",
			"Name": "Host",
			"ObjectType": "workflow.CustomDataType",
			"Properties": {
				"CatalogMoid": "shared",
				"CustomDataTypeName": "HypervisorHostType",
				"ObjectType": "workflow.CustomDataProperty"
			}
		}],
		"OutputParameters": {
			"Host": "${NewHypervisorHost1.output.Host}",
			"Profile": "${NewServerProfileFromTemplate1.output.Profile}",
			"ProfileStatus": "${SetServerToServerProfile1.output.ProfileStatus}"
		},
		"Properties": {
			"EnableDebug": true,
			"ExternalMeta": true,
			"ObjectType": "workflow.WorkflowProperties",
			"Retryable": true,
			"SupportStatus": "Supported"
		},
		"SharedScope": "user",
		"Tags": [{
			"Key": "category",
			"Value": "Virtualization"
		}],
		"Tasks": [{
			"Name": "StartTask",
			"NextTask": "NewServerProfileFromTemplate1",
			"ObjectType": "workflow.StartTask"
		}, {
			"CatalogMoid": "shared",
			"Description": "Sets server to server profile with server and profile as inputs.\nIf the selected server is already part of another profile or if the selected profile has a different server previously assigned to it, then an error is displayed.\nOn successful execution, the profile status will be provided as output.",
			"InputParameters": {
				"Profile": "${NewServerProfileFromTemplate1.output.Profile}",
				"Server": "${workflow.input.Server}"
			},
			"Label": "Set Server to Server Profile",
			"Name": "SetServerToServerProfile1",
			"ObjectType": "workflow.WorkerTask",
			"OnSuccess": "DeployServerProfile1",
			"TaskDefinitionName": "SetServerToServerProfile",
			"Version": 1
		}, {
			"CatalogMoid": "shared",
			"Description": "Deploys the selected server profile on the server\nOn successful execution, the Deploy Server Profile workflow will be triggered.\n",
			"InputParameters": {
				"Profile": "${NewServerProfileFromTemplate1.output.Profile}"
			},
			"Label": "Deploy Server Profile",
			"Name": "DeployServerProfile1",
			"ObjectType": "workflow.WorkerTask",
			"OnSuccess": "InstallServerOS1",
			"TaskDefinitionName": "DeployServerProfile",
			"Version": 1
		}, {
			"CatalogMoid": "shared",
			"Description": "Workflow to install an Operating System",
			"InputParameters": {
				"OSInstallInputs": "${workflow.input.OSInstallInputs}",
				"Server": "${workflow.input.Server}"
			},
			"Label": "Install ESXi",
			"Name": "InstallServerOS1",
			"ObjectType": "workflow.SubWorkflowTask",
			"OnSuccess": "conditional1",
			"Version": 5,
			"WorkflowDefinitionName": "InstallServerOS"
		}, {
			"CatalogMoid": "shared",
			"Description": "Waits for the ESXi Server to Fully Boot",
			"InputParameters": {
				"SleepTimeInSec": 600
			},
			"Label": "Wait 10 Minutes",
			"Name": "InvokeSleepTask1",
			"ObjectType": "workflow.WorkerTask",
			"OnSuccess": "NewHypervisorHost1",
			"TaskDefinitionName": "InvokeSleepTask",
			"Version": 1
		}, {
			"CatalogMoid": "shared",
			"Description": "Add host to the selected hypervisor. Requires datacenter, host IP/name, username, password as inputs. On successful execution, host name is generated as output.",
			"InputParameters": {
				"Cluster": "${workflow.input.Cluster}",
				"ConnectNow": true,
				"Datacenter": "${workflow.input.Datacenter}",
				"Host": "${workflow.input.OSInstallInputs.Answers.Ipv4Configuration.IPAddress}",
				"IsPasswordSet": true,
				"Password": "${workflow.input.OSInstallInputs.Answers.RootPassword}",
				"Username": "root",
				"Vcenter": "${workflow.input.Vcenter}"
			},
			"Label": "New Hypervisor Host",
			"Name": "NewHypervisorHost1",
			"ObjectType": "workflow.WorkerTask",
			"OnSuccess": "SuccessEndTask",
			"TaskDefinitionName": "NewHypervisorHost",
			"Version": 1
		}, {
			"Name": "SuccessEndTask",
			"ObjectType": "workflow.SuccessEndTask"
		}, {
			"Name": "FailureEndTask",
			"ObjectType": "workflow.FailureEndTask"
		}, {
			"CatalogMoid": "shared",
			"Description": "Creates a server profile from the selected template and adds the associated policies to the server profile.\nIf the 'Target Profile Name' is provided, it will be considered as the name of the profile to be created. The task will fail, if the profile name already exists.\nIf the 'Target Profile Name' is not provided, the name of the profile is generated from the 'Target Profile Name Prefix' and 'Target Profile Name Suffix' inputs.\n",
			"InputParameters": {
				"SourceProfileTemplate": "${workflow.input.SourceProfileTemplate}"
			},
			"Label": "New Server Profile from Template",
			"Name": "NewServerProfileFromTemplate1",
			"ObjectType": "workflow.WorkerTask",
			"OnSuccess": "SetServerToServerProfile1",
			"TaskDefinitionName": "NewServerProfileFromTemplate",
			"Version": 1
		}, {
			"Condition": "if ( ${workflow.input.OSInstallInputs.Answers.IpConfigType} == \"DHCP\") 'DHCP'; else 'Static IP'",
			"DecisionCases": [{
				"Description": "ESXi has a static IP",
				"NextTask": "InvokeSleepTask1",
				"ObjectType": "workflow.DecisionCase",
				"Value": "Static IP"
			}, {
				"Description": "ESXi uses DHCP",
				"NextTask": "SuccessEndTask",
				"ObjectType": "workflow.DecisionCase",
				"Value": "DHCP"
			}],
			"DefaultTask": "SuccessEndTask",
			"Description": "Checks whether the new ESXi host has a static IP or uses DHCP. If DHCP, the workflow will end and user will need to add it manually ",
			"Label": "Check Static IP vs DHCP",
			"Name": "conditional1",
			"ObjectType": "workflow.DecisionTask"
		}],
		"UiInputFilters": [],
		"UiRenderingData": {
			"Positions": [{
				"Name": "StartTask",
				"X": 211.62651162564688,
				"Y": 3.587677865555796
			}, {
				"Name": "SuccessEndTask",
				"X": 162.74377202443506,
				"Y": 800.0866899719855
			}, {
				"Name": "FailureEndTask",
				"X": 293.97202751035456,
				"Y": 799.2074030513262
			}, {
				"Name": "InstallServerOS1",
				"X": 126.62651162564696,
				"Y": 377.08767786555563
			}, {
				"Name": "NewHypervisorHost1",
				"X": 481.0654292518594,
				"Y": 685.9872775513287
			}, {
				"Name": "InvokeSleepTask1",
				"X": 481.39257740031155,
				"Y": 612.6214385114048
			}, {
				"Name": "SetServerToServerProfile1",
				"X": 126.62651162564696,
				"Y": 179.08767786555563
			}, {
				"Name": "DeployServerProfile1",
				"X": 126.62651162564696,
				"Y": 278.0876778655555
			}, {
				"Name": "NewServerProfileFromTemplate1",
				"X": 126.62651162564696,
				"Y": 80.0876778655557
			}, {
				"Name": "conditional1",
				"X": 126.706719375094,
				"Y": 456.4293483271614
			}]
		},
		"VariableDefinition": [],
		"Version": 1
	},
	"ClassId": "bulk.RestSubRequest",
	"ObjectType": "bulk.RestSubRequest",
	"TargetMoid": "",
	"Uri": "/v1/workflow/WorkflowDefinitions",
	"Verb": "POST"
}, {
	"Body": {
		"Batch": [{
			"ContentType": "json",
			"EndpointRequestType": "Internal",
			"Method": "GET",
			"Name": "GetServerProfileApi",
			"ObjectType": "workflow.WebApi",
			"Outcomes": [{
				"Condition": "{{ne .global.GetServerProfileApi.output.HttpStatusCode 200}}",
				"Message": "{{.global.GetServerProfileApi.output.HttpStatusMsg}}",
				"ObjectType": "workflow.Outcome",
				"Type": "Error"
			}, {
				"Condition": "{{if not .global.GetServerProfileApi.output.AssignedServerMoid}}true {{else}} false {{end}}",
				"Message": "Server profile is not assigned to any server.",
				"ObjectType": "workflow.Outcome",
				"Type": "Success"
			}, {
				"Condition": "true",
				"Message": "Profile fetched successfully.",
				"ObjectType": "workflow.Outcome"
			}],
			"Protocol": "https",
			"ResponseSpec": {
				"ErrorParameters": [],
				"ObjectType": "content.Grammar",
				"Parameters": [{
					"AcceptSingleValue": false,
					"ComplexType": "",
					"ItemType": "simple",
					"Name": "AssignedServerMoid",
					"ObjectType": "content.Parameter",
					"Path": "$.AssignedServer.Moid",
					"Secure": false,
					"Type": "simple"
				}, {
					"AcceptSingleValue": false,
					"ComplexType": "",
					"ItemType": "simple",
					"Name": "ProfileName",
					"ObjectType": "content.Parameter",
					"Path": "$.Name",
					"Secure": false,
					"Type": "simple"
				}],
				"Types": []
			},
			"TargetType": "Local",
			"Url": "/v1/server/Profiles/{{.global.task.input.Profile.Moid}}"
		}, {
			"Body": "{\"Action\": \"Unassign\"}",
			"ContentType": "json",
			"EndpointRequestType": "Internal",
			"Method": "POST",
			"Name": "UnassignProfileApi",
			"ObjectType": "workflow.WebApi",
			"Outcomes": [{
				"Condition": "{{ne .global.UnassignProfileApi.output.HttpStatusCode 200}}",
				"Message": "{{.global.UnassignProfileApi.output.HttpStatusMsg}}",
				"ObjectType": "workflow.Outcome",
				"Type": "Error"
			}, {
				"Condition": "{{and (ne .global.UnassignProfileApi.output.ConfigState \"Not-assigned\") (ne .global.UnassignProfileApi.output.ConfigState \"UnConfiguring\")}}",
				"Message": "Remove Server from server profile {{.global.GetServerProfileApi.output.ProfileName}} failed.",
				"ObjectType": "workflow.Outcome",
				"Type": "Error"
			}, {
				"Condition": "true",
				"Message": "Server unassigned from server profile {{.global.GetServerProfileApi.output.ProfileName}} successfully.",
				"ObjectType": "workflow.Outcome"
			}],
			"Protocol": "https",
			"ResponseSpec": {
				"ErrorParameters": [],
				"ObjectType": "content.Grammar",
				"Parameters": [{
					"AcceptSingleValue": false,
					"ComplexType": "",
					"ItemType": "simple",
					"Name": "ConfigState",
					"ObjectType": "content.Parameter",
					"Path": "$.ConfigContext.ConfigState",
					"Secure": false,
					"Type": "simple"
				}],
				"Types": []
			},
			"SkipOnCondition": "{{if not .global.GetServerProfileApi.output.AssignedServerMoid}}true {{else}} false {{end}}",
			"TargetType": "Local",
			"Url": "/v1/server/Profiles/{{.global.task.input.Profile.Moid}}"
		}],
		"CancelAction": [],
		"ClassId": "workflow.BatchApiExecutor",
		"Constraints": {
			"ObjectType": "workflow.TaskConstraints"
		},
		"Description": "Remove Server from Server profile.",
		"Name": "RemoveServerFromServerProfileImpl",
		"ObjectType": "workflow.BatchApiExecutor",
		"Output": {
			"ProfileStatus": "{{.global.UnassignProfileApi.output.ConfigState}}"
		},
		"SharedScope": "shared",
		"TaskDefinition": {
			"ObjectType": "workflow.TaskDefinition",
			"Selector": "Name eq \"RemoveServerFromServerProfile\" and Version eq 1"
		}
	},
	"ClassId": "bulk.RestSubRequest",
	"ObjectType": "bulk.RestSubRequest",
	"TargetMoid": "",
	"Uri": "/v1/workflow/BatchApiExecutors",
	"Verb": "POST"
}, {
	"Body": {
		"Batch": [{
			"ContentType": "json",
			"EndpointRequestType": "Internal",
			"Method": "GET",
			"Name": "GetConnectionStatus",
			"ObjectType": "workflow.WebApi",
			"Outcomes": [{
				"Condition": "{{if index .global.task.input \"Server\"}}false{{else}}true{{end}}",
				"Message": "Required input 'Server' is not found.",
				"ObjectType": "workflow.Outcome",
				"Type": "TerminalError"
			}, {
				"Condition": "{{eq .global.GetConnectionStatus.output.HttpStatusCode 404}}",
				"Message": "Server does not exist.",
				"ObjectType": "workflow.Outcome",
				"Type": "TerminalError"
			}, {
				"Condition": "{{ne .global.GetConnectionStatus.output.HttpStatusCode 200}}",
				"Message": "{{.global.GetConnectionStatus.output.HttpStatusMsg}}",
				"ObjectType": "workflow.Outcome",
				"Type": "Error"
			}, {
				"Condition": "{{if eq .global.GetConnectionStatus.output.ConnectionStatus \"Connected\"}}false {{else}} true {{end}}",
				"Message": "Server is no longer connected.",
				"ObjectType": "workflow.Outcome",
				"Type": "TerminalError"
			}],
			"Protocol": "https",
			"ResponseSpec": {
				"ErrorParameters": [],
				"ObjectType": "content.Grammar",
				"Parameters": [{
					"AcceptSingleValue": false,
					"ComplexType": "",
					"ItemType": "simple",
					"Name": "ConnectionStatus",
					"ObjectType": "content.Parameter",
					"Path": "$.Results[0].RegisteredDevice.ConnectionStatus",
					"Secure": false,
					"Type": "simple"
				}],
				"Types": []
			},
			"TargetType": "Local",
			"Url": "/v1/compute/PhysicalSummaries?$expand=RegisteredDevice($select=ConnectionStatus)&$select=RegisteredDevice&$filter=Moid eq '{{if index .global.task.input \"Server\"}}{{.global.task.input.Server.Moid}}{{else}}null{{end}}'"
		}, {
			"ContentType": "json",
			"EndpointRequestType": "Internal",
			"Method": "GET",
			"Name": "GetServerProfileApi",
			"ObjectType": "workflow.WebApi",
			"Outcomes": [{
				"Condition": "{{ne .global.GetServerProfileApi.output.HttpStatusCode 200}}",
				"Message": "{{.global.GetServerProfileApi.output.HttpStatusMsg}}",
				"ObjectType": "workflow.Outcome",
				"Type": "Error"
			}, {
				"Condition": "{{if and (.global.GetServerProfileApi.output.AssignedServerMoid) (ne .global.task.input.Server.Moid  .global.GetServerProfileApi.output.AssignedServerMoid)}} true {{else}} false {{end}}",
				"Message": "Another Server is already assigned to the Profile {{.global.GetServerProfileApi.output.ProfileName}}. Please unassign it to assign given Server.",
				"ObjectType": "workflow.Outcome",
				"Type": "Error"
			}, {
				"Condition": "{{if eq .global.task.input.Server.Moid  .global.GetServerProfileApi.output.AssignedServerMoid}} true {{else}} false {{end}}",
				"Message": "Given Server is already assigned to the Profile {{.global.GetServerProfileApi.output.ProfileName}}.",
				"ObjectType": "workflow.Outcome"
			}, {
				"Condition": "true",
				"Message": "Profile {{.global.GetServerProfileApi.output.ProfileName}} fetched successfully.",
				"ObjectType": "workflow.Outcome"
			}],
			"Protocol": "https",
			"ResponseSpec": {
				"ErrorParameters": [],
				"ObjectType": "content.Grammar",
				"Parameters": [{
					"AcceptSingleValue": false,
					"ComplexType": "",
					"ItemType": "simple",
					"Name": "AssignedServerMoid",
					"ObjectType": "content.Parameter",
					"Path": "$.AssignedServer.Moid",
					"Secure": false,
					"Type": "simple"
				}, {
					"AcceptSingleValue": false,
					"ComplexType": "",
					"ItemType": "simple",
					"Name": "ProfileName",
					"ObjectType": "content.Parameter",
					"Path": "$.Name",
					"Secure": false,
					"Type": "simple"
				}],
				"Types": []
			},
			"TargetType": "Local",
			"Url": "/v1/server/Profiles/{{.global.task.input.Profile.Moid}}"
		}, {
			"ContentType": "json",
			"EndpointRequestType": "Internal",
			"Method": "GET",
			"Name": "QueryRackUnitServerMo",
			"ObjectType": "workflow.WebApi",
			"Outcomes": [{
				"Condition": "{{(ne .global.QueryRackUnitServerMo.output.HttpStatusCode 200)}}",
				"Message": "{{.global.QueryRackUnitServerMo.output.HttpStatusMsg}}",
				"ObjectType": "workflow.Outcome",
				"Type": "Error"
			}],
			"Protocol": "https",
			"ResponseSpec": {
				"ErrorParameters": [],
				"ObjectType": "content.Grammar",
				"Parameters": [{
					"AcceptSingleValue": false,
					"ComplexType": "",
					"ItemType": "simple",
					"Name": "Results",
					"ObjectType": "content.Parameter",
					"Path": "$.Results",
					"Secure": false,
					"Type": "collection"
				}, {
					"AcceptSingleValue": false,
					"ComplexType": "",
					"ItemType": "simple",
					"Name": "RuObjecttype",
					"ObjectType": "content.Parameter",
					"Path": "$.Results[0].ObjectType",
					"Secure": false,
					"Type": "simple"
				}],
				"Types": []
			},
			"SkipOnCondition": "{{if eq .global.task.input.Server.Moid  .global.GetServerProfileApi.output.AssignedServerMoid}} true {{else}} false {{end}}",
			"TargetType": "Local",
			"Url": "/v1/compute/RackUnits?$filter=Moid eq '{{.global.task.input.Server.Moid}}'"
		}, {
			"ContentType": "json",
			"EndpointRequestType": "Internal",
			"Method": "GET",
			"Name": "QueryBladeServerMo",
			"ObjectType": "workflow.WebApi",
			"Outcomes": [{
				"Condition": "{{(ne .global.QueryBladeServerMo.output.HttpStatusCode 200)}}",
				"Message": "{{.global.QueryBladeServerMo.output.HttpStatusMsg}}",
				"ObjectType": "workflow.Outcome",
				"Type": "Error"
			}, {
				"Condition": "{{$rackunit := (lt (len .global.QueryRackUnitServerMo.output.Results)  1)}}{{$blade := (lt (len .global.QueryBladeServerMo.output.Results)  1)}}{{(and $rackunit $blade)}}",
				"Message": "Invalid server: RackUnit or Blade with Moid '{{.global.task.input.Server.Moid}}' does not exist",
				"ObjectType": "workflow.Outcome",
				"Type": "Error"
			}, {
				"Condition": "true",
				"Message": "Server Moid {{.global.task.input.Server.Moid}} found successfully",
				"ObjectType": "workflow.Outcome"
			}],
			"Protocol": "https",
			"ResponseSpec": {
				"ErrorParameters": [],
				"ObjectType": "content.Grammar",
				"Parameters": [{
					"AcceptSingleValue": false,
					"ComplexType": "",
					"ItemType": "simple",
					"Name": "Results",
					"ObjectType": "content.Parameter",
					"Path": "$.Results",
					"Secure": false,
					"Type": "collection"
				}, {
					"AcceptSingleValue": false,
					"ComplexType": "",
					"ItemType": "simple",
					"Name": "BladeObjecttype",
					"ObjectType": "content.Parameter",
					"Path": "$.Results[0].ObjectType",
					"Secure": false,
					"Type": "simple"
				}],
				"Types": []
			},
			"SkipOnCondition": "{{if eq .global.task.input.Server.Moid  .global.GetServerProfileApi.output.AssignedServerMoid}} true {{else}} false {{end}}",
			"TargetType": "Local",
			"Url": "/v1/compute/Blades?$filter=Moid eq '{{.global.task.input.Server.Moid}}'"
		}, {
			"Body": "{\"AssignedServer\": { {{if .global.QueryRackUnitServerMo.output.RuObjecttype}}\"ObjectType\":\"compute.RackUnit\" {{else if .global.QueryBladeServerMo.output.BladeObjecttype}} \"ObjectType\":\"compute.Blade\" {{end}},\"Moid\":\"{{.global.task.input.Server.Moid}}\"}}",
			"ContentType": "json",
			"EndpointRequestType": "Internal",
			"Method": "POST",
			"Name": "AssignServerToProfileApi",
			"ObjectType": "workflow.WebApi",
			"Outcomes": [{
				"Condition": "{{ne .global.AssignServerToProfileApi.output.HttpStatusCode 200}}",
				"Message": "Set Server to Profile {{.global.GetServerProfileApi.output.ProfileName}} failed with message: {{.global.AssignServerToProfileApi.output.HttpStatusMsg}}",
				"ObjectType": "workflow.Outcome",
				"Type": "Error"
			}, {
				"Condition": "{{ne .global.AssignServerToProfileApi.output.ConfigState \"Assigned\"}}",
				"Message": "Set server to Server Profile {{.global.GetServerProfileApi.output.ProfileName}} failed.",
				"ObjectType": "workflow.Outcome",
				"Type": "Error"
			}, {
				"Condition": "true",
				"Message": "Server assigned to profile {{.global.GetServerProfileApi.output.ProfileName}} successfully.",
				"ObjectType": "workflow.Outcome"
			}],
			"Protocol": "https",
			"ResponseSpec": {
				"ErrorParameters": [],
				"ObjectType": "content.Grammar",
				"Parameters": [{
					"AcceptSingleValue": false,
					"ComplexType": "",
					"ItemType": "simple",
					"Name": "ConfigState",
					"ObjectType": "content.Parameter",
					"Path": "$.ConfigContext.ConfigState",
					"Secure": false,
					"Type": "simple"
				}],
				"Types": []
			},
			"SkipOnCondition": "{{if eq .global.task.input.Server.Moid  .global.GetServerProfileApi.output.AssignedServerMoid}} true {{else}} false {{end}}",
			"TargetType": "Local",
			"Url": "/v1/server/Profiles/{{.global.task.input.Profile.Moid}}"
		}, {
			"ContentType": "json",
			"EndpointRequestType": "Internal",
			"Method": "GET",
			"Name": "GetServerProfile2Api",
			"ObjectType": "workflow.WebApi",
			"Outcomes": [{
				"Condition": "{{ne .global.GetServerProfile2Api.output.HttpStatusCode 200}}",
				"Message": "{{.global.GetServerProfile2Api.output.HttpStatusMsg}}",
				"ObjectType": "workflow.Outcome",
				"Type": "Error"
			}],
			"Protocol": "https",
			"ResponseSpec": {
				"ErrorParameters": [],
				"ObjectType": "content.Grammar",
				"Parameters": [{
					"AcceptSingleValue": false,
					"ComplexType": "",
					"ItemType": "simple",
					"Name": "ConfigState",
					"ObjectType": "content.Parameter",
					"Path": "$.ConfigContext.ConfigState",
					"Secure": false,
					"Type": "simple"
				}],
				"Types": []
			},
			"TargetType": "Local",
			"Url": "/v1/server/Profiles/{{.global.task.input.Profile.Moid}}"
		}],
		"CancelAction": [],
		"ClassId": "workflow.BatchApiExecutor",
		"Constraints": {
			"ObjectType": "workflow.TaskConstraints"
		},
		"Description": "Assign Server to Server profile.",
		"Name": "SetServerToServerProfileImpl",
		"ObjectType": "workflow.BatchApiExecutor",
		"Output": {
			"ProfileStatus": "{{.global.GetServerProfile2Api.output.ConfigState}}"
		},
		"SharedScope": "shared",
		"TaskDefinition": {
			"ObjectType": "workflow.TaskDefinition",
			"Selector": "Name eq \"SetServerToServerProfile\" and Version eq 1"
		}
	},
	"ClassId": "bulk.RestSubRequest",
	"ObjectType": "bulk.RestSubRequest",
	"TargetMoid": "",
	"Uri": "/v1/workflow/BatchApiExecutors",
	"Verb": "POST"
}, {
	"Body": {
		"Batch": [{
			"ContentType": "json",
			"EndpointRequestType": "Internal",
			"Method": "GET",
			"Name": "GetPolicyCountInProfileApi",
			"ObjectType": "workflow.WebApi",
			"Outcomes": [{
				"Condition": "{{ne .global.GetPolicyCountInProfileApi.output.HttpStatusCode 200}}",
				"Message": "{{.global.GetPolicyCountInProfileApi.output.HttpStatusMsg}}",
				"ObjectType": "workflow.Outcome",
				"Type": "Error"
			}, {
				"Condition": "{{eq .global.GetPolicyCountInProfileApi.output.PolicyCount 0.0}}",
				"Message": "No Policies attached in Profile.",
				"ObjectType": "workflow.Outcome",
				"Type": "Error"
			}, {
				"Condition": "true",
				"Message": "Policy count in profile fetched successfully.",
				"ObjectType": "workflow.Outcome"
			}],
			"Protocol": "https",
			"ResponseSpec": {
				"ErrorParameters": [],
				"ObjectType": "content.Grammar",
				"Parameters": [{
					"AcceptSingleValue": false,
					"ComplexType": "",
					"ItemType": "simple",
					"Name": "PolicyCount",
					"ObjectType": "content.Parameter",
					"Path": "$.Count",
					"Secure": false,
					"Type": "simple"
				}],
				"Types": []
			},
			"TargetType": "Local",
			"Url": "/v1/search/SearchItems?$filter=((IndexMotypes eq policy.AbstractPolicy) and (Profiles.Moid eq '{{.global.task.input.Profile.Moid}}'))&$count=true"
		}, {
			"ContentType": "json",
			"EndpointRequestType": "Internal",
			"Method": "GET",
			"Name": "GetProfileApi",
			"ObjectType": "workflow.WebApi",
			"Outcomes": [{
				"Condition": "{{ne .global.GetProfileApi.output.HttpStatusCode 200}}",
				"Message": "{{.global.GetProfileApi.output.HttpStatusMsg}}",
				"ObjectType": "workflow.Outcome",
				"Type": "Error"
			}, {
				"Condition": "{{if not .global.GetProfileApi.output.AssignedServerMoid}}true{{else}}false{{end}}",
				"Message": "Server profile is not assigned to any server.",
				"ObjectType": "workflow.Outcome",
				"Type": "TerminalError"
			}, {
				"Condition": "true",
				"Message": "Profile fetched successfully.",
				"ObjectType": "workflow.Outcome"
			}],
			"Protocol": "https",
			"ResponseSpec": {
				"ErrorParameters": [],
				"ObjectType": "content.Grammar",
				"Parameters": [{
					"AcceptSingleValue": false,
					"ComplexType": "",
					"ItemType": "simple",
					"Name": "RunningWorkflows",
					"ObjectType": "content.Parameter",
					"Path": "$.RunningWorkflows",
					"Secure": false,
					"Type": "collection"
				}, {
					"AcceptSingleValue": false,
					"ComplexType": "",
					"ItemType": "simple",
					"Name": "AssignedServerMoid",
					"ObjectType": "content.Parameter",
					"Path": "$.AssignedServer.Moid",
					"Secure": false,
					"Type": "simple"
				}],
				"Types": []
			},
			"TargetType": "Local",
			"Url": "/v1/server/Profiles/{{.global.task.input.Profile.Moid}}"
		}, {
			"ContentType": "json",
			"EndpointRequestType": "Internal",
			"Method": "GET",
			"Name": "GetConnectionStatus",
			"ObjectType": "workflow.WebApi",
			"Outcomes": [{
				"Condition": "{{eq .global.GetConnectionStatus.output.HttpStatusCode 404}}",
				"Message": "Server does not exist.",
				"ObjectType": "workflow.Outcome",
				"Type": "TerminalError"
			}, {
				"Condition": "{{ne .global.GetConnectionStatus.output.HttpStatusCode 200}}",
				"Message": "{{.global.GetConnectionStatus.output.HttpStatusMsg}}",
				"ObjectType": "workflow.Outcome",
				"Type": "Error"
			}, {
				"Condition": "{{if eq .global.GetConnectionStatus.output.ConnectionStatus \"Connected\"}}false {{else}} true {{end}}",
				"Message": "Server is no longer connected.",
				"ObjectType": "workflow.Outcome",
				"Type": "TerminalError"
			}],
			"Protocol": "https",
			"ResponseSpec": {
				"ErrorParameters": [],
				"ObjectType": "content.Grammar",
				"Parameters": [{
					"AcceptSingleValue": false,
					"ComplexType": "",
					"ItemType": "simple",
					"Name": "ConnectionStatus",
					"ObjectType": "content.Parameter",
					"Path": "$.Results[0].RegisteredDevice.ConnectionStatus",
					"Secure": false,
					"Type": "simple"
				}],
				"Types": []
			},
			"TargetType": "Local",
			"Url": "/v1/compute/PhysicalSummaries?$expand=RegisteredDevice($select=ConnectionStatus)&$select=RegisteredDevice&$filter=Moid eq '{{.global.GetProfileApi.output.AssignedServerMoid}}'"
		}, {
			"Body": "{\"Action\": \"Deploy\"}",
			"ContentType": "json",
			"EndpointRequestType": "Internal",
			"Method": "POST",
			"Name": "DeployServerProfileApi",
			"ObjectType": "workflow.WebApi",
			"Outcomes": [{
				"Condition": "{{ne .global.DeployServerProfileApi.output.HttpStatusCode 200}}",
				"Message": "Deploy Server Profile failed with message: {{.global.DeployServerProfileApi.output.HttpStatusMsg}}",
				"ObjectType": "workflow.Outcome",
				"Type": "Error"
			}, {
				"Condition": "true",
				"Message": "Deploy Server profile workflow triggered successfully.",
				"ObjectType": "workflow.Outcome"
			}],
			"Protocol": "https",
			"ResponseSpec": {
				"ErrorParameters": [],
				"ObjectType": "content.Grammar",
				"Parameters": [{
					"AcceptSingleValue": false,
					"ComplexType": "",
					"ItemType": "simple",
					"Name": "DeployRunningWfs",
					"ObjectType": "content.Parameter",
					"Path": "$.RunningWorkflows",
					"Secure": false,
					"Type": "collection"
				}],
				"Types": []
			},
			"TargetType": "Local",
			"Url": "/v1/server/Profiles/{{.global.task.input.Profile.Moid}}"
		}, {
			"ContentType": "json",
			"EndpointRequestType": "Internal",
			"Method": "GET",
			"Name": "GetProfile2Api",
			"ObjectType": "workflow.WebApi",
			"Outcomes": [{
				"Condition": "{{ne .global.GetProfile2Api.output.HttpStatusCode 200}}",
				"Message": "{{.global.GetProfile2Api.output.HttpStatusMsg}}",
				"ObjectType": "workflow.Outcome",
				"Type": "Error"
			}, {
				"Condition": "{{eq .global.GetProfile2Api.output.ConfigState \"Failed\"}}",
				"Message": "Server profile deployment failed.",
				"ObjectType": "workflow.Outcome",
				"Type": "TerminalError"
			}, {
				"Condition": "{{eq .global.GetProfile2Api.output.ConfigState \"Associated\"}}",
				"Message": "Server profile deployed successfully.",
				"ObjectType": "workflow.Outcome",
				"Type": "Success"
			}, {
				"Condition": "{{ (eq (len .global.GetProfile2Api.output.RunningWorkflows)  (len .global.GetProfileApi.output.RunningWorkflows)) }}",
				"Message": "Server profile deployment in progress.",
				"ObjectType": "workflow.Outcome",
				"Type": "Status"
			}, {
				"Condition": "true",
				"Message": "Server profile deploy initiated successfully.",
				"ObjectType": "workflow.Outcome"
			}],
			"Protocol": "https",
			"ResponseSpec": {
				"ErrorParameters": [],
				"ObjectType": "content.Grammar",
				"Parameters": [{
					"AcceptSingleValue": false,
					"ComplexType": "",
					"ItemType": "simple",
					"Name": "RunningWorkflows",
					"ObjectType": "content.Parameter",
					"Path": "$.RunningWorkflows",
					"Secure": false,
					"Type": "collection"
				}, {
					"AcceptSingleValue": false,
					"ComplexType": "",
					"ItemType": "simple",
					"Name": "ConfigState",
					"ObjectType": "content.Parameter",
					"Path": "$.ConfigContext.ConfigState",
					"Secure": false,
					"Type": "simple"
				}],
				"Types": []
			},
			"StartDelay": 30,
			"TargetType": "Local",
			"Url": "/v1/server/Profiles/{{.global.task.input.Profile.Moid}}"
		}],
		"CancelAction": [],
		"ClassId": "workflow.BatchApiExecutor",
		"Constraints": {
			"ObjectType": "workflow.TaskConstraints"
		},
		"Description": "Deploy Server profile.",
		"Name": "DeployServerProfileImpl",
		"ObjectType": "workflow.BatchApiExecutor",
		"Output": {
			"Workflow": "{{index .global.GetProfile2Api.output.RunningWorkflows (len .global.GetProfileApi.output.RunningWorkflows)  | ToJson}}"
		},
		"RetryFromFailedApi": true,
		"SharedScope": "shared",
		"TaskDefinition": {
			"ObjectType": "workflow.TaskDefinition",
			"Selector": "Name eq \"DeployServerProfile\" and Version eq 1"
		}
	},
	"ClassId": "bulk.RestSubRequest",
	"ObjectType": "bulk.RestSubRequest",
	"TargetMoid": "",
	"Uri": "/v1/workflow/BatchApiExecutors",
	"Verb": "POST"
}, {
	"Body": {
		"ClassId": "workflow.TaskDefinition",
		"DefaultVersion": true,
		"Description": "This is a task to validate OS install server parameters",
		"InterfaceTask": {
			"ObjectType": "workflow.TaskDefinition",
			"Selector": "Name eq \"ConfirmOSInstallTaskParameters\" and Version eq 1"
		},
		"Label": "Confirm OS Install Server Parameters",
		"Name": "ConfirmOSInstallServerParameters",
		"ObjectType": "workflow.TaskDefinition",
		"Properties": {
			"InputDefinition": [{
				"CustomDataTypeProperties": {
					"CatalogMoid": "shared",
					"ObjectType": "workflow.CustomDataProperty"
				},
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Target Device",
				"Name": "TargetDevice",
				"ObjectType": "workflow.TargetDataType",
				"Properties": [{
					"DisplayAttributes": ["DeviceHostname", "DeviceIpAddress", "Pid", "Serial"],
					"ObjectType": "workflow.TargetProperty",
					"Selector": "/api/v1/asset/DeviceRegistrations?$filter=(PlatformType eq IMCM4 or PlatformType eq IMCM5 or PlatformType eq IMCRack)",
					"SelectorProperty": {
						"Method": "GET",
						"ObjectType": "workflow.SelectorProperty"
					}
				}],
				"Required": true
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Answer Source",
				"Name": "AnswerSource",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				},
				"Required": true
			}],
			"ObjectType": "workflow.Properties",
			"OutputDefinition": [],
			"RetryCount": 10,
			"RetryDelay": 10,
			"RetryPolicy": "Fixed",
			"SupportStatus": "Supported",
			"Timeout": 600,
			"TimeoutPolicy": "Retry"
		},
		"RollbackTasks": [],
		"SharedScope": "shared",
		"Version": 1
	},
	"ClassId": "bulk.RestSubRequest",
	"ObjectType": "bulk.RestSubRequest",
	"TargetMoid": "",
	"Uri": "/v1/workflow/TaskDefinitions",
	"Verb": "POST"
}, {
	"Body": {
		"ClassId": "workflow.TaskDefinition",
		"DefaultVersion": true,
		"Description": "This is a task to trigger OSI Start API in a standalone Rack Server",
		"InterfaceTask": {
			"ObjectType": "workflow.TaskDefinition",
			"Selector": "Name eq \"StartOSInstallAgent\" and Version eq 1"
		},
		"Label": "OSI Start API for standalone Rack Server",
		"Name": "StartRackServerOSInstallAgent",
		"ObjectType": "workflow.TaskDefinition",
		"Properties": {
			"InputDefinition": [{
				"CustomDataTypeProperties": {
					"CatalogMoid": "shared",
					"ObjectType": "workflow.CustomDataProperty"
				},
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Target Device",
				"Name": "TargetDevice",
				"ObjectType": "workflow.TargetDataType",
				"Properties": [{
					"DisplayAttributes": ["DeviceHostname", "DeviceIpAddress", "Pid", "Serial"],
					"ObjectType": "workflow.TargetProperty",
					"Selector": "/api/v1/asset/DeviceRegistrations?$filter=(PlatformType eq IMCM4 or PlatformType eq IMCM5 or PlatformType eq IMCRack)",
					"SelectorProperty": {
						"Method": "GET",
						"ObjectType": "workflow.SelectorProperty"
					}
				}],
				"Required": true
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Answer Source",
				"Name": "AnswerSource",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				},
				"Required": true
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "ISO Share",
				"Name": "IsoShare",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				},
				"Required": true
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "ISO Share IP",
				"Name": "IsoShareIp",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				},
				"Required": true
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "ISO Share Type",
				"Name": "IsoShareType",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				},
				"Required": true
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "ISO Share User",
				"Name": "IsoShareUser",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				}
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "ISO Share Password",
				"Name": "IsoSharePassword",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Secure": true,
					"Type": "string"
				}
			}],
			"ObjectType": "workflow.Properties",
			"OutputDefinition": [],
			"RetryCount": 3,
			"RetryDelay": 10,
			"RetryPolicy": "Fixed",
			"SupportStatus": "Supported",
			"Timeout": 600,
			"TimeoutPolicy": "Retry"
		},
		"RollbackTasks": [],
		"SecurePropAccess": true,
		"SharedScope": "shared",
		"Version": 1
	},
	"ClassId": "bulk.RestSubRequest",
	"ObjectType": "bulk.RestSubRequest",
	"TargetMoid": "",
	"Uri": "/v1/workflow/TaskDefinitions",
	"Verb": "POST"
}, {
	"Body": {
		"Batch": [{
			"Body": "<configConfMo inHierarchical=\"true\" dn=\"sys/svc-ext/vmedia-svc/vmmap-HUU\"><inConfig> <commVMediaMap dn=\"sys/svc-ext/vmedia-svc/vmmap-HUU\" volumeName=\"HUU\" status=\"deleted\"/></inConfig></configConfMo>",
			"ContentType": "xml",
			"Name": "UnmapScuMappedISO1",
			"ObjectType": "workflow.XmlApi",
			"Outcomes": [{
				"Condition": "{{if .global.UnmapScuMappedISO1.output.ErrorDescription}}{{if ContainsString (.global.UnmapScuMappedISO1.output.ErrorDescription | TrimSpace) \"No such volume.\"}}false{{else}}true{{end}}{{else}}false{{end}}",
				"Error": true,
				"Message": "Failed to remove Intermittent Virtual media configuration. {{.global.UnmapScuMappedISO1.output.ErrorDescription}}",
				"ObjectType": "workflow.Outcome"
			}],
			"ResponseSpec": {
				"ErrorParameters": [{
					"AcceptSingleValue": false,
					"ComplexType": "",
					"ItemType": "simple",
					"Name": "ErrorDescription",
					"ObjectType": "content.Parameter",
					"Path": "//configConfMo/@errorDescr",
					"Secure": false,
					"Type": "simple"
				}],
				"ObjectType": "content.Grammar",
				"Parameters": [],
				"Types": []
			}
		}, {
			"Body": "<configConfMo inHierarchical=\"true\" dn=\"sys/svc-ext/vmedia-svc/vmmap-SCU\"><inConfig> <commVMediaMap dn=\"sys/svc-ext/vmedia-svc/vmmap-SCU\" volumeName=\"SCU\" status=\"deleted\"/></inConfig></configConfMo>",
			"ContentType": "xml",
			"Name": "UnmapScuMappedISO2",
			"ObjectType": "workflow.XmlApi",
			"Outcomes": [{
				"Condition": "{{if .global.UnmapScuMappedISO2.output.ErrorDescription}}{{if ContainsString (.global.UnmapScuMappedISO2.output.ErrorDescription | TrimSpace) \"No such volume.\"}}false{{else}}true{{end}}{{else}}false{{end}}",
				"Error": true,
				"Message": "Failed to remove Intermittent Virtual media configuration. {{.global.UnmapScuMappedISO2.output.ErrorDescription}}",
				"ObjectType": "workflow.Outcome"
			}, {
				"Condition": "{{$NoSuchVolume1 := false}}{{if .global.UnmapScuMappedISO1.output.ErrorDescription}}{{if (ContainsString (.global.UnmapScuMappedISO1.output.ErrorDescription | TrimSpace) \"No such volume.\")}}{{$NoSuchVolume1 = true}}{{end}}{{end}}{{$NoSuchVolume2 := false}}{{if .global.UnmapScuMappedISO2.output.ErrorDescription}}{{if (ContainsString (.global.UnmapScuMappedISO2.output.ErrorDescription | TrimSpace) \"No such volume.\")}}{{$NoSuchVolume2 = true}}{{end}}{{end}}{{and $NoSuchVolume1 $NoSuchVolume2}}",
				"Message": "No Intermittent Virtual media configuration found. Skipping Virtual media unmapping.",
				"ObjectType": "workflow.Outcome"
			}, {
				"Condition": "true",
				"Message": "Virtual media volume unmapped.",
				"ObjectType": "workflow.Outcome"
			}],
			"ResponseSpec": {
				"ErrorParameters": [{
					"AcceptSingleValue": false,
					"ComplexType": "",
					"ItemType": "simple",
					"Name": "ErrorDescription",
					"ObjectType": "content.Parameter",
					"Path": "//configConfMo/@errorDescr",
					"Secure": false,
					"Type": "simple"
				}],
				"ObjectType": "content.Grammar",
				"Parameters": [],
				"Types": []
			}
		}, {
			"Body": "<configConfMo inHierarchical=\"true\" dn=\"sys/svc-ext/vmedia-svc/vmmap-{{.global.task.input.VolumeNameISO}}\"> <inConfig> <commVMediaMap volumeName=\"{{.global.task.input.VolumeNameISO}}\" {{.global.task.input.VmediaMappingISO}} {{if .global.task.input.ISOPassword}}password=\"{{.global.task.input.ISOPassword}}\"{{end}} /> </inConfig> </configConfMo>",
			"ContentType": "xml",
			"Name": "RemapISOMapping",
			"ObjectType": "workflow.XmlApi",
			"Outcomes": [{
				"Condition": "{{if .global.RemapISOMapping.output.ErrorDescription }}{{if eq (ContainsString (.global.RemapISOMapping.output.ErrorDescription | TrimSpace) \"A mapping already exists by that volume name\") true}}false{{else}}true{{end}}{{else}}false{{end}}",
				"Error": true,
				"Message": "Virtual media mapping for ISO file failed. {{.global.RemapISOMapping.output.ErrorDescription}}",
				"ObjectType": "workflow.Outcome"
			}, {
				"Condition": "true",
				"Message": "Virtual media mapping created for ISO file.",
				"ObjectType": "workflow.Outcome"
			}],
			"ResponseSpec": {
				"ErrorParameters": [{
					"AcceptSingleValue": false,
					"ComplexType": "",
					"ItemType": "simple",
					"Name": "ErrorCode",
					"ObjectType": "content.Parameter",
					"Path": "//configConfMo/@errorCode",
					"Secure": false,
					"Type": "simple"
				}, {
					"AcceptSingleValue": false,
					"ComplexType": "",
					"ItemType": "simple",
					"Name": "ErrorDescription",
					"ObjectType": "content.Parameter",
					"Path": "//configConfMo/@errorDescr",
					"Secure": false,
					"Type": "simple"
				}],
				"ObjectType": "content.Grammar",
				"Parameters": [{
					"AcceptSingleValue": false,
					"ComplexType": "",
					"ItemType": "simple",
					"Name": "MappingStatus",
					"ObjectType": "content.Parameter",
					"Path": "//commVMediaMap/@mappingStatus",
					"Secure": false,
					"Type": "simple"
				}],
				"Types": []
			},
			"SkipOnCondition": "{{(eq .global.task.input.ResetVmediaConfigISO false)}}"
		}, {
			"Body": "<configConfMo inHierarchical=\"true\" dn=\"sys/svc-ext/vmedia-svc/vmmap-{{.global.task.input.VolumeNameIMG}}\"> <inConfig> <commVMediaMap volumeName=\"{{.global.task.input.VolumeNameIMG}}\" {{.global.task.input.VmediaMappingIMG}} {{if .global.task.input.IMGPassword}}password=\"{{.global.task.input.IMGPassword}}\"{{end}} /> </inConfig> </configConfMo>",
			"ContentType": "xml",
			"Name": "RemapIMGMapping",
			"ObjectType": "workflow.XmlApi",
			"Outcomes": [{
				"Condition": "{{if .global.RemapIMGMapping.output.ErrorDescription }}{{if eq (ContainsString (.global.RemapIMGMapping.output.ErrorDescription | TrimSpace) \"A mapping already exists by that volume name\") true}}false{{else}}true{{end}}{{else}}false{{end}}",
				"Error": true,
				"Message": "Virtual media mapping for IMG file failed. {{.global.RemapIMGMapping.output.ErrorDescription}}",
				"ObjectType": "workflow.Outcome"
			}, {
				"Condition": "true",
				"Message": "Virtual media mapping created for IMG file.",
				"ObjectType": "workflow.Outcome"
			}],
			"ResponseSpec": {
				"ErrorParameters": [{
					"AcceptSingleValue": false,
					"ComplexType": "",
					"ItemType": "simple",
					"Name": "ErrorCode",
					"ObjectType": "content.Parameter",
					"Path": "//configConfMo/@errorCode",
					"Secure": false,
					"Type": "simple"
				}, {
					"AcceptSingleValue": false,
					"ComplexType": "",
					"ItemType": "simple",
					"Name": "ErrorDescription",
					"ObjectType": "content.Parameter",
					"Path": "//configConfMo/@errorDescr",
					"Secure": false,
					"Type": "simple"
				}],
				"ObjectType": "content.Grammar",
				"Parameters": [{
					"AcceptSingleValue": false,
					"ComplexType": "",
					"ItemType": "simple",
					"Name": "MappingStatus",
					"ObjectType": "content.Parameter",
					"Path": "//commVMediaMap/@mappingStatus",
					"Secure": false,
					"Type": "simple"
				}],
				"Types": []
			},
			"SkipOnCondition": "{{(eq .global.task.input.ResetVmediaConfigIMG false)}}"
		}],
		"CancelAction": [],
		"ClassId": "workflow.BatchApiExecutor",
		"Constraints": {
			"ObjectType": "workflow.TaskConstraints"
		},
		"Description": "Rack Server Virtual Media Mapping reset to Policy configuration.",
		"Name": "ResetRackServerVirtualMedia",
		"ObjectType": "workflow.BatchApiExecutor",
		"SharedScope": "shared",
		"SkipOnCondition": "{{(eq .global.task.input.ResetVmediaConfig false)}}",
		"TaskDefinition": {
			"ObjectType": "workflow.TaskDefinition",
			"Selector": "Name eq \"ResetVMediaMapping\" and Version eq 1"
		}
	},
	"ClassId": "bulk.RestSubRequest",
	"ObjectType": "bulk.RestSubRequest",
	"TargetMoid": "",
	"Uri": "/v1/workflow/BatchApiExecutors",
	"Verb": "POST"
}, {
	"Body": {
		"Batch": [{
			"Body": "<configConfMo dn=\"sys/rack-unit-1/boot-precision\" inHierarchical=\"true\"> <inConfig> <lsbootDevPrecision dn=\"sys/rack-unit-1/boot-precision\" rebootOnUpdate=\"No\" reapply=\"Yes\" status=\"modified\"><lsbootVMedia name=\"NIIODCIMCDVD\" status=\"deleted\"/></lsbootDevPrecision> </inConfig> </configConfMo>",
			"ContentType": "xml",
			"Name": "CleanupRackServerBootOrderVMedia",
			"ObjectType": "workflow.XmlApi",
			"Outcomes": [{
				"Condition": "{{if .global.CleanupRackServerBootOrderVMedia.output.ErrorDescription }}{{if eq (ContainsString (.global.CleanupRackServerBootOrderVMedia.output.ErrorDescription | TrimSpace) \"Cannot delete a unconfigured boot device\") true}}false{{else}}true{{end}}{{else}}false{{end}}",
				"Message": "Failed to cleanup boot entries. {{.global.CleanupRackServerBootOrderVMedia.output.ErrorDescription}}.",
				"ObjectType": "workflow.Outcome",
				"Type": "Error"
			}, {
				"Condition": "true",
				"Message": "Boot entries cleaned up.",
				"ObjectType": "workflow.Outcome"
			}],
			"ResponseSpec": {
				"ErrorParameters": [{
					"AcceptSingleValue": false,
					"ComplexType": "",
					"ItemType": "simple",
					"Name": "ErrorCode",
					"ObjectType": "content.Parameter",
					"Path": "//configConfMo/@errorCode",
					"Secure": false,
					"Type": "simple"
				}, {
					"AcceptSingleValue": false,
					"ComplexType": "",
					"ItemType": "simple",
					"Name": "ErrorDescription",
					"ObjectType": "content.Parameter",
					"Path": "//configConfMo/@errorDescr",
					"Secure": false,
					"Type": "simple"
				}],
				"ObjectType": "content.Grammar",
				"Parameters": [],
				"Types": []
			}
		}, {
			"Body": "<configConfMo dn=\"sys/rack-unit-1/boot-precision\" inHierarchical=\"true\"> <inConfig> <lsbootDevPrecision dn=\"sys/rack-unit-1/boot-precision\" rebootOnUpdate=\"{{if .global.task.input.RebootServer}}Yes{{else}}No{{end}}\" reapply=\"Yes\" status=\"modified\"><lsbootHdd name=\"scu-os-install\" status=\"deleted\"/></lsbootDevPrecision> </inConfig> </configConfMo>",
			"ContentType": "xml",
			"Name": "CleanupRackServerBootOrderHdd",
			"ObjectType": "workflow.XmlApi",
			"Outcomes": [{
				"Condition": "{{if .global.CleanupRackServerBootOrderHdd.output.ErrorDescription }}{{if eq (ContainsString (.global.CleanupRackServerBootOrderHdd.output.ErrorDescription | TrimSpace) \"Cannot delete a unconfigured boot device\") true}}false{{else}}true{{end}}{{else}}false{{end}}",
				"Message": "Failed to cleanup boot entries. {{.global.CleanupRackServerBootOrderHdd.output.ErrorDescription}}.",
				"ObjectType": "workflow.Outcome",
				"Type": "Error"
			}, {
				"Condition": "true",
				"Message": "Boot entries cleaned up.",
				"ObjectType": "workflow.Outcome"
			}],
			"ResponseSpec": {
				"ErrorParameters": [{
					"AcceptSingleValue": false,
					"ComplexType": "",
					"ItemType": "simple",
					"Name": "ErrorCode",
					"ObjectType": "content.Parameter",
					"Path": "//configConfMo/@errorCode",
					"Secure": false,
					"Type": "simple"
				}, {
					"AcceptSingleValue": false,
					"ComplexType": "",
					"ItemType": "simple",
					"Name": "ErrorDescription",
					"ObjectType": "content.Parameter",
					"Path": "//configConfMo/@errorDescr",
					"Secure": false,
					"Type": "simple"
				}],
				"ObjectType": "content.Grammar",
				"Parameters": [],
				"Types": []
			}
		}],
		"CancelAction": [],
		"ClassId": "workflow.BatchApiExecutor",
		"Constraints": {
			"ObjectType": "workflow.TaskConstraints"
		},
		"Description": "Rack Server Cleanup Boot order Task Batch APIs.",
		"Name": "ResetRackServerBootOrder",
		"ObjectType": "workflow.BatchApiExecutor",
		"SharedScope": "shared",
		"TaskDefinition": {
			"ObjectType": "workflow.TaskDefinition",
			"Selector": "Name eq \"ResetServerBootOrder\" and Version eq 1"
		}
	},
	"ClassId": "bulk.RestSubRequest",
	"ObjectType": "bulk.RestSubRequest",
	"TargetMoid": "",
	"Uri": "/v1/workflow/BatchApiExecutors",
	"Verb": "POST"
}, {
	"Body": {
		"Batch": [{
			"Body": "{{- if index .global.task.input \"Body\" -}}\n  {{.global.task.input.Body.Text}}\n{{- end -}}",
			"ContentType": "{{- if index .global.task.input \"ContentType\" -}}\n  {{.global.task.input.ContentType}}\n{{- else -}}json{{- end -}}",
			"Cookies": "{{- if index .global.task.input \"Cookies\" -}}\n  {{.global.task.input.Cookies | ToJson}}\n{{- end -}}",
			"EndpointRequestType": "Internal",
			"Headers": "{{- if index .global.task.input \"Headers\" -}}\n  {{.global.task.input.Headers | ToJson}}\n{{- end -}}",
			"Method": "{{- if index .global.task.input \"Method\" -}}\n  {{.global.task.input.Method}}\n{{- else -}}GET{{- end -}}",
			"Name": "GenericBatchApiTask",
			"ObjectType": "workflow.WebApi",
			"Outcomes": "{{- if index .global.task.input \"Outcomes\" -}}\n  {{.global.task.input.Outcomes | ToJson}}\n{{- end -}}",
			"Protocol": "{{- if index .global.task.input \"Protocol\" -}}\n  {{.global.task.input.Protocol}}\n{{- else -}}https{{- end -}}",
			"ResponseSpec": "{{- if index .global.task.input \"ResponseParser\" -}}\n  {{.global.task.input.ResponseParser | ToJson}}\n{{- end -}}",
			"TargetType": "{{- if index .global.task.input \"Target\" -}}\n  Endpoint\n{{- else -}}Local{{- end -}}",
			"Url": "{{.global.task.input.Url}}"
		}],
		"CancelAction": [],
		"ClassId": "workflow.BatchApiExecutor",
		"Constraints": {
			"ObjectType": "workflow.TaskConstraints"
		},
		"Description": "Generic Batch API Task",
		"Name": "GenericBatchApiTask",
		"ObjectType": "workflow.BatchApiExecutor",
		"Output": {
			"Cookies": "{{- if index .global.GenericBatchApiTask.output \"HttpCookies\" -}}\n  {{.global.GenericBatchApiTask.output.HttpCookies | ToJson}}\n{{- end -}}",
			"Headers": "{{- if index .global.GenericBatchApiTask.output \"HttpHeaders\" -}}\n  {{.global.GenericBatchApiTask.output.HttpHeaders | ToJson}}\n{{- end -}}",
			"Parameters": "{{.global.GenericBatchApiTask.output | ToJson}}",
			"StatusCode": "{{- if index .global.GenericBatchApiTask.output \"HttpStatusCode\" -}}\n  {{.global.GenericBatchApiTask.output.HttpStatusCode}}\n{{- end -}}",
			"StatusMessage": "{{- if index .global.GenericBatchApiTask.output \"HttpStatusMsg\" -}}\n  {{.global.GenericBatchApiTask.output.HttpStatusMsg}}\n{{- end -}}"
		},
		"SharedScope": "shared",
		"TaskDefinition": {
			"ObjectType": "workflow.TaskDefinition",
			"Selector": "Name eq \"InvokeGenericWebApi\" and Version eq 1"
		}
	},
	"ClassId": "bulk.RestSubRequest",
	"ObjectType": "bulk.RestSubRequest",
	"TargetMoid": "",
	"Uri": "/v1/workflow/BatchApiExecutors",
	"Verb": "POST"
}, {
	"Body": {
		"ClassId": "workflow.TaskDefinition",
		"DefaultVersion": true,
		"Description": "This is a task to validate Virtual Media mapping",
		"InterfaceTask": {
			"ObjectType": "workflow.TaskDefinition",
			"Selector": "Name eq \"ConfirmVMediaMappingStatus\" and Version eq 1"
		},
		"Label": "Confirm Virtual Media Mapping Status",
		"Name": "ConfirmServerVMediaMappingStatus",
		"ObjectType": "workflow.TaskDefinition",
		"Properties": {
			"InputDefinition": [{
				"CustomDataTypeProperties": {
					"CatalogMoid": "shared",
					"ObjectType": "workflow.CustomDataProperty"
				},
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Target Device",
				"Name": "TargetDevice",
				"ObjectType": "workflow.TargetDataType",
				"Properties": [{
					"DisplayAttributes": ["DeviceHostname", "DeviceIpAddress", "Pid", "Serial"],
					"ObjectType": "workflow.TargetProperty",
					"Selector": "/api/v1/asset/DeviceRegistrations?$filter=(PlatformType eq IMCM4 or PlatformType eq IMCM5 or PlatformType eq IMCRack)",
					"SelectorProperty": {
						"Method": "GET",
						"ObjectType": "workflow.SelectorProperty"
					}
				}],
				"Required": true
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Valitate Mapping Status if it is set",
				"Name": "ValidateMappingStatus",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "boolean"
				}
			}],
			"ObjectType": "workflow.Properties",
			"OutputDefinition": [{
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "MappingStatus",
				"Name": "MappingStatus",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				}
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "VolumeName",
				"Name": "VolumeName",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				}
			}],
			"RetryCount": 3,
			"RetryDelay": 120,
			"RetryPolicy": "Fixed",
			"SupportStatus": "Supported",
			"Timeout": 600,
			"TimeoutPolicy": "Retry"
		},
		"RollbackTasks": [],
		"SharedScope": "shared",
		"Version": 1
	},
	"ClassId": "bulk.RestSubRequest",
	"ObjectType": "bulk.RestSubRequest",
	"TargetMoid": "",
	"Uri": "/v1/workflow/TaskDefinitions",
	"Verb": "POST"
}, {
	"Body": {
		"ClassId": "workflow.TaskDefinition",
		"DefaultVersion": true,
		"Description": "This is a task to unmap Virtual Media Volume",
		"InterfaceTask": {
			"ObjectType": "workflow.TaskDefinition",
			"Selector": "Name eq \"DisableVMediaMapping\" and Version eq 1"
		},
		"Label": "Unmount Virtual Media Mapping",
		"Name": "DisableRackserverVMediaMappingEntry",
		"ObjectType": "workflow.TaskDefinition",
		"Properties": {
			"InputDefinition": [{
				"CustomDataTypeProperties": {
					"CatalogMoid": "shared",
					"ObjectType": "workflow.CustomDataProperty"
				},
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Target Device",
				"Name": "TargetDevice",
				"ObjectType": "workflow.TargetDataType",
				"Properties": [{
					"DisplayAttributes": ["DeviceHostname", "DeviceIpAddress", "Pid", "Serial"],
					"ObjectType": "workflow.TargetProperty",
					"Selector": "/api/v1/asset/DeviceRegistrations?$filter=(PlatformType eq IMCM4 or PlatformType eq IMCM5 or PlatformType eq IMCRack)",
					"SelectorProperty": {
						"Method": "GET",
						"ObjectType": "workflow.SelectorProperty"
					}
				}],
				"Required": true
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Volume Name",
				"Name": "VolumeName",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				},
				"Required": true
			}],
			"ObjectType": "workflow.Properties",
			"OutputDefinition": [],
			"RetryCount": 3,
			"RetryDelay": 30,
			"RetryPolicy": "Fixed",
			"SupportStatus": "Supported",
			"Timeout": 600,
			"TimeoutPolicy": "Retry"
		},
		"RollbackTasks": [],
		"SharedScope": "shared",
		"Version": 1
	},
	"ClassId": "bulk.RestSubRequest",
	"ObjectType": "bulk.RestSubRequest",
	"TargetMoid": "",
	"Uri": "/v1/workflow/TaskDefinitions",
	"Verb": "POST"
}, {
	"Body": {
		"ClassId": "workflow.TaskDefinition",
		"DefaultVersion": true,
		"Description": "This is a task to create Virtual Media mapping",
		"InterfaceTask": {
			"ObjectType": "workflow.TaskDefinition",
			"Selector": "Name eq \"NewVMediaMapping\" and Version eq 1"
		},
		"Label": "Create Virtual Media Mapping",
		"Name": "NewVMediaMappingRackEntry",
		"ObjectType": "workflow.TaskDefinition",
		"Properties": {
			"InputDefinition": [{
				"CustomDataTypeProperties": {
					"CatalogMoid": "shared",
					"ObjectType": "workflow.CustomDataProperty"
				},
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Target Device",
				"Name": "TargetDevice",
				"ObjectType": "workflow.TargetDataType",
				"Properties": [{
					"DisplayAttributes": ["DeviceHostname", "DeviceIpAddress", "Pid", "Serial"],
					"ObjectType": "workflow.TargetProperty",
					"Selector": "/api/v1/asset/DeviceRegistrations?$filter=(PlatformType eq IMCM4 or PlatformType eq IMCM5 or PlatformType eq IMCRack)",
					"SelectorProperty": {
						"Method": "GET",
						"ObjectType": "workflow.SelectorProperty"
					}
				}],
				"Required": true
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Volume Name",
				"Name": "VolumeName",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				},
				"Required": true
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Remote Share",
				"Name": "RemoteShare",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				},
				"Required": true
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Remote File",
				"Name": "RemoteFile",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				},
				"Required": true
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Remote Share Type",
				"Name": "RemoteShareType",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				},
				"Required": true
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Remote Share User",
				"Name": "RemoteShareUser",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				}
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Remote Share Password",
				"Name": "RemoteSharePassword",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Secure": true,
					"Type": "string"
				}
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Remote Share Mount Options",
				"Name": "RemoteShareMountOptions",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				}
			}],
			"ObjectType": "workflow.Properties",
			"OutputDefinition": [],
			"RetryCount": 3,
			"RetryDelay": 30,
			"RetryPolicy": "Fixed",
			"SupportStatus": "Supported",
			"Timeout": 600,
			"TimeoutPolicy": "Retry"
		},
		"RollbackTasks": [],
		"SecurePropAccess": true,
		"SharedScope": "shared",
		"Version": 1
	},
	"ClassId": "bulk.RestSubRequest",
	"ObjectType": "bulk.RestSubRequest",
	"TargetMoid": "",
	"Uri": "/v1/workflow/TaskDefinitions",
	"Verb": "POST"
}, {
	"Body": {
		"ClassId": "workflow.TaskDefinition",
		"DefaultVersion": true,
		"Description": "This is a task to track OS install in a standalone Rack Server",
		"InterfaceTask": {
			"ObjectType": "workflow.TaskDefinition",
			"Selector": "Name eq \"WatchOSInstallStatus\" and Version eq 1"
		},
		"Label": "Watch Rack Server OS Install Status",
		"Name": "WatchRackServerOSInstallStatus",
		"ObjectType": "workflow.TaskDefinition",
		"Properties": {
			"InputDefinition": [{
				"CustomDataTypeProperties": {
					"CatalogMoid": "shared",
					"ObjectType": "workflow.CustomDataProperty"
				},
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Target Device",
				"Name": "TargetDevice",
				"ObjectType": "workflow.TargetDataType",
				"Properties": [{
					"DisplayAttributes": ["DeviceHostname", "DeviceIpAddress", "Pid", "Serial"],
					"ObjectType": "workflow.TargetProperty",
					"Selector": "/api/v1/asset/DeviceRegistrations?$filter=(PlatformType eq IMCM4 or PlatformType eq IMCM5 or PlatformType eq IMCRack)",
					"SelectorProperty": {
						"Method": "GET",
						"ObjectType": "workflow.SelectorProperty"
					}
				}],
				"Required": true
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Answer Source",
				"Name": "AnswerSource",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				},
				"Required": true
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"Description": "Operating System Installation Target",
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Install Target",
				"Name": "InstallTarget",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "json"
				}
			}],
			"ObjectType": "workflow.Properties",
			"OutputDefinition": [],
			"RetryCount": 30,
			"RetryDelay": 120,
			"RetryPolicy": "Fixed",
			"SupportStatus": "Supported",
			"Timeout": 180,
			"TimeoutPolicy": "Retry"
		},
		"RollbackTasks": [],
		"SharedScope": "shared",
		"Version": 1
	},
	"ClassId": "bulk.RestSubRequest",
	"ObjectType": "bulk.RestSubRequest",
	"TargetMoid": "",
	"Uri": "/v1/workflow/TaskDefinitions",
	"Verb": "POST"
}, {
	"Body": {
		"ClassId": "workflow.TaskDefinition",
		"DefaultVersion": true,
		"Description": "This is a task to set boot order of the Rack Server to Local HDD.",
		"InterfaceTask": {
			"ObjectType": "workflow.TaskDefinition",
			"Selector": "Name eq \"SetServerBootOrder\" and Version eq 1"
		},
		"Label": "Configuring Boot order of the Rack Server to local HDD.",
		"Name": "SetRackServerBootOrder",
		"ObjectType": "workflow.TaskDefinition",
		"Properties": {
			"InputDefinition": [{
				"CustomDataTypeProperties": {
					"CatalogMoid": "shared",
					"ObjectType": "workflow.CustomDataProperty"
				},
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Target Device",
				"Name": "TargetDevice",
				"ObjectType": "workflow.TargetDataType",
				"Properties": [{
					"DisplayAttributes": ["DeviceHostname", "DeviceIpAddress", "Pid", "Serial"],
					"ObjectType": "workflow.TargetProperty",
					"Selector": "/api/v1/asset/DeviceRegistrations?$filter=(PlatformType eq IMCM4 or PlatformType eq IMCM5 or PlatformType eq IMCRack)",
					"SelectorProperty": {
						"Method": "GET",
						"ObjectType": "workflow.SelectorProperty"
					}
				}],
				"Required": true
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Answer Source",
				"Name": "AnswerSource",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				},
				"Required": true
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Boot Mode",
				"Name": "BootMode",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				},
				"Required": true
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Model",
				"Name": "Model",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				},
				"Required": true
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Platform Type",
				"Name": "PlatformType",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				},
				"Required": true
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "OS Vendor",
				"Name": "OsVendor",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				},
				"Required": true
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "OS Version",
				"Name": "OsVersion",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				},
				"Required": true
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Storage Controller Slot Id",
				"Name": "StorageControllerSlotId",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				},
				"Required": true
			}],
			"ObjectType": "workflow.Properties",
			"OutputDefinition": [],
			"RetryCount": 3,
			"RetryDelay": 10,
			"RetryPolicy": "Fixed",
			"SupportStatus": "Supported",
			"Timeout": 360,
			"TimeoutPolicy": "Retry"
		},
		"RollbackTasks": [],
		"SharedScope": "shared",
		"Version": 1
	},
	"ClassId": "bulk.RestSubRequest",
	"ObjectType": "bulk.RestSubRequest",
	"TargetMoid": "",
	"Uri": "/v1/workflow/TaskDefinitions",
	"Verb": "POST"
}, {
	"Body": {
		"Batch": [{
			"ContentType": "json",
			"EndpointRequestType": "Internal",
			"Method": "GET",
			"Name": "Systems",
			"ObjectType": "workflow.WebApi",
			"Outcomes": [{
				"Condition": "{{if (ne .global.Systems.output.PowerState \"On\")}}true{{else}}false{{end}}",
				"Error": true,
				"Message": "Host is powered Off.",
				"ObjectType": "workflow.Outcome"
			}, {
				"Condition": "{{if (eq .global.Systems.output.PowerState \"On\")}}{{if (eq .global.Systems.output.PostCompletionStatus false)}}true{{else}}false{{end}}{{else}}false{{end}}",
				"Error": true,
				"Message": "Host is powering on. Please wait till BIOS POST is complete.",
				"ObjectType": "workflow.Outcome"
			}, {
				"Condition": "true",
				"Message": "Server configurations retrieved successfully.",
				"ObjectType": "workflow.Outcome"
			}],
			"Protocol": "http",
			"ResponseSpec": {
				"ErrorParameters": [{
					"AcceptSingleValue": false,
					"ComplexType": "",
					"ItemType": "simple",
					"Name": "Errors",
					"ObjectType": "content.Parameter",
					"Path": "$.error",
					"Secure": false,
					"Type": "simple"
				}],
				"ObjectType": "content.Grammar",
				"Parameters": [{
					"AcceptSingleValue": false,
					"ComplexType": "",
					"ItemType": "simple",
					"Name": "PowerState",
					"ObjectType": "content.Parameter",
					"Path": "$.PowerState",
					"Secure": false,
					"Type": "simple"
				}, {
					"AcceptSingleValue": false,
					"ComplexType": "",
					"ItemType": "simple",
					"Name": "PostCompletionStatus",
					"ObjectType": "content.Parameter",
					"Path": "$.Oem.Cisco.PostCompletionStatus",
					"Secure": false,
					"Type": "simple"
				}],
				"Types": []
			},
			"TargetType": "Endpoint",
			"Url": "http://127.0.0.1:444/redfish/v1/Systems/{{.global.task.input.Serial}}"
		}, {
			"ContentType": "json",
			"EndpointRequestType": "Internal",
			"ErrorContentType": "text",
			"Method": "GET",
			"Name": "BiosBootMode",
			"ObjectType": "workflow.WebApi",
			"Outcomes": [{
				"Condition": "{{if eq .global.BiosBootMode.output.ApiError \"Error, File does not exist\"}}true{{end}}",
				"Message": "Actual Order file not found. Performing Power Cycle Operation.",
				"ObjectType": "workflow.Outcome",
				"Type": "Success"
			}, {
				"Condition": "true",
				"Message": "Server configurations retrieved successfully",
				"ObjectType": "workflow.Outcome"
			}],
			"Protocol": "http",
			"ResponseSpec": {
				"ErrorParameters": [{
					"AcceptSingleValue": false,
					"ComplexType": "",
					"IsDelimiter": false,
					"IsNextCaptureOnSameLine": false,
					"ItemType": "simple",
					"Name": "ApiError",
					"ObjectType": "content.TextParameter",
					"Path": ".*",
					"RegexLine": "${ApiError}",
					"Secure": false,
					"Type": "simple"
				}],
				"ObjectType": "content.Grammar",
				"Parameters": [{
					"AcceptSingleValue": false,
					"ComplexType": "",
					"ItemType": "simple",
					"Name": "ActualOrder",
					"ObjectType": "content.Parameter",
					"Path": "$",
					"Secure": false,
					"Type": "simple"
				}, {
					"AcceptSingleValue": false,
					"ComplexType": "",
					"ItemType": "simple",
					"Name": "Version1",
					"ObjectType": "content.Parameter",
					"Path": "$.ActualBootOrder.ActualBootOrderHeader.Version",
					"Secure": false,
					"Type": "simple"
				}, {
					"AcceptSingleValue": false,
					"ComplexType": "",
					"ItemType": "simple",
					"Name": "ActualBootModeV1",
					"ObjectType": "content.Parameter",
					"Path": "$.ActualBootOrder.ActualBootOrderHeader.BootType",
					"Secure": false,
					"Type": "simple"
				}, {
					"AcceptSingleValue": false,
					"ComplexType": "",
					"ItemType": "simple",
					"Name": "ActualBootModeV2",
					"ObjectType": "content.Parameter",
					"Path": "$.ActualBootOrderHeader.BootMode",
					"Secure": false,
					"Type": "simple"
				}],
				"Types": []
			},
			"TargetType": "Endpoint",
			"Url": "http://127.0.0.1:444/cisco/blob/Bios2IntersightBootOrder"
		}, {
			"ContentType": "json",
			"EndpointRequestType": "Internal",
			"ErrorContentType": "text",
			"Method": "GET",
			"Name": "ConfigPolicyDetails",
			"ObjectType": "workflow.WebApi",
			"Outcomes": [{
				"Condition": "{{if eq .global.ConfigPolicyDetails.output.ApiError \"Error, File does not exist\"}}true{{end}}",
				"Message": "Boot policy not found. Setting default configurations",
				"ObjectType": "workflow.Outcome",
				"Type": "Success"
			}, {
				"Condition": "true",
				"Message": "Server configurations retrieved successfully",
				"ObjectType": "workflow.Outcome"
			}],
			"Protocol": "http",
			"ResponseSpec": {
				"ErrorParameters": [{
					"AcceptSingleValue": false,
					"ComplexType": "",
					"IsDelimiter": false,
					"IsNextCaptureOnSameLine": false,
					"ItemType": "simple",
					"Name": "ApiError",
					"ObjectType": "content.TextParameter",
					"Path": ".*",
					"RegexLine": "${ApiError}",
					"Secure": false,
					"Type": "simple"
				}],
				"ObjectType": "content.Grammar",
				"Parameters": [{
					"AcceptSingleValue": false,
					"ComplexType": "",
					"ItemType": "simple",
					"Name": "ConfigPolicy",
					"ObjectType": "content.Parameter",
					"Path": "$",
					"Secure": false,
					"Type": "simple"
				}, {
					"AcceptSingleValue": false,
					"ComplexType": "",
					"ItemType": "simple",
					"Name": "Version",
					"ObjectType": "content.Parameter",
					"Path": "$.FlexBootOrder.FlexBootOrderHeader.Version",
					"Secure": false,
					"Type": "simple"
				}, {
					"AcceptSingleValue": false,
					"ComplexType": "",
					"ItemType": "simple",
					"Name": "ConfiguredBootType",
					"ObjectType": "content.Parameter",
					"Path": "$.FlexBootOrder.FlexBootOrderHeader.BootType",
					"Secure": false,
					"Type": "simple"
				}, {
					"AcceptSingleValue": false,
					"ComplexType": "",
					"ItemType": "simple",
					"Name": "ConfiguredBootMode",
					"ObjectType": "content.Parameter",
					"Path": "$.FlexBootOrder.FlexBootOrderHeader.BootMode",
					"Secure": false,
					"Type": "simple"
				}],
				"Types": []
			},
			"TargetType": "Endpoint",
			"Url": "http://127.0.0.1:444/cisco/blob/Intersight2BiosBootOrder"
		}],
		"CancelAction": [],
		"ClassId": "workflow.BatchApiExecutor",
		"Constraints": {
			"ObjectType": "workflow.TaskConstraints"
		},
		"Description": "OS Install Parameter Validation Task Batch APIs for IMM",
		"Name": "ConfirmOSInstallParameters",
		"ObjectType": "workflow.BatchApiExecutor",
		"Output": {
			"ActualBootMode": "{{if eq .global.BiosBootMode.output.ApiError \"Error, File does not exist\"}}NoActualOrder{{else}}{{if .global.BiosBootMode.output.Version1 }}{{.global.BiosBootMode.output.ActualBootModeV1}}{{else}}{{.global.BiosBootMode.output.ActualBootModeV2}}{{end}}{{end}}",
			"ActualOrder": "{{.global.BiosBootMode.output.ActualOrder | ToJson}}",
			"ConfigPolicy": "{{if eq .global.ConfigPolicyDetails.output.ApiError \"Error, File does not exist\"}}NoConfigPolicy{{else}}{{.global.ConfigPolicyDetails.output.ConfigPolicy | ToJson}}{{end}}",
			"ConfiguredBootMode": "{{if eq .global.ConfigPolicyDetails.output.ApiError \"Error, File does not exist\"}}NoConfigPolicy{{else}}{{if eq .global.ConfigPolicyDetails.output.Version \"2.0\"}}{{.global.ConfigPolicyDetails.output.ConfiguredBootMode}}{{else}}{{.global.ConfigPolicyDetails.output.ConfiguredBootType}}{{end}}{{end}}"
		},
		"SharedScope": "shared",
		"TaskDefinition": {
			"ObjectType": "workflow.TaskDefinition",
			"Selector": "Name eq \"ConfirmOSInstallParameters\" and Version eq 1"
		}
	},
	"ClassId": "bulk.RestSubRequest",
	"ObjectType": "bulk.RestSubRequest",
	"TargetMoid": "",
	"Uri": "/v1/workflow/BatchApiExecutors",
	"Verb": "POST"
}, {
	"Body": {
		"ClassId": "workflow.TaskDefinition",
		"DefaultVersion": true,
		"Description": "Sets Server Power state to Power On, Power Off, Power Cycle or Hard Reset.",
		"InterfaceTask": {
			"ObjectType": "workflow.TaskDefinition",
			"Selector": "Name eq \"SetServerPowerState\" and Version eq 1"
		},
		"Label": "SetServerPowerStateImpl",
		"Name": "SetServerPowerStateImpl",
		"ObjectType": "workflow.TaskDefinition",
		"Properties": {
			"ExternalMeta": true,
			"InputDefinition": [{
				"CustomDataTypeProperties": {
					"CatalogMoid": "shared",
					"ObjectType": "workflow.CustomDataProperty"
				},
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Server",
				"Name": "Server",
				"ObjectType": "workflow.TargetDataType",
				"Properties": [{
					"ConnectorAttribute": "RegisteredDevice.Moid",
					"DisplayAttributes": ["Name"],
					"ObjectType": "workflow.TargetProperty",
					"Selector": "/api/v1/compute/PhysicalSummaries?$filter=PlatformType in ('IMC','IMCBlade','IMCM5','IMCM4')",
					"SupportedObjects": ["compute.RackUnit", "compute.Blade", "compute.PhysicalSummary"]
				}],
				"Required": true
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"Description": "Sets Server Power state to Power On, Power Off, Power Cycle or Hard Reset.",
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Desired Power State",
				"Name": "PowerState",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [{
							"Label": "Power On",
							"ObjectType": "workflow.EnumEntry",
							"Value": "Power On"
						}, {
							"Label": "Power Off",
							"ObjectType": "workflow.EnumEntry",
							"Value": "Power Off"
						}, {
							"Label": "Power Cycle",
							"ObjectType": "workflow.EnumEntry",
							"Value": "Power Cycle"
						}, {
							"Label": "Hard Reset",
							"ObjectType": "workflow.EnumEntry",
							"Value": "Hard Reset"
						}],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "enum"
				},
				"Required": true
			}],
			"ObjectType": "workflow.Properties",
			"OutputDefinition": [{
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"Description": "Workflow Triggered",
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Workflow Triggered",
				"Name": "Workflow",
				"ObjectType": "workflow.MoReferenceDataType",
				"Properties": [{
					"DisplayAttributes": ["Name"],
					"ObjectType": "workflow.MoReferenceProperty"
				}]
			}],
			"RetryDelay": 100,
			"RetryPolicy": "Fixed",
			"SupportStatus": "Beta",
			"Timeout": 86400,
			"TimeoutPolicy": "Retry"
		},
		"RollbackTasks": [],
		"SharedScope": "shared",
		"Tags": [{
			"Key": "platformType.IMC",
			"Value": "true"
		}, {
			"Key": "platformType.IMCBlade",
			"Value": "true"
		}],
		"Version": 1
	},
	"ClassId": "bulk.RestSubRequest",
	"ObjectType": "bulk.RestSubRequest",
	"TargetMoid": "",
	"Uri": "/v1/workflow/TaskDefinitions",
	"Verb": "POST"
}, {
	"Body": {
		"Batch": [{
			"ContentType": "json",
			"EndpointRequestType": "Internal",
			"Method": "GET",
			"Name": "Systems",
			"ObjectType": "workflow.WebApi",
			"Outcomes": [{
				"Condition": "true",
				"Message": "Server configurations retrieved successfully.",
				"ObjectType": "workflow.Outcome"
			}],
			"Protocol": "http",
			"ResponseSpec": {
				"ErrorParameters": [{
					"AcceptSingleValue": false,
					"ComplexType": "",
					"ItemType": "simple",
					"Name": "Errors",
					"ObjectType": "content.Parameter",
					"Path": "$.error",
					"Secure": false,
					"Type": "simple"
				}],
				"ObjectType": "content.Grammar",
				"Parameters": [{
					"AcceptSingleValue": false,
					"ComplexType": "",
					"ItemType": "simple",
					"Name": "SystemsResponse",
					"ObjectType": "content.Parameter",
					"Path": "$",
					"Secure": false,
					"Type": "simple"
				}],
				"Types": []
			},
			"TargetType": "Endpoint",
			"Url": "http://127.0.0.1:444/redfish/v1/Systems"
		}, {
			"ContentType": "json",
			"EndpointRequestType": "Internal",
			"Method": "GET",
			"Name": "SystemsServer",
			"ObjectType": "workflow.WebApi",
			"Outcomes": [{
				"Condition": "{{(ne .global.SystemsServer.output.HttpStatusCode 200)}}",
				"Message": "Host not responding.",
				"ObjectType": "workflow.Outcome",
				"Type": "Error"
			}, {
				"Condition": "{{if (ne .global.SystemsServer.output.PowerState \"On\")}}true{{else}}false{{end}}",
				"Message": "Host is powered Off.",
				"ObjectType": "workflow.Outcome",
				"Type": "Status"
			}, {
				"Condition": "{{if (eq .global.SystemsServer.output.PostCompletionStatus false)}}true{{else}}false{{end}}",
				"Message": "Please wait till BIOS POST is complete.",
				"ObjectType": "workflow.Outcome",
				"Type": "Status"
			}, {
				"Condition": "true",
				"Message": "Server power status retrieved successfully.",
				"ObjectType": "workflow.Outcome"
			}],
			"Protocol": "http",
			"ResponseSpec": {
				"ErrorParameters": [{
					"AcceptSingleValue": false,
					"ComplexType": "",
					"ItemType": "simple",
					"Name": "Errors",
					"ObjectType": "content.Parameter",
					"Path": "$.error",
					"Secure": false,
					"Type": "simple"
				}],
				"ObjectType": "content.Grammar",
				"Parameters": [{
					"AcceptSingleValue": false,
					"ComplexType": "",
					"ItemType": "simple",
					"Name": "PowerState",
					"ObjectType": "content.Parameter",
					"Path": "$.PowerState",
					"Secure": false,
					"Type": "simple"
				}, {
					"AcceptSingleValue": false,
					"ComplexType": "",
					"ItemType": "simple",
					"Name": "PostCompletionStatus",
					"ObjectType": "content.Parameter",
					"Path": "$.Oem.Cisco.PostCompletionStatus",
					"Secure": false,
					"Type": "simple"
				}],
				"Types": []
			},
			"StartDelay": 30,
			"TargetType": "Endpoint",
			"Url": "http://127.0.0.1:444/redfish/v1/Systems/{{.global.task.input.Serial}}"
		}, {
			"ContentType": "json",
			"EndpointRequestType": "Internal",
			"ErrorContentType": "text",
			"Method": "GET",
			"Name": "BiosBootMode",
			"ObjectType": "workflow.WebApi",
			"Outcomes": [{
				"Condition": "{{if eq .global.BiosBootMode.output.ApiError \"Error, File does not exist\"}}true{{end}}",
				"Message": "Actual Order file not found. Perform Power Cycle operation and re-trigger installation.",
				"ObjectType": "workflow.Outcome",
				"Type": "Error"
			}, {
				"Condition": "true",
				"Message": "Server power status retrieved successfully.",
				"ObjectType": "workflow.Outcome"
			}],
			"Protocol": "http",
			"ResponseSpec": {
				"ErrorParameters": [{
					"AcceptSingleValue": false,
					"ComplexType": "",
					"IsDelimiter": false,
					"IsNextCaptureOnSameLine": false,
					"ItemType": "simple",
					"Name": "ApiError",
					"ObjectType": "content.TextParameter",
					"Path": ".*",
					"RegexLine": "${ApiError}",
					"Secure": false,
					"Type": "simple"
				}],
				"ObjectType": "content.Grammar",
				"Parameters": [{
					"AcceptSingleValue": false,
					"ComplexType": "",
					"ItemType": "simple",
					"Name": "Version1",
					"ObjectType": "content.Parameter",
					"Path": "$.ActualBootOrder.ActualBootOrderHeader.Version",
					"Secure": false,
					"Type": "simple"
				}, {
					"AcceptSingleValue": false,
					"ComplexType": "",
					"ItemType": "simple",
					"Name": "ActualBootModeV1",
					"ObjectType": "content.Parameter",
					"Path": "$.ActualBootOrder.ActualBootOrderHeader.BootType",
					"Secure": false,
					"Type": "simple"
				}, {
					"AcceptSingleValue": false,
					"ComplexType": "",
					"ItemType": "simple",
					"Name": "ActualBootModeV2",
					"ObjectType": "content.Parameter",
					"Path": "$.ActualBootOrderHeader.BootMode",
					"Secure": false,
					"Type": "simple"
				}],
				"Types": []
			},
			"TargetType": "Endpoint",
			"Url": "http://127.0.0.1:444/cisco/blob/Bios2IntersightBootOrder"
		}],
		"CancelAction": [],
		"ClassId": "workflow.BatchApiExecutor",
		"Constraints": {
			"ObjectType": "workflow.TaskConstraints"
		},
		"Description": "OS Install Parameter Validation Task Batch APIs for IMM",
		"Name": "ConfirmServerState",
		"ObjectType": "workflow.BatchApiExecutor",
		"Output": {
			"ActualBootMode": "{{if .global.BiosBootMode.output.Version1 }}{{.global.BiosBootMode.output.ActualBootModeV1}}{{else}}{{.global.BiosBootMode.output.ActualBootModeV2}}{{end}}",
			"PostCompletionState": "{{.global.SystemsServer.output.PostCompletionStatus}}",
			"PowerState": "{{.global.SystemsServer.output.PowerState | TrimSpace}}"
		},
		"RetryFromFailedApi": true,
		"SharedScope": "shared",
		"TaskDefinition": {
			"ObjectType": "workflow.TaskDefinition",
			"Selector": "Name eq \"ConfirmServerState\" and Version eq 1"
		}
	},
	"ClassId": "bulk.RestSubRequest",
	"ObjectType": "bulk.RestSubRequest",
	"TargetMoid": "",
	"Uri": "/v1/workflow/BatchApiExecutors",
	"Verb": "POST"
}, {
	"Body": {
		"Batch": [{
			"Body": "{  \n\t\"BaseISORepoDetails\": {{.global.task.input.SCUImageDetails | ToJson }} ,\n    \"OSISORepoDetails\": {{.global.task.input.OSImageDetails | ToJson }} , \n    \"OSAnswerFileRepoDetails\": {{.global.task.input.AnswerFileDetails | ToJson }}   ,\n   \"TargetOS\":   {{.global.task.input.TargetOSDetails | ToJson}}  \t \n  ,\n    \"TargetDisk\":{\n    \t\"@odataid\":\"{{.global.task.input.TargetDisk}}\"\n   \t}\n   }",
			"ContentType": "json",
			"EndpointRequestType": "Internal",
			"Method": "POST",
			"Name": "InstallOSIMM",
			"ObjectType": "workflow.WebApi",
			"Outcomes": [{
				"Condition": "{{if (ContainsString (.global.InstallOSIMM.output.Errors | TrimSpace) \"Already another async task\")}}true{{else}}false{{end}}",
				"Message": "Operating System installation failed. Another instance of Operating System installation  may be in progress.",
				"ObjectType": "workflow.Outcome",
				"Type": "TerminalError"
			}, {
				"Condition": "{{(ne .global.InstallOSIMM.output.HttpStatusCode 202)}}",
				"Message": "Error occured: {{.global.InstallOSIMM.output.Errors}}",
				"ObjectType": "workflow.Outcome",
				"Type": "Error"
			}, {
				"Condition": "{{(eq .global.InstallOSIMM.output.HttpStatusCode 202)}}",
				"Message": "Operating System installation initiated.",
				"ObjectType": "workflow.Outcome"
			}],
			"Protocol": "http",
			"ResponseSpec": {
				"ErrorParameters": [{
					"AcceptSingleValue": false,
					"ComplexType": "",
					"ItemType": "simple",
					"Name": "Errors",
					"ObjectType": "content.Parameter",
					"Path": "$.error[\"@Message.ExtendedInfo\"][0].Message",
					"Secure": false,
					"Type": "simple"
				}],
				"ObjectType": "content.Grammar",
				"Parameters": [{
					"AcceptSingleValue": false,
					"ComplexType": "",
					"ItemType": "simple",
					"Name": "Results",
					"ObjectType": "content.Parameter",
					"Path": "$.Id",
					"Secure": false,
					"Type": "simple"
				}],
				"Types": []
			},
			"TargetType": "Endpoint",
			"Url": "http://127.0.0.1:444/redfish/v1/UpdateService/Actions/Oem/CiscoUCSExtensions.PrepareOSInstall"
		}],
		"CancelAction": [],
		"ClassId": "workflow.BatchApiExecutor",
		"Constraints": {
			"ObjectType": "workflow.TaskConstraints"
		},
		"Description": "OS Install Redfish Api",
		"Name": "InstallOSIMM",
		"ObjectType": "workflow.BatchApiExecutor",
		"Output": {
			"Results": "{{.global.InstallOSIMM.output.Results}}"
		},
		"SharedScope": "shared",
		"TaskDefinition": {
			"ObjectType": "workflow.TaskDefinition",
			"Selector": "Name eq \"InstallOSIMM\" and Version eq 1"
		}
	},
	"ClassId": "bulk.RestSubRequest",
	"ObjectType": "bulk.RestSubRequest",
	"TargetMoid": "",
	"Uri": "/v1/workflow/BatchApiExecutors",
	"Verb": "POST"
}, {
	"Body": {
		"Batch": [{
			"ContentType": "json",
			"EndpointRequestType": "Internal",
			"Method": "GET",
			"Name": "GetInstallStatus",
			"ObjectType": "workflow.WebApi",
			"Outcomes": [{
				"Condition": "{{ne .global.GetInstallStatus.output.HttpStatusCode 200}}",
				"Message": "{{.global.GetInstallStatus.output.Errors}}. {{.global.GetInstallStatus.output.Resolution}}",
				"ObjectType": "workflow.Outcome",
				"Type": "TerminalError"
			}, {
				"Condition": "{{eq .global.GetInstallStatus.output.PercentComplete 100.0}}",
				"Message": "{{$msg:=\"\"}}{{range $msgEntry := .global.GetInstallStatus.output.Messages }}{{$msg = $msgEntry.Message}}{{end}}{{if ( ContainsString ($msg | TrimSpace) \"Successfully completed OS install preparation\")}} Operating System install preparation completed{{else}}{{$msg}}}}{{end}}",
				"ObjectType": "workflow.Outcome",
				"Type": "Success"
			}, {
				"Condition": "{{eq .global.GetInstallStatus.output.TaskState \"Completed\"}}",
				"Message": "{{$msg:=\"\"}}{{$resolution:=\"\"}}{{range $msgEntry := .global.GetInstallStatus.output.Messages }}{{$msg = $msgEntry.Message}}{{$resolution = $msgEntry.Resolution}}{{end}}{{if ( ContainsString ($msg | TrimSpace) \"Unsupported/incorrect OS name\")}} SCU configuration error - Unsupported or incorrect OS name is specified in the configuration file. Contact Cisco TAC for resolution.{{else}}{{if ( ContainsString ($msg | TrimSpace) \"is an invalid image repository.\")}}{{$msg}} Change image repository path or check network connectivity and re-submit the request. {{else}}{{if ( ContainsString ($msg | TrimSpace) \"OS media not found. Please provide proper OS media\")}} Operating System media not valid or not available. Check the Operating System media availability and its software repository configuration.{{else}}{{if ( ContainsString ($msg | TrimSpace) \"Error: Clearing hard disk...\")}}SCU Customization error - Error while clearing hard disk. Refer to Help Center for more details.{{else}}{{$msg}}.{{$resolution}}{{end}}{{end}}{{end}}{{end}}",
				"ObjectType": "workflow.Outcome",
				"Type": "TerminalError"
			}, {
				"Condition": "{{ne .global.GetInstallStatus.output.PercentComplete 100.0}}",
				"Message": "{{$msg:=\"\"}}{{range $msgEntry := .global.GetInstallStatus.output.Messages }}{{$msg = $msgEntry.Message}}{{end}}{{$msg}}",
				"ObjectType": "workflow.Outcome",
				"Type": "Status"
			}],
			"Protocol": "http",
			"ResponseSpec": {
				"ErrorParameters": [{
					"AcceptSingleValue": false,
					"ComplexType": "",
					"ItemType": "simple",
					"Name": "Errors",
					"ObjectType": "content.Parameter",
					"Path": "$.error[\"@Message.ExtendedInfo\"][0].Message",
					"Secure": false,
					"Type": "simple"
				}, {
					"AcceptSingleValue": false,
					"ComplexType": "",
					"ItemType": "simple",
					"Name": "Resolution",
					"ObjectType": "content.Parameter",
					"Path": "$.error[\"@Message.ExtendedInfo\"][0].Resolution",
					"Secure": false,
					"Type": "simple"
				}],
				"ObjectType": "content.Grammar",
				"Parameters": [{
					"AcceptSingleValue": false,
					"ComplexType": "",
					"ItemType": "simple",
					"Name": "PercentComplete",
					"ObjectType": "content.Parameter",
					"Path": "$.PercentComplete",
					"Secure": false,
					"Type": "simple"
				}, {
					"AcceptSingleValue": false,
					"ComplexType": "",
					"ItemType": "simple",
					"Name": "TaskState",
					"ObjectType": "content.Parameter",
					"Path": "$.TaskState",
					"Secure": false,
					"Type": "simple"
				}, {
					"AcceptSingleValue": false,
					"ComplexType": "",
					"ItemType": "simple",
					"Name": "Messages",
					"ObjectType": "content.Parameter",
					"Path": "$.Messages",
					"Secure": false,
					"Type": "collection"
				}],
				"Types": []
			},
			"TargetType": "Endpoint",
			"Url": "http://127.0.0.1:444/redfish/v1/TaskService/Tasks/{{.global.task.input.TaskID  | TrimSpace}}"
		}],
		"CancelAction": [],
		"ClassId": "workflow.BatchApiExecutor",
		"Constraints": {
			"ObjectType": "workflow.TaskConstraints"
		},
		"Description": "Get Install Status",
		"Name": "GetInstallStatus",
		"ObjectType": "workflow.BatchApiExecutor",
		"SharedScope": "shared",
		"TaskDefinition": {
			"ObjectType": "workflow.TaskDefinition",
			"Selector": "Name eq \"GetInstallStatus\" and Version eq 1"
		}
	},
	"ClassId": "bulk.RestSubRequest",
	"ObjectType": "bulk.RestSubRequest",
	"TargetMoid": "",
	"Uri": "/v1/workflow/BatchApiExecutors",
	"Verb": "POST"
}, {
	"Body": {
		"Batch": [{
			"Body": "{{.global.task.input.BootConfiguration  | TrimSpace}}",
			"ContentType": "json",
			"EndpointRequestType": "Internal",
			"Method": "POST",
			"Name": "UpdateBootOrder",
			"ObjectType": "workflow.WebApi",
			"Outcomes": [{
				"Condition": "{{(ne .global.UpdateBootOrder.output.HttpStatusCode 200)}}",
				"Message": "{{.global.UpdateBootOrder.output.HttpStatusMsg}}",
				"ObjectType": "workflow.Outcome",
				"Type": "Error"
			}, {
				"Condition": "true",
				"Message": "Updated Boot Configuration.",
				"ObjectType": "workflow.Outcome"
			}],
			"Protocol": "http",
			"TargetType": "Endpoint",
			"Url": "http://127.0.0.1:444/cisco/blob/Intersight2BiosBootOrder"
		}],
		"CancelAction": [],
		"ClassId": "workflow.BatchApiExecutor",
		"Constraints": {
			"ObjectType": "workflow.TaskConstraints"
		},
		"Description": "Configure Server Boot Order",
		"Name": "UpdateBootOrder",
		"ObjectType": "workflow.BatchApiExecutor",
		"SharedScope": "shared",
		"TaskDefinition": {
			"ObjectType": "workflow.TaskDefinition",
			"Selector": "Name eq \"UpdateBootOrder\" and Version eq 1"
		}
	},
	"ClassId": "bulk.RestSubRequest",
	"ObjectType": "bulk.RestSubRequest",
	"TargetMoid": "",
	"Uri": "/v1/workflow/BatchApiExecutors",
	"Verb": "POST"
}, {
	"Body": {
		"Batch": [{
			"ContentType": "json",
			"EndpointRequestType": "Internal",
			"Method": "GET",
			"Name": "ValidateMountStatus",
			"ObjectType": "workflow.WebApi",
			"Outcomes": [{
				"Condition": "{{(ne .global.ValidateMountStatus.output.HttpStatusCode 200)}}",
				"Message": "{{.global.ValidateMountStatus.output.Errors}}. {{.global.ValidateMountStatus.output.Resolution}}",
				"ObjectType": "workflow.Outcome",
				"Type": "Error"
			}, {
				"Condition": "{{not .global.ValidateMountStatus.output.status}}",
				"Message": "Mount operation is not successful. Please verify that the image url is valid and reachable from the server.",
				"ObjectType": "workflow.Outcome",
				"Type": "Error"
			}, {
				"Condition": "{{ .global.ValidateMountStatus.output.status}}",
				"Message": "Virtual Media mount successful.",
				"ObjectType": "workflow.Outcome",
				"Type": "Success"
			}],
			"Protocol": "http",
			"ResponseSpec": {
				"ErrorParameters": [{
					"AcceptSingleValue": false,
					"ComplexType": "",
					"ItemType": "simple",
					"Name": "Errors",
					"ObjectType": "content.Parameter",
					"Path": "$.error[\"@Message.ExtendedInfo\"][0].Message",
					"Secure": false,
					"Type": "simple"
				}, {
					"AcceptSingleValue": false,
					"ComplexType": "",
					"ItemType": "simple",
					"Name": "Resolution",
					"ObjectType": "content.Parameter",
					"Path": "$.error[\"@Message.ExtendedInfo\"][0].Resolution",
					"Secure": false,
					"Type": "simple"
				}],
				"ObjectType": "content.Grammar",
				"Parameters": [{
					"AcceptSingleValue": false,
					"ComplexType": "",
					"ItemType": "simple",
					"Name": "status",
					"ObjectType": "content.Parameter",
					"Path": "$.Inserted",
					"Secure": false,
					"Type": "simple"
				}],
				"Types": []
			},
			"TargetType": "Endpoint",
			"Url": "http://127.0.0.1:444/redfish/v1/Managers/CIMC/VirtualMedia/{{.global.task.input.DriveID  | TrimSpace}}"
		}],
		"CancelAction": [],
		"ClassId": "workflow.BatchApiExecutor",
		"Constraints": {
			"ObjectType": "workflow.TaskConstraints"
		},
		"Description": "Get Virtual Media mount status",
		"Name": "GetVirtualMediaMountStatusForIMM",
		"ObjectType": "workflow.BatchApiExecutor",
		"SharedScope": "shared",
		"SkipOnCondition": "{{if .global.task.input.DriveID}}false{{else}}true{{end}}",
		"TaskDefinition": {
			"ObjectType": "workflow.TaskDefinition",
			"Selector": "Name eq \"GetVirtualMediaMountStatusForIMM\" and Version eq 1"
		}
	},
	"ClassId": "bulk.RestSubRequest",
	"ObjectType": "bulk.RestSubRequest",
	"TargetMoid": "",
	"Uri": "/v1/workflow/BatchApiExecutors",
	"Verb": "POST"
}, {
	"Body": {
		"Batch": [{
			"Body": "{{.global.task.input.BootConfiguration  | TrimSpace}}",
			"ContentType": "json",
			"EndpointRequestType": "Internal",
			"Method": "POST",
			"Name": "UpdateOneTimeBootOrderForImm",
			"ObjectType": "workflow.WebApi",
			"Outcomes": [{
				"Condition": "{{(ne .global.UpdateOneTimeBootOrderForImm.output.HttpStatusCode 200)}}",
				"Message": "{{.global.UpdateOneTimeBootOrderForImm.output.HttpStatusMsg}}",
				"ObjectType": "workflow.Outcome",
				"Type": "Error"
			}, {
				"Condition": "true",
				"Message": "Onetime boot configuration updated.",
				"ObjectType": "workflow.Outcome"
			}],
			"Protocol": "http",
			"TargetType": "Endpoint",
			"Url": "http://127.0.0.1:444/cisco/blob/Intersight2BiosOneTimeBootOrder"
		}],
		"CancelAction": [],
		"ClassId": "workflow.BatchApiExecutor",
		"Constraints": {
			"ObjectType": "workflow.TaskConstraints"
		},
		"Description": "Configure Server Onetime Boot Order",
		"Name": "UpdateOneTimeBootOrderForImm",
		"ObjectType": "workflow.BatchApiExecutor",
		"SharedScope": "shared",
		"TaskDefinition": {
			"ObjectType": "workflow.TaskDefinition",
			"Selector": "Name eq \"UpdateOneTimeBootOrderForImm\" and Version eq 1"
		}
	},
	"ClassId": "bulk.RestSubRequest",
	"ObjectType": "bulk.RestSubRequest",
	"TargetMoid": "",
	"Uri": "/v1/workflow/BatchApiExecutors",
	"Verb": "POST"
}, {
	"Body": {
		"ClassId": "workflow.TaskDefinition",
		"DefaultVersion": true,
		"Description": "Remove host from selected hypervisor",
		"InterfaceTask": {
			"ObjectType": "workflow.TaskDefinition",
			"Selector": "Name eq \"RemoveHypervisorHost\" and Version eq 1"
		},
		"Label": "Remove host from hypervisor",
		"Name": "RemoveVmwareHost",
		"ObjectType": "workflow.TaskDefinition",
		"Properties": {
			"ExternalMeta": true,
			"InputDefinition": [{
				"CustomDataTypeProperties": {
					"CatalogMoid": "shared",
					"ObjectType": "workflow.CustomDataProperty"
				},
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Hypervisor Manager",
				"Name": "Vcenter",
				"ObjectType": "workflow.TargetDataType",
				"Properties": [{
					"DisplayAttributes": ["DeviceHostname", "Vendor"],
					"ObjectType": "workflow.TargetProperty",
					"Selector": "/api/v1/asset/DeviceRegistrations?$filter=PlatformType eq 'VmwareVcenter'",
					"SelectorProperty": {
						"Method": "GET",
						"ObjectType": "workflow.SelectorProperty"
					}
				}],
				"Required": true
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"Description": "Datacenter associated with the host",
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Datacenter",
				"Name": "Datacenter",
				"ObjectType": "workflow.CustomDataType",
				"Properties": {
					"CatalogMoid": "shared",
					"CustomDataTypeName": "HypervisorDatacenterType",
					"ObjectType": "workflow.CustomDataProperty"
				},
				"Required": true
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"Description": "Name or IP address of the host to be removed.",
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Host",
				"Name": "Host",
				"ObjectType": "workflow.CustomDataType",
				"Properties": {
					"CatalogMoid": "shared",
					"CustomDataTypeName": "HypervisorHostType",
					"ObjectType": "workflow.CustomDataProperty"
				},
				"Required": true
			}],
			"ObjectType": "workflow.Properties",
			"OutputDefinition": [{
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"Description": "Name of the host that was removed",
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Host",
				"Name": "Host",
				"ObjectType": "workflow.CustomDataType",
				"Properties": {
					"CatalogMoid": "shared",
					"CustomDataTypeName": "HypervisorHostType",
					"ObjectType": "workflow.CustomDataProperty"
				}
			}],
			"RetryCount": 1,
			"RetryDelay": 100,
			"RetryPolicy": "Fixed",
			"SupportStatus": "Beta",
			"Timeout": 500,
			"TimeoutPolicy": "Retry"
		},
		"RollbackTasks": [],
		"SharedScope": "shared",
		"Tags": [{
			"Key": "platformType.VmwareVcenter",
			"Value": "true"
		}],
		"Version": 1
	},
	"ClassId": "bulk.RestSubRequest",
	"ObjectType": "bulk.RestSubRequest",
	"TargetMoid": "",
	"Uri": "/v1/workflow/TaskDefinitions",
	"Verb": "POST"
}, {
	"Body": {
		"ClassId": "workflow.TaskDefinition",
		"DefaultVersion": true,
		"Description": "New Vmware Host",
		"InterfaceTask": {
			"ObjectType": "workflow.TaskDefinition",
			"Selector": "Name eq \"NewHypervisorHost\" and Version eq 1"
		},
		"Label": "New Vmware Host",
		"Name": "NewVmwareHost",
		"ObjectType": "workflow.TaskDefinition",
		"Properties": {
			"ExternalMeta": true,
			"InputDefinition": [{
				"CustomDataTypeProperties": {
					"CatalogMoid": "shared",
					"ObjectType": "workflow.CustomDataProperty"
				},
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Hypervisor Manager",
				"Name": "Vcenter",
				"ObjectType": "workflow.TargetDataType",
				"Properties": [{
					"DisplayAttributes": ["DeviceHostname", "Vendor"],
					"ObjectType": "workflow.TargetProperty",
					"Selector": "/api/v1/asset/DeviceRegistrations?$filter=PlatformType eq 'VmwareVcenter'",
					"SelectorProperty": {
						"Method": "GET",
						"ObjectType": "workflow.SelectorProperty"
					}
				}],
				"Required": true
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"Description": "Datacenter to which host is to be added.",
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Datacenter",
				"Name": "Datacenter",
				"ObjectType": "workflow.CustomDataType",
				"Properties": {
					"CatalogMoid": "shared",
					"CustomDataTypeName": "HypervisorDatacenterType",
					"ObjectType": "workflow.CustomDataProperty"
				},
				"Required": true
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"Description": "Cluster to which host is to be added.",
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Cluster",
				"Name": "Cluster",
				"ObjectType": "workflow.CustomDataType",
				"Properties": {
					"CatalogMoid": "shared",
					"CustomDataTypeName": "HypervisorClusterType",
					"ObjectType": "workflow.CustomDataProperty"
				}
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"Description": "Host name or IP address of the host to be added.",
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Host",
				"Name": "Host",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				},
				"Required": true
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"Description": "Username to be used for host access.",
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Username",
				"Name": "Username",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				},
				"Required": true
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"Description": "Password to be used for host access.",
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Password",
				"Name": "Password",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Secure": true,
					"Type": "string"
				},
				"Required": true
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"Description": "Connection to host will be established after successful addition.",
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Connect Now",
				"Name": "ConnectNow",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "boolean"
				}
			}],
			"ObjectType": "workflow.Properties",
			"OutputDefinition": [{
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Host",
				"Name": "Host",
				"ObjectType": "workflow.CustomDataType",
				"Properties": {
					"CatalogMoid": "shared",
					"CustomDataTypeName": "HypervisorHostType",
					"ObjectType": "workflow.CustomDataProperty"
				}
			}, {
				"Default": {
					"ObjectType": "workflow.DefaultValue"
				},
				"DisplayMeta": {
					"InventorySelector": true,
					"ObjectType": "workflow.DisplayMeta",
					"WidgetType": "None"
				},
				"Label": "Managed Object Reference Identity",
				"Name": "HostId",
				"ObjectType": "workflow.PrimitiveDataType",
				"Properties": {
					"Constraints": {
						"EnumList": [],
						"ObjectType": "workflow.Constraints"
					},
					"InventorySelector": [],
					"ObjectType": "workflow.PrimitiveDataProperty",
					"Type": "string"
				}
			}],
			"RetryCount": 1,
			"RetryDelay": 100,
			"RetryPolicy": "Fixed",
			"SupportStatus": "Beta",
			"Timeout": 500,
			"TimeoutPolicy": "Retry"
		},
		"RollbackTasks": [],
		"SecurePropAccess": true,
		"SharedScope": "shared",
		"Tags": [{
			"Key": "platformType.VmwareVcenter",
			"Value": "true"
		}],
		"Version": 1
	},
	"ClassId": "bulk.RestSubRequest",
	"ObjectType": "bulk.RestSubRequest",
	"TargetMoid": "",
	"Uri": "/v1/workflow/TaskDefinitions",
	"Verb": "POST"
}, {
	"Body": {
		"Batch": [{
			"ContentType": "json",
			"EndpointRequestType": "Internal",
			"Method": "GET",
			"Name": "GetProfileApi",
			"ObjectType": "workflow.WebApi",
			"Outcomes": [{
				"Condition": "{{eq .global.GetProfileApi.output.HttpStatusCode 404}}",
				"Message": "Given profile does not exist.",
				"ObjectType": "workflow.Outcome",
				"Type": "TerminalError"
			}, {
				"Condition": "{{ne .global.GetProfileApi.output.HttpStatusCode 200}}",
				"Message": "{{.global.GetProfileApi.output.HttpStatusMsg}}",
				"ObjectType": "workflow.Outcome",
				"Type": "Error"
			}, {
				"Condition": "{{if .global.GetProfileApi.output.AssignedServerMoid}}true {{else}} false {{end}}",
				"Message": "Cannot delete the server profile {{.global.GetProfileApi.output.ProfileName}} while there is a server assigned to it.",
				"ObjectType": "workflow.Outcome",
				"Type": "TerminalError"
			}],
			"Protocol": "https",
			"ResponseSpec": {
				"ErrorParameters": [],
				"ObjectType": "content.Grammar",
				"Parameters": [{
					"AcceptSingleValue": false,
					"ComplexType": "",
					"ItemType": "simple",
					"Name": "AssignedServerMoid",
					"ObjectType": "content.Parameter",
					"Path": "$.AssignedServer.Moid",
					"Secure": false,
					"Type": "simple"
				}, {
					"AcceptSingleValue": false,
					"ComplexType": "",
					"ItemType": "simple",
					"Name": "ProfileName",
					"ObjectType": "content.Parameter",
					"Path": "$.Name",
					"Secure": false,
					"Type": "simple"
				}],
				"Types": []
			},
			"TargetType": "Local",
			"Url": "/v1/server/Profiles/{{.global.task.input.Profile.Moid}}?$select=Name,AssignedServer"
		}, {
			"ContentType": "json",
			"EndpointRequestType": "Internal",
			"Method": "DELETE",
			"Name": "RemoveProfileApi",
			"ObjectType": "workflow.WebApi",
			"Outcomes": [{
				"Condition": "{{ne .global.RemoveProfileApi.output.HttpStatusCode 200}}",
				"Message": "{{.global.RemoveProfileApi.output.HttpStatusMsg}}",
				"ObjectType": "workflow.Outcome",
				"Type": "Error"
			}, {
				"Condition": "true",
				"Message": "Profile {{.global.GetProfileApi.output.ProfileName}} deleted successfully",
				"ObjectType": "workflow.Outcome"
			}],
			"Protocol": "https",
			"TargetType": "Local",
			"Url": "/v1/server/Profiles/{{.global.task.input.Profile.Moid}}"
		}],
		"CancelAction": [],
		"ClassId": "workflow.BatchApiExecutor",
		"Constraints": {
			"ObjectType": "workflow.TaskConstraints"
		},
		"Description": "Remove Server profile",
		"Name": "RemoveServerProfileImpl",
		"ObjectType": "workflow.BatchApiExecutor",
		"RetryFromFailedApi": true,
		"SharedScope": "shared",
		"TaskDefinition": {
			"ObjectType": "workflow.TaskDefinition",
			"Selector": "Name eq \"RemoveServerProfile\" and Version eq 1"
		}
	},
	"ClassId": "bulk.RestSubRequest",
	"ObjectType": "bulk.RestSubRequest",
	"TargetMoid": "",
	"Uri": "/v1/workflow/BatchApiExecutors",
	"Verb": "POST"
}, {
	"Body": {
		"Batch": [{
			"Body": "<configResolveClass inHierarchical=\"false\" classId=\"lsbootBootSecurity\" />",
			"ContentType": "xml",
			"Name": "BootSecureMode",
			"ObjectType": "workflow.XmlApi",
			"Outcomes": [{
				"Condition": "{{if (ne .global.task.input.AnswerSource \"Embedded\")}}{{ContainsString (.global.BootSecureMode.output.SecureBootMode | TrimSpace) \"enabled\"}}{{else}}false{{end}}",
				"Message": "UEFI Secure Boot Mode not supported for Installation. For more information, see Help Center.",
				"ObjectType": "workflow.Outcome",
				"Type": "TerminalError"
			}, {
				"Condition": "true",
				"Message": "Secure Boot Configuration validated.",
				"ObjectType": "workflow.Outcome"
			}],
			"ResponseSpec": {
				"ErrorParameters": [{
					"AcceptSingleValue": false,
					"ComplexType": "",
					"ItemType": "simple",
					"Name": "ErrorCode",
					"ObjectType": "content.Parameter",
					"Path": "//error/@errorCode",
					"Secure": false,
					"Type": "simple"
				}],
				"ObjectType": "content.Grammar",
				"Parameters": [{
					"AcceptSingleValue": false,
					"ComplexType": "",
					"ItemType": "simple",
					"Name": "SecureBootMode",
					"ObjectType": "content.Parameter",
					"Path": "//lsbootBootSecurity/@secureBoot",
					"Secure": false,
					"Type": "simple"
				}],
				"Types": []
			}
		}],
		"CancelAction": [],
		"ClassId": "workflow.BatchApiExecutor",
		"Constraints": {
			"ObjectType": "workflow.TaskConstraints",
			"TargetDataType": "null"
		},
		"Description": "Rack Server Secure Boot Validation Task Batch APIs",
		"Name": "ConfirmOSInstallServerParameters",
		"ObjectType": "workflow.BatchApiExecutor",
		"Output": {
			"SecureBootMode": "{{.global.BootSecureMode.output.SecureBootMode | TrimSpace}}"
		},
		"SharedScope": "shared",
		"TaskDefinition": {
			"ObjectType": "workflow.TaskDefinition",
			"Selector": "Name eq \"ConfirmOSInstallServerParameters\" and Version eq 1"
		}
	},
	"ClassId": "bulk.RestSubRequest",
	"ObjectType": "bulk.RestSubRequest",
	"TargetMoid": "",
	"Uri": "/v1/workflow/BatchApiExecutors",
	"Verb": "POST"
}, {
	"Body": {
		"Batch": [{
			"Body": "<configConfMo inHierarchical=\"true\" dn=\"sys/osi/osiStart\"> <inConfig> <osiStart dn=\"sys/osi/osiStart\" adminState=\"trigger\" {{ if .global.task.input.IsoShareIp }}  isoShareIp=\"{{.global.task.input.IsoShareIp}}\" {{ end }} {{ if .global.task.input.IsoShare }}  isoShare=\"{{.global.task.input.IsoShare}}\" {{ end }} {{ if .global.task.input.IsoShareType }} isoShareType=\"{{.global.task.input.IsoShareType}}\" {{ end }} {{ if .global.task.input.IsoShareUser }} username=\"{{.global.task.input.IsoShareUser}}\" {{ end }} {{ if .global.task.input.IsoSharePassword }} password=\"{{.global.task.input.IsoSharePassword}}\" {{ end }} {{ if ne .global.task.input.AnswerSource \"Embedded\" }} answerFileShareFile=\"/answer\" answerFileSharePath=\"/var/nuova/BIOS/\"  answerFileShareIp=\"localhost\"  {{ end }}  answerFileShareType=\"scp\" configShareFile=\"/config\"  configSharePath=\"/var/nuova/BIOS/\"  configShareIp=\"localhost\" configShareType=\"scp\" remoteShareType=\"scp\"/> </inConfig> </configConfMo>",
			"ContentType": "xml",
			"Name": "OSIStart",
			"ObjectType": "workflow.XmlApi",
			"Outcomes": [{
				"Condition": "{{if (ContainsString .global.OSIStart.output.ErrorDescription \"Operation failed. Failed to Map SCU ISO\")}}true{{end}}",
				"Message": "Operating System installation failed. Failed to Map SCU ISO. Please check Image details in Software Repository.",
				"ObjectType": "workflow.Outcome",
				"Type": "TerminalError"
			}, {
				"Condition": "{{if .global.OSIStart.output.Status}}{{ContainsString (.global.OSIStart.output.Status | TrimSpace) \"Failed to Map SCU ISO\"}}{{else}}false{{end}}",
				"Message": "{{.global.OSIStart.output.Status  | TrimSpace}}",
				"ObjectType": "workflow.Outcome",
				"Type": "TerminalError"
			}, {
				"Condition": "{{if .global.OSIStart.output.Status}}{{ContainsString (.global.OSIStart.output.Status | TrimSpace) \"Failed to Map OS ISO\"}}{{else}}false{{end}}",
				"Message": "{{.global.OSIStart.output.Status  | TrimSpace}}",
				"ObjectType": "workflow.Outcome",
				"Type": "TerminalError"
			}, {
				"Condition": "{{if .global.OSIStart.output.ErrorDescription}}{{ContainsString (.global.OSIStart.output.ErrorDescription | TrimSpace) \"is not a valid value of the union type 'hostNameOrIPv4AddressOrIPv6AddressPort'.\"}}{{else}}false{{end}}",
				"Message": "Operating System installation failed. Failed to map SCU ISO. Please check image details in Software Repository",
				"ObjectType": "workflow.Outcome",
				"Type": "TerminalError"
			}, {
				"Condition": "{{if .global.OSIStart.output.Status}}{{ContainsString (.global.OSIStart.output.Status | TrimSpace) \"Operation failed. Another instance of non-interactive OSI in progress. Please cancel the existing request.\"}}{{else}}false{{end}}",
				"Error": true,
				"Message": "{{.global.OSIStart.output.Status  | TrimSpace}}",
				"ObjectType": "workflow.Outcome"
			}, {
				"Condition": "{{if .global.OSIStart.output.ErrorCode}}true{{else}}false{{end}}",
				"Error": true,
				"Message": "{{if (ContainsString .global.OSIStart.output.ErrorDescription \"An instance of SCU NI-OSI boot may be in progress\")}}Operating System installation failed. Another instance of Operating System installation agent session may be in progress.{{else}}{{.global.OSIStart.output.ErrorDescription}}{{end}}",
				"ObjectType": "workflow.Outcome"
			}, {
				"Condition": "{{if .global.OSIStart.output.Status}}true{{else}}false{{end}}",
				"Message": "Operating System installation initiated.",
				"ObjectType": "workflow.Outcome"
			}],
			"ResponseSpec": {
				"ErrorParameters": [{
					"AcceptSingleValue": false,
					"ComplexType": "",
					"ItemType": "simple",
					"Name": "ErrorCode",
					"ObjectType": "content.Parameter",
					"Path": "@errorCode",
					"Secure": false,
					"Type": "simple"
				}, {
					"AcceptSingleValue": false,
					"ComplexType": "",
					"ItemType": "simple",
					"Name": "ErrorDescription",
					"ObjectType": "content.Parameter",
					"Path": "@errorDescr",
					"Secure": false,
					"Type": "simple"
				}],
				"ObjectType": "content.Grammar",
				"Parameters": [{
					"AcceptSingleValue": false,
					"ComplexType": "",
					"ItemType": "simple",
					"Name": "Status",
					"ObjectType": "content.Parameter",
					"Path": "//osiStart/@status",
					"Secure": false,
					"Type": "simple"
				}],
				"Types": []
			},
			"Timeout": 300
		}],
		"CancelAction": [],
		"ClassId": "workflow.BatchApiExecutor",
		"Constraints": {
			"ObjectType": "workflow.TaskConstraints",
			"TargetDataType": "null"
		},
		"Description": "Rack Server OS Install Start Task Batch APIs",
		"Name": "StartRackServerOSInstallAgent",
		"ObjectType": "workflow.BatchApiExecutor",
		"SharedScope": "shared",
		"TaskDefinition": {
			"ObjectType": "workflow.TaskDefinition",
			"Selector": "Name eq \"StartRackServerOSInstallAgent\" and Version eq 1"
		}
	},
	"ClassId": "bulk.RestSubRequest",
	"ObjectType": "bulk.RestSubRequest",
	"TargetMoid": "",
	"Uri": "/v1/workflow/BatchApiExecutors",
	"Verb": "POST"
}, {
	"Body": {
		"Batch": [{
			"Body": "<configResolveClass inHierarchical=\"false\" classId=\"commVMediaMap\" />",
			"ContentType": "xml",
			"Name": "VMediaMappingStatus",
			"ObjectType": "workflow.XmlApi",
			"Outcomes": [{
				"Condition": "{{if and (ne .global.VMediaMappingStatus.output.MappingStatus \"OK\") (.global.task.input.ValidateMappingStatus) }}true{{else}}false{{end}}",
				"Message": "Virtual media mapping failed. {{.global.VMediaMappingStatus.output.MappingStatus}}",
				"ObjectType": "workflow.Outcome",
				"Type": "Error"
			}, {
				"Condition": "true",
				"Message": "Virtual media mapping validated.",
				"ObjectType": "workflow.Outcome"
			}],
			"ResponseSpec": {
				"ErrorParameters": [{
					"AcceptSingleValue": false,
					"ComplexType": "",
					"ItemType": "simple",
					"Name": "ErrorCode",
					"ObjectType": "content.Parameter",
					"Path": "//error/@errorCode",
					"Secure": false,
					"Type": "simple"
				}],
				"ObjectType": "content.Grammar",
				"Parameters": [{
					"AcceptSingleValue": false,
					"ComplexType": "",
					"ItemType": "simple",
					"Name": "MappingStatus",
					"ObjectType": "content.Parameter",
					"Path": "//commVMediaMap/@mappingStatus",
					"Secure": false,
					"Type": "simple"
				}, {
					"AcceptSingleValue": false,
					"ComplexType": "",
					"ItemType": "simple",
					"Name": "VolumeName",
					"ObjectType": "content.Parameter",
					"Path": "//commVMediaMap/@volumeName",
					"Secure": false,
					"Type": "simple"
				}],
				"Types": []
			}
		}],
		"CancelAction": [],
		"ClassId": "workflow.BatchApiExecutor",
		"Constraints": {
			"ObjectType": "workflow.TaskConstraints",
			"TargetDataType": "null"
		},
		"Description": "Rack Server Virtual Maedia Mapping Status Validation Task Batch APIs",
		"Name": "ConfirmServerVMediaMappingStatus",
		"ObjectType": "workflow.BatchApiExecutor",
		"Output": {
			"MappingStatus": "{{.global.VMediaMappingStatus.output.MappingStatus | TrimSpace}}",
			"VolumeName": "{{.global.VMediaMappingStatus.output.VolumeName}}"
		},
		"SharedScope": "shared",
		"TaskDefinition": {
			"ObjectType": "workflow.TaskDefinition",
			"Selector": "Name eq \"ConfirmServerVMediaMappingStatus\" and Version eq 1"
		}
	},
	"ClassId": "bulk.RestSubRequest",
	"ObjectType": "bulk.RestSubRequest",
	"TargetMoid": "",
	"Uri": "/v1/workflow/BatchApiExecutors",
	"Verb": "POST"
}, {
	"Body": {
		"Batch": [{
			"Body": "<configConfMo inHierarchical=\"true\" dn=\"sys/svc-ext/vmedia-svc/vmmap-{{.global.task.input.VolumeName}}\"><inConfig> <commVMediaMap dn=\"sys/svc-ext/vmedia-svc/vmmap-{{.global.task.input.VolumeName}}\" volumeName=\"{{.global.task.input.VolumeName}}\"  adminAction=\"save-unmapped-volume\"/></inConfig></configConfMo>",
			"ContentType": "xml",
			"Name": "UnmapVMediaMapping",
			"ObjectType": "workflow.XmlApi",
			"Outcomes": [{
				"Condition": "{{if .global.UnmapVMediaMapping.output.ErrorDescription}}true{{else}}false{{end}}",
				"Error": true,
				"Message": "Virtual media volume unmapping failed. {{.global.UnmapVMediaMapping.output.ErrorDescription}}",
				"ObjectType": "workflow.Outcome"
			}, {
				"Condition": "true",
				"Message": "Virtual media volume unmapped.",
				"ObjectType": "workflow.Outcome"
			}],
			"ResponseSpec": {
				"ErrorParameters": [{
					"AcceptSingleValue": false,
					"ComplexType": "",
					"ItemType": "simple",
					"Name": "ErrorCode",
					"ObjectType": "content.Parameter",
					"Path": "//configConfMo/@errorCode",
					"Secure": false,
					"Type": "simple"
				}, {
					"AcceptSingleValue": false,
					"ComplexType": "",
					"ItemType": "simple",
					"Name": "ErrorDescription",
					"ObjectType": "content.Parameter",
					"Path": "//configConfMo/@errorDescr",
					"Secure": false,
					"Type": "simple"
				}],
				"ObjectType": "content.Grammar",
				"Parameters": [{
					"AcceptSingleValue": false,
					"ComplexType": "",
					"ItemType": "simple",
					"Name": "MappingStatus",
					"ObjectType": "content.Parameter",
					"Path": "//commVMediaMap/@mappingStatus",
					"Secure": false,
					"Type": "simple"
				}],
				"Types": []
			}
		}],
		"CancelAction": [],
		"ClassId": "workflow.BatchApiExecutor",
		"Constraints": {
			"ObjectType": "workflow.TaskConstraints"
		},
		"Description": "This task unmaps an active Virtual Media Mapping in Rack Server",
		"Name": "DisableRackServerVirtualMediaEntry",
		"ObjectType": "workflow.BatchApiExecutor",
		"SharedScope": "shared",
		"SkipOnCondition": "{{if .global.task.input.VolumeName}}false{{else}}true{{end}}",
		"TaskDefinition": {
			"ObjectType": "workflow.TaskDefinition",
			"Selector": "Name eq \"DisableRackserverVMediaMappingEntry\" and Version eq 1"
		}
	},
	"ClassId": "bulk.RestSubRequest",
	"ObjectType": "bulk.RestSubRequest",
	"TargetMoid": "",
	"Uri": "/v1/workflow/BatchApiExecutors",
	"Verb": "POST"
}, {
	"Body": {
		"Batch": [{
			"Body": " <configConfMo inHierarchical=\"true\" dn=\"sys/svc-ext/vmedia-svc/vmmap-{{.global.task.input.VolumeName}}\"><inConfig> <commVMediaMap dn=\"sys/svc-ext/vmedia-svc/vmmap-{{.global.task.input.VolumeName}}\" volumeName=\"{{.global.task.input.VolumeName}}\" remoteShare=\"{{.global.task.input.RemoteShare}}\" remoteFile=\"{{.global.task.input.RemoteFile}}\" map=\"{{.global.task.input.RemoteShareType}}\"  {{ if .global.task.input.RemoteShareUser }} username=\"{{.global.task.input.RemoteShareUser}}\"  {{ end }} {{ if .global.task.input.RemoteSharePassword }} password=\"{{.global.task.input.RemoteSharePassword}}\" {{ end }} {{ if .global.task.input.RemoteShareMountOptions }} mountOptions=\"{{.global.task.input.RemoteShareMountOptions}} {{ end }} /></inConfig></configConfMo>",
			"ContentType": "xml",
			"Name": "NewVMediaMapping",
			"ObjectType": "workflow.XmlApi",
			"Outcomes": [{
				"Condition": "{{if .global.NewVMediaMapping.output.ErrorDescription }}true{{else}}false{{end}}",
				"Error": true,
				"Message": "Virtual media mapping failed. {{.global.NewVMediaMapping.output.ErrorDescription}}",
				"ObjectType": "workflow.Outcome"
			}, {
				"Condition": "true",
				"Message": "Virtual media mapping created.",
				"ObjectType": "workflow.Outcome"
			}],
			"ResponseSpec": {
				"ErrorParameters": [{
					"AcceptSingleValue": false,
					"ComplexType": "",
					"ItemType": "simple",
					"Name": "ErrorCode",
					"ObjectType": "content.Parameter",
					"Path": "//configConfMo/@errorCode",
					"Secure": false,
					"Type": "simple"
				}, {
					"AcceptSingleValue": false,
					"ComplexType": "",
					"ItemType": "simple",
					"Name": "ErrorDescription",
					"ObjectType": "content.Parameter",
					"Path": "//configConfMo/@errorDescr",
					"Secure": false,
					"Type": "simple"
				}],
				"ObjectType": "content.Grammar",
				"Parameters": [{
					"AcceptSingleValue": false,
					"ComplexType": "",
					"ItemType": "simple",
					"Name": "MappingStatus",
					"ObjectType": "content.Parameter",
					"Path": "//commVMediaMap/@mappingStatus",
					"Secure": false,
					"Type": "simple"
				}],
				"Types": []
			}
		}],
		"CancelAction": [],
		"ClassId": "workflow.BatchApiExecutor",
		"Constraints": {
			"ObjectType": "workflow.TaskConstraints"
		},
		"Description": "Rack Server Virtual Media Mapping creation",
		"Name": "CreateRackServerVirtualMedia",
		"ObjectType": "workflow.BatchApiExecutor",
		"Output": {
			"MappingError": "{{.global.NewVMediaMapping.output.ErrorDescription}}",
			"MappingStatus": "{{.global.NewVMediaMapping.output.MappingStatus | TrimSpace}}"
		},
		"SharedScope": "shared",
		"TaskDefinition": {
			"ObjectType": "workflow.TaskDefinition",
			"Selector": "Name eq \"NewVMediaMappingRackEntry\" and Version eq 1"
		}
	},
	"ClassId": "bulk.RestSubRequest",
	"ObjectType": "bulk.RestSubRequest",
	"TargetMoid": "",
	"Uri": "/v1/workflow/BatchApiExecutors",
	"Verb": "POST"
}, {
	"Body": {
		"Batch": [{
			"Body": "<configResolveClass inHierarchical=\"false\" classId=\"osiStatus\" />",
			"ContentType": "xml",
			"Name": "OSIStatus",
			"ObjectType": "workflow.XmlApi",
			"Outcomes": [{
				"Condition": "{{if .global.OSIStatus.output.Status}}{{ContainsString (.global.OSIStatus.output.Status | TrimSpace) \"Operating system ISO file is mounted now\"}}{{else}}false{{end}}",
				"Message": "Operating System ISO mounted.",
				"ObjectType": "workflow.Outcome"
			}, {
				"Condition": "{{if .global.OSIStatus.output.Status}}{{ContainsString (.global.OSIStatus.output.Status | TrimSpace) \"OS install process started\"}}{{else}}false{{end}}",
				"Message": "Operating System installation process started.",
				"ObjectType": "workflow.Outcome"
			}, {
				"Condition": "{{if .global.OSIStatus.output.Status}}{{ContainsString (.global.OSIStatus.output.Status | TrimSpace) \"OS INSTALL COMPLETED\"}}{{else}}false{{end}}",
				"Message": "Operating System installation completed",
				"ObjectType": "workflow.Outcome"
			}, {
				"Condition": "{{if .global.OSIStatus.output.Status}}{{ContainsString (.global.OSIStatus.output.Status | TrimSpace) \"Success\"}}{{else}}false{{end}}",
				"Message": "{{.global.OSIStatus.output.Status  | TrimSpace}}",
				"ObjectType": "workflow.Outcome"
			}, {
				"Condition": "{{if .global.OSIStatus.output.Status}}{{ContainsString (.global.OSIStatus.output.Status | TrimSpace) \"OS media not found. Please provide proper OS media\"}}{{else}}false{{end}}",
				"Message": "Operating System media not valid or not available. Check the Operating System media availability and its software repository configuration.",
				"ObjectType": "workflow.Outcome",
				"Type": "TerminalError"
			}, {
				"Condition": "{{if .global.OSIStatus.output.Status}}{{ContainsString (.global.OSIStatus.output.Status | TrimSpace) \"NI-OSI session not found\"}}{{else}}false{{end}}",
				"Error": true,
				"Message": "Operating System installation failed because the SCU session is not established. Retry, or contact Cisco TAC for assistance.",
				"ObjectType": "workflow.Outcome"
			}, {
				"Condition": "{{if .global.OSIStatus.output.Status}}{{ContainsString (.global.OSIStatus.output.Status | TrimSpace) \"OS install running on this CIMC\"}}{{else}}false{{end}}",
				"Message": "Operating System installation running.",
				"ObjectType": "workflow.Outcome"
			}, {
				"Condition": "{{if .global.OSIStatus.output.Status}}{{ContainsString (.global.OSIStatus.output.Status | TrimSpace) \"SCU (NI-OSI) booting in progress\"}}{{else}}false{{end}}",
				"Error": true,
				"Message": "SCU is booting. If SCU is unable to boot after 60 mins, check the network connectivity of the file server and re-submit the request.",
				"ObjectType": "workflow.Outcome"
			}, {
				"Condition": "{{if .global.OSIStatus.output.Status}}{{ContainsString (.global.OSIStatus.output.Status | TrimSpace) \"NISCU process on Host not started after 60 mins. Unmounted SCU-ISO - Exiting\"}}{{else}}false{{end}}",
				"Message": "Unable to boot SCU after 60 mins. Unmounted SCU ISO. Check network connectivity and re-submit the request.",
				"ObjectType": "workflow.Outcome",
				"Type": "TerminalError"
			}, {
				"Condition": "{{if .global.OSIStatus.output.Status}}{{ContainsString (.global.OSIStatus.output.Status | TrimSpace) \"Error: Preparing hard disk\"}}{{else}}false{{end}}",
				"Message": "{{if .global.task.input.InstallTarget}}{{if eq .global.task.input.InstallTarget.ObjectType \"storage.PhysicalDisk\"}}Physical Disk is corrupted or not properly setup. Configure Physical Disk from the CIMC and restart the installation.{{else}}Virtual Drive is corrupted or not properly setup. Create new virtual drive or initialize the virtual drive from the CIMC and restart the installation.{{end}}{{else}}Virtual Drive is corrupted or not properly setup. Create new virtual drive or initialize the virtual drive from the CIMC and restart the installation.{{end}}",
				"ObjectType": "workflow.Outcome",
				"Type": "TerminalError"
			}, {
				"Condition": "{{if .global.OSIStatus.output.Status}}{{ContainsString (.global.OSIStatus.output.Status | TrimSpace) \"Error: Copy drivers from SCU ISO to temporary location...\"}}{{else}}false{{end}}",
				"Message": "SCU Customization error - Error while copying drivers from SCU ISO to a temporary location. Retry OS Installation for a resolution. Refer to Help Center for more details.",
				"ObjectType": "workflow.Outcome",
				"Type": "TerminalError"
			}, {
				"Condition": "{{if .global.OSIStatus.output.Status}}{{ContainsString (.global.OSIStatus.output.Status | TrimSpace) \"Error: Unsupported/incorrect OS name\"}}{{else}}false{{end}}",
				"Message": "SCU Usage Error - Specified Server Configuration Utility doesn't support the Operating System.",
				"ObjectType": "workflow.Outcome",
				"Type": "TerminalError"
			}, {
				"Condition": "{{if .global.OSIStatus.output.Status}}{{else}}true{{end}}",
				"Error": true,
				"Message": "Operating System Install Error: Failed to fetch Operating System installation status. Please check server reachability. If the issue persists, contact Cisco TAC for resolution.",
				"ObjectType": "workflow.Outcome"
			}, {
				"Condition": "true",
				"Error": true,
				"Message": "Operating System Install Error: {{.global.OSIStatus.output.Status  | TrimSpace}}",
				"ObjectType": "workflow.Outcome"
			}],
			"ResponseSpec": {
				"ErrorParameters": [{
					"AcceptSingleValue": false,
					"ComplexType": "",
					"ItemType": "simple",
					"Name": "ErrorCode",
					"ObjectType": "content.Parameter",
					"Path": "//error/@errorCode",
					"Secure": false,
					"Type": "simple"
				}],
				"ObjectType": "content.Grammar",
				"Parameters": [{
					"AcceptSingleValue": false,
					"ComplexType": "",
					"ItemType": "simple",
					"Name": "Status",
					"ObjectType": "content.Parameter",
					"Path": "//osiStatus/@currentStatus",
					"Secure": false,
					"Type": "simple"
				}],
				"Types": []
			}
		}],
		"CancelAction": [],
		"ClassId": "workflow.BatchApiExecutor",
		"Constraints": {
			"ObjectType": "workflow.TaskConstraints",
			"TargetDataType": "null"
		},
		"Description": "Rack Server OS Install Status Task Batch APIs",
		"Name": "WatchRackServerOSInstallStatus",
		"ObjectType": "workflow.BatchApiExecutor",
		"Output": {
			"Status": "{{if .global.OSIStatus.output.Status}}{{.global.OSIStatus.output.Status | TrimSpace}}{{else}}\"\"{{end}}"
		},
		"SharedScope": "shared",
		"SkipOnCondition": "{{(eq .global.task.input.AnswerSource \"Embedded\")}}",
		"TaskDefinition": {
			"ObjectType": "workflow.TaskDefinition",
			"Selector": "Name eq \"WatchRackServerOSInstallStatus\" and Version eq 1"
		}
	},
	"ClassId": "bulk.RestSubRequest",
	"ObjectType": "bulk.RestSubRequest",
	"TargetMoid": "",
	"Uri": "/v1/workflow/BatchApiExecutors",
	"Verb": "POST"
}, {
	"Body": {
		"Batch": [{
			"Body": "<configConfMo dn=\"sys/rack-unit-1/boot-precision\" inHierarchical=\"true\"> <inConfig> <lsbootDevPrecision dn=\"sys/rack-unit-1/boot-precision\" rebootOnUpdate=\"no\" reapply=\"Yes\" status=\"modified\"><lsbootHdd order=\"1\" type=\"LOCALHDD\"  rn=\"hdd-os\" state=\"Enabled\" {{if .global.task.input.StorageControllerSlotId}}slot=\"{{.global.task.input.StorageControllerSlotId}}\"{{end}} {{if (eq .global.task.input.BootMode \"Uefi\")}}{{if (ContainsString .global.task.input.Model \"M4\")}}{{if (ContainsString .global.task.input.OsVersion \"ESXi\")}} boot-loader-path=\"\\EFI\\BOOT\\\" boot-loader-name=\"BOOTx64.EFI\" boot-loader-descr=\"UEFI_OS\" {{end}}{{end}}{{end}} /><lsbootVMedia  order=\"2\" type=\"VMEDIA\" subtype=\"cimc-mapped-dvd\" name=\"vmos\" state=\"Enabled\" /></lsbootDevPrecision> </inConfig> </configConfMo>",
			"ContentType": "xml",
			"Name": "SetRackServerBootOrder",
			"ObjectType": "workflow.XmlApi",
			"Outcomes": [{
				"Condition": "{{if .global.SetRackServerBootOrder.output.ErrorDescription }}true{{else}}false{{end}}",
				"Message": "Failed to set boot order. {{.global.SetRackServerBootOrder.output.ErrorDescription}}.",
				"ObjectType": "workflow.Outcome",
				"Type": "Error"
			}],
			"ResponseSpec": {
				"ErrorParameters": [{
					"AcceptSingleValue": false,
					"ComplexType": "",
					"ItemType": "simple",
					"Name": "ErrorCode",
					"ObjectType": "content.Parameter",
					"Path": "//configConfMo/@errorCode",
					"Secure": false,
					"Type": "simple"
				}, {
					"AcceptSingleValue": false,
					"ComplexType": "",
					"ItemType": "simple",
					"Name": "ErrorDescription",
					"ObjectType": "content.Parameter",
					"Path": "//configConfMo/@errorDescr",
					"Secure": false,
					"Type": "simple"
				}],
				"ObjectType": "content.Grammar",
				"Parameters": [],
				"Types": []
			}
		}, {
			"Body": "<configConfMo dn=\"sys/rack-unit-1/one-time-precision-boot\" inHierarchical=\"true\"> <inConfig> <oneTimePrecisionBootDevice device={{if ne .global.task.input.AnswerSource \"Embedded\"}}\"os\"{{else}}\"vmos\"{{end}} rebootOnUpdate=\"Yes\"/> </inConfig> </configConfMo>",
			"ContentType": "xml",
			"Name": "SetOneTimeBootOrderRackServer",
			"ObjectType": "workflow.XmlApi",
			"Outcomes": [{
				"Condition": "{{if .global.SetOneTimeBootOrderRackServer.output.ErrorDescription }}true{{else}}false{{end}}",
				"Message": "Failed to set boot order. {{.global.SetOneTimeBootOrderRackServer.output.ErrorDescription}}.",
				"ObjectType": "workflow.Outcome",
				"Type": "Error"
			}, {
				"Condition": "true",
				"Message": "Boot order configured.",
				"ObjectType": "workflow.Outcome"
			}],
			"ResponseSpec": {
				"ErrorParameters": [{
					"AcceptSingleValue": false,
					"ComplexType": "",
					"ItemType": "simple",
					"Name": "ErrorCode",
					"ObjectType": "content.Parameter",
					"Path": "//configConfMo/@errorCode",
					"Secure": false,
					"Type": "simple"
				}, {
					"AcceptSingleValue": false,
					"ComplexType": "",
					"ItemType": "simple",
					"Name": "ErrorDescription",
					"ObjectType": "content.Parameter",
					"Path": "//configConfMo/@errorDescr",
					"Secure": false,
					"Type": "simple"
				}],
				"ObjectType": "content.Grammar",
				"Parameters": [],
				"Types": []
			}
		}],
		"CancelAction": [],
		"ClassId": "workflow.BatchApiExecutor",
		"Constraints": {
			"ObjectType": "workflow.TaskConstraints",
			"TargetDataType": "null"
		},
		"Description": "Rack Server Boot order Task Batch APIs",
		"Name": "SetRackServerBootOrder",
		"ObjectType": "workflow.BatchApiExecutor",
		"SharedScope": "shared",
		"TaskDefinition": {
			"ObjectType": "workflow.TaskDefinition",
			"Selector": "Name eq \"SetRackServerBootOrder\" and Version eq 1"
		}
	},
	"ClassId": "bulk.RestSubRequest",
	"ObjectType": "bulk.RestSubRequest",
	"TargetMoid": "",
	"Uri": "/v1/workflow/BatchApiExecutors",
	"Verb": "POST"
}, {
	"Body": {
		"Batch": [{
			"ContentType": "json",
			"EndpointRequestType": "Internal",
			"Method": "GET",
			"Name": "QueryServerSettingMo",
			"ObjectType": "workflow.WebApi",
			"Outcomes": [{
				"Condition": "{{(ne .global.QueryServerSettingMo.output.HttpStatusCode 200)}}",
				"Error": true,
				"Message": "{{.global.QueryServerSettingMo.output.HttpStatusMsg}}",
				"ObjectType": "workflow.Outcome"
			}, {
				"Condition": "{{ (lt (len .global.QueryServerSettingMo.output.Results)  1) }}",
				"Error": true,
				"Message": "Could not find ServerSettings for the Server Moid {{.global.task.input.Server.Moid}}",
				"ObjectType": "workflow.Outcome"
			}, {
				"Condition": "true",
				"Message": "ServerSettings for Server Moid {{.global.task.input.Server.Moid}} found successfully",
				"ObjectType": "workflow.Outcome"
			}],
			"Protocol": "https",
			"ResponseSpec": {
				"ErrorParameters": [],
				"ObjectType": "content.Grammar",
				"Parameters": [{
					"AcceptSingleValue": false,
					"ComplexType": "",
					"ItemType": "simple",
					"Name": "Results",
					"ObjectType": "content.Parameter",
					"Path": "$.Results",
					"Type": "collection"
				}, {
					"AcceptSingleValue": false,
					"ComplexType": "",
					"ItemType": "simple",
					"Name": "Moid",
					"ObjectType": "content.Parameter",
					"Path": "$.Results[0].Moid",
					"Type": "simple"
				}],
				"Types": []
			},
			"TargetType": "Local",
			"Url": "/v1/compute/ServerSettings?$filter=Server.Moid eq '{{.global.task.input.Server.Moid}}'"
		}, {
			"Body": "{ {{if eq .global.task.input.PowerState \"Power On\"}}\"AdminPowerState\":\"PowerOn\" {{else if eq .global.task.input.PowerState \"Power Off\"}} \"AdminPowerState\":\"PowerOff\" {{else if eq .global.task.input.PowerState \"Power Cycle\"}} \"AdminPowerState\":\"PowerCycle\" {{else if eq .global.task.input.PowerState \"Hard Reset\"}} \"AdminPowerState\":\"HardReset\" {{end}} }",
			"ContentType": "json",
			"EndpointRequestType": "Internal",
			"Method": "POST",
			"Name": "SetState",
			"ObjectType": "workflow.WebApi",
			"Outcomes": [{
				"Condition": "{{(ne .global.SetState.output.HttpStatusCode 200)}}",
				"Error": true,
				"Message": "{{.global.SetState.output.HttpStatusMsg}}",
				"ObjectType": "workflow.Outcome"
			}, {
				"Condition": "{{(eq .global.task.input.PowerState \"Power Off\")}}",
				"Message": "Server Powered off successfully",
				"ObjectType": "workflow.Outcome"
			}, {
				"Condition": "{{(eq .global.task.input.PowerState \"Power On\")}}",
				"Message": "Server Powered on successfully",
				"ObjectType": "workflow.Outcome"
			}, {
				"Condition": "{{(eq .global.task.input.PowerState \"Power Cycle\")}}",
				"Message": "Server Power cycled successfully",
				"ObjectType": "workflow.Outcome"
			}, {
				"Condition": "{{(eq .global.task.input.PowerState \"Hard Reset\")}}",
				"Message": "Server Hard Reset successfully",
				"ObjectType": "workflow.Outcome"
			}],
			"Protocol": "https",
			"ResponseSpec": {
				"ErrorParameters": [],
				"ObjectType": "content.Grammar",
				"Parameters": [{
					"AcceptSingleValue": false,
					"ComplexType": "MoRef",
					"ItemType": "simple",
					"Name": "Workflow",
					"ObjectType": "content.Parameter",
					"Path": "$.RunningWorkflow",
					"Type": "complex"
				}],
				"Types": [{
					"Name": "MoRef",
					"ObjectType": "content.ComplexType",
					"Parameters": [{
						"AcceptSingleValue": false,
						"ComplexType": "",
						"ItemType": "simple",
						"Name": "ObjectType",
						"ObjectType": "content.Parameter",
						"Path": "$.ObjectType",
						"Type": "simple"
					}, {
						"AcceptSingleValue": false,
						"ComplexType": "",
						"ItemType": "simple",
						"Name": "Moid",
						"ObjectType": "content.Parameter",
						"Path": "$.Moid",
						"Type": "simple"
					}]
				}]
			},
			"TargetType": "Local",
			"Url": "/v1/compute/ServerSettings/{{.global.QueryServerSettingMo.output.Moid}}"
		}],
		"CancelAction": [],
		"ClassId": "workflow.BatchApiExecutor",
		"Constraints": {
			"ObjectType": "workflow.TaskConstraints"
		},
		"Description": "Sets Server Power state to Power On, Power Off, Power Cycle or Hard Reset.",
		"Name": "SetServerPowerStateImpl",
		"ObjectType": "workflow.BatchApiExecutor",
		"Output": {
			"Workflow": "{{.global.SetState.output.Workflow  | ToJson}}"
		},
		"SharedScope": "shared",
		"TaskDefinition": {
			"ObjectType": "workflow.TaskDefinition",
			"Selector": "Name eq \"SetServerPowerStateImpl\" and Version eq 1"
		}
	},
	"ClassId": "bulk.RestSubRequest",
	"ObjectType": "bulk.RestSubRequest",
	"TargetMoid": "",
	"Uri": "/v1/workflow/BatchApiExecutors",
	"Verb": "POST"
}, {
	"Body": {
		"Batch": [{
			"Body": "{\"Datacenter\":\"{{.global.task.input.Datacenter}}\",\"Host\":\"{{.global.task.input.Host}}\",\"Vcenter\":\"{{.global.task.input.Vcenter}}\"}",
			"ContentType": "json",
			"EndpointRequestType": "Internal",
			"Method": "POST",
			"Name": "RemoveVmwareHost",
			"ObjectType": "workflow.WebApi",
			"Outcomes": [{
				"Condition": "{{(ne .global.RemoveVmwareHost.output.HttpStatusCode 200)}}",
				"Error": true,
				"Message": "Failed to remove host. Message: {{.global.RemoveVmwareHost.output.HttpStatusMsg}}",
				"ObjectType": "workflow.Outcome"
			}, {
				"Condition": "true",
				"Message": "Host '{{.global.RemoveVmwareHost.output.Host}}' removed successfully.",
				"ObjectType": "workflow.Outcome"
			}],
			"Protocol": "https",
			"ResponseSpec": {
				"ErrorParameters": [],
				"ObjectType": "content.Grammar",
				"Parameters": [{
					"AcceptSingleValue": false,
					"ComplexType": "",
					"ItemType": "simple",
					"Name": "Host",
					"ObjectType": "content.Parameter",
					"Path": "$.Host",
					"Secure": false,
					"Type": "simple"
				}],
				"Types": []
			},
			"TargetType": "Endpoint",
			"Url": "/task/Execute/RemoveHost"
		}],
		"CancelAction": [],
		"ClassId": "workflow.BatchApiExecutor",
		"Constraints": {
			"ObjectType": "workflow.TaskConstraints"
		},
		"Description": "Remove host from selected hypervisor",
		"Name": "RemoveVmwareHost",
		"ObjectType": "workflow.BatchApiExecutor",
		"Output": {
			"Host": "{{.global.RemoveVmwareHost.output.Host}}"
		},
		"SharedScope": "shared",
		"TaskDefinition": {
			"ObjectType": "workflow.TaskDefinition",
			"Selector": "Name eq \"RemoveVmwareHost\" and Version eq 1"
		}
	},
	"ClassId": "bulk.RestSubRequest",
	"ObjectType": "bulk.RestSubRequest",
	"TargetMoid": "",
	"Uri": "/v1/workflow/BatchApiExecutors",
	"Verb": "POST"
}, {
	"Body": {
		"Batch": [{
			"Body": "{ {{if .global.task.input.Cluster}}\"Cluster\":\"{{.global.task.input.Cluster}}\",{{ end }} \"ConnectNow\":{{.global.task.input.ConnectNow}},\"Datacenter\":\"{{.global.task.input.Datacenter}}\",\"Host\":\"{{.global.task.input.Host}}\",\"Password\":\"{{.global.task.input.Password}}\",\"Username\":\"{{.global.task.input.Username}}\",\"Vcenter\":\"{{.global.task.input.Vcenter}}\"}",
			"ContentType": "json",
			"EndpointRequestType": "Internal",
			"Method": "POST",
			"Name": "NewVmwareHost",
			"ObjectType": "workflow.WebApi",
			"Outcomes": [{
				"Condition": "{{(ne .global.NewVmwareHost.output.HttpStatusCode 200)}}",
				"Error": true,
				"Message": "Failed to add host. Message: {{.global.NewVmwareHost.output.HttpStatusMsg}}",
				"ObjectType": "workflow.Outcome"
			}, {
				"Condition": "true",
				"Message": "Host '{{.global.NewVmwareHost.output.Host}}' added successfully.",
				"ObjectType": "workflow.Outcome"
			}],
			"Protocol": "https",
			"ResponseSpec": {
				"ErrorParameters": [],
				"ObjectType": "content.Grammar",
				"Parameters": [{
					"AcceptSingleValue": false,
					"ComplexType": "",
					"ItemType": "simple",
					"Name": "Host",
					"ObjectType": "content.Parameter",
					"Path": "$.Hostname",
					"Secure": false,
					"Type": "simple"
				}],
				"Types": []
			},
			"TargetType": "Endpoint",
			"Timeout": 300,
			"Url": "/task/Execute/AddHost"
		}],
		"CancelAction": [],
		"ClassId": "workflow.BatchApiExecutor",
		"Constraints": {
			"ObjectType": "workflow.TaskConstraints"
		},
		"Description": "Adds host to the selected hypervisor.",
		"Name": "NewVmwareHost",
		"ObjectType": "workflow.BatchApiExecutor",
		"Output": {
			"Host": "{{.global.NewVmwareHost.output.Host}}"
		},
		"SharedScope": "shared",
		"TaskDefinition": {
			"ObjectType": "workflow.TaskDefinition",
			"Selector": "Name eq \"NewVmwareHost\" and Version eq 1"
		}
	},
	"ClassId": "bulk.RestSubRequest",
	"ObjectType": "bulk.RestSubRequest",
	"TargetMoid": "",
	"Uri": "/v1/workflow/BatchApiExecutors",
	"Verb": "POST"
}]